SELECT host,port,username,password,database_name,concat('select ','"lms",','"" table_name',', count(1) data_cnt, ','"" year,','"" month,','"" day,','now() update_time ','from ','lms','.','') FROM tb_get_conn_info where host='172.30.16.250' and database_name='lms'

;
drop table if exists tmp.tb_data_count_tb_lb_custinfo

;
drop table if exists tmp.tb_data_count_tb_lb_applyinfo

;
SELECT host,port,username,password,database_name,concat('select ','"riskmgmt",','"" table_name',', count(1) data_cnt, ','"" year,','"" month,','"" day,','now() update_time ','from ','riskmgmt','.','') FROM tb_get_conn_info where host='172.30.17.247' and database_name='riskmgmt'

;
CREATE TABLE tmp.tb_data_count_tb_lb_custinfo(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
CREATE TABLE tmp.tb_data_count_tb_lb_applyinfo(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
SELECT host,port,username,password,database_name,concat('select ','"lms",','"v_bd_tb_contact" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','lms','.','v_bd_tb_contact') FROM tb_get_conn_info where host='172.30.16.250' and database_name='lms'

;
SELECT host,port,username,password,database_name,concat('select ','"lms",','"v_bd_tb_lb_applyinfo" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','lms','.','v_bd_tb_lb_applyinfo') FROM tb_get_conn_info where host='172.30.16.250' and database_name='lms'

;
alter table tmp.tb_lb_applyaudit_last add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_lb_applyaudit_last/2019/07/23'

;
INSERT OVERWRITE TABLE ods_lms.tb_lb_applyaudit_last select applyid applyid,lastauditby lastauditby,lastauditby_md5 lastauditby_md5,lastauditbyname lastauditbyname,lastauditbyname_md5 lastauditbyname_md5,lastaudittime lastaudittime,lastauditamt lastauditamt,lastaduitphases lastaduitphases,lastrate lastrate,lastmanagefees lastmanagefees,lastfee lastfee,lastauditresult lastauditresult,denyby denyby,denyby_md5 denyby_md5,denybyname denybyname,denybyname_md5 denybyname_md5,denytime denytime,denyreason denyreason,cancelby cancelby,cancelby_md5 cancelby_md5,cancelbyname cancelbyname,cancelbyname_md5 cancelbyname_md5,canceltime canceltime,cancelreason cancelreason,invalidby invalidby,invalidby_md5 invalidby_md5,invalidbyname invalidbyname,invalidbyname_md5 invalidbyname_md5,invalidtime invalidtime,invalidreason invalidreason,lastaduitphasest lastaduitphasest,payratio payratio,margin_rate margin_rate,balance_rate balance_rate,balance balance,firstpayed firstpayed,totalrate totalrate,last_audit_loan_amt last_audit_loan_amt,is_tongdun_passed is_tongdun_passed,gps_flag gps_flag from tmp.tb_lb_applyaudit_last WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_contact

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_lb_custinfo

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_lb_applyinfo

;
alter table tmp.credit_param add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/credit_param/2019/07/23'

;
USE `ods_lms`

;
SELECT * from ods_credit_loan.tn_fms_loan where product_type='360_car_loan'

;
USE `default`

;
select regexp_replace(date_sub(current_date,0),'-','') as date , regexp_replace(substr(add_months(cast(current_date as string),0),1,7),'-','') as v_e_month , regexp_replace(substr(add_months(cast(current_date as string),0),1,7),'-','') as v_s_month

;
alter table tmp.tb_lb_applyinfo add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_lb_applyinfo/2019/07/23'

;
INSERT OVERWRITE TABLE ods_sensitive.credit_param select id id,code code,request_param request_param,create_time create_time from tmp.credit_param WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
INSERT OVERWRITE TABLE ods_lms.tb_lb_applyinfo select loan_sources loan_sources,last_apply_id last_apply_id,reloan_type reloan_type,reloan_flag reloan_flag,dealer_name dealer_name,orgno orgno,hklx hklx,ratedisplay ratedisplay,createbyid createbyid,mtqksm mtqksm,qq_md5 qq_md5,guar_amt guar_amt,childnum childnum,modifytime modifytime,yhknl yhknl,purchase_tax_amt purchase_tax_amt,gifts_amt gifts_amt,audittime audittime,mfeedisplay mfeedisplay,totalrate totalrate,productname productname,first_payment_amt first_payment_amt,assprice assprice,loantype loantype,sources sources,postal_addr postal_addr,feedisplay feedisplay,applycode applycode,loantime loantime,single_premiums single_premiums,exitstatus exitstatus,payment payment,license_plate_amt license_plate_amt,sfcs sfcs,dkfs dkfs,parmrate2 parmrate2,interviews interviews,reportid reportid,directseller directseller,otherstatus otherstatus,id id,region region,createtime createtime,mutual_loan_model mutual_loan_model,rate rate,hkfs hkfs,createby createby,monthpay monthpay,purpose purpose,gps_amt gps_amt,car_price_amt car_price_amt,modifyby modifyby,weixin_md5 weixin_md5,products products,first_pay_target first_pay_target,auditby auditby,managefeerate managefeerate,status status,productarea productarea,feerate feerate,applydate applydate,loantimetype loantimetype,siteno siteno,exitto exitto,pgj pgj,loanmode loanmode,shoppingchannel shoppingchannel,amount amount,dln_md5 dln_md5,parmrate3 parmrate3,isout isout,salesman salesman,direct_empid direct_empid,parmrate1 parmrate1,insure_fee_amt insure_fee_amt,rent_capital_total rent_capital_total,additional_process_type additional_process_type,manage_fee_flag manage_fee_flag from tmp.tb_lb_applyinfo WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
alter table tmp.tb_lb_custinfo add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_lb_custinfo/2019/07/23'

;
INSERT OVERWRITE TABLE stg_sensitive.credit_param PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,code code,request_param request_param,create_time create_time from tmp.credit_param WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
SELECT * from ods_credit_loan.tn_fms_repay_plan

;
drop table IF EXISTS  tmp.tb_lb_applyaudit_last

;
INSERT OVERWRITE TABLE stg_lms.tb_contact PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select row_id row_id,last_name last_name,last_name_md5 last_name_md5,last_py_md5 last_py_md5,sex sex,married married,childrens childrens,childinfo childinfo,pri_phone pri_phone,pri_phone_md5 pri_phone_md5,sec_phone sec_phone,sec_phone_md5 sec_phone_md5,home_phone home_phone,home_phone_md5 home_phone_md5,home_address home_address,only_house only_house,house_type house_type,birth_dt birth_dt,id_type id_type,id_code id_code,id_code_md5 id_code_md5,id_expire_dt id_expire_dt,nature_type nature_type,nature_state nature_state,nature_city nature_city,nature_cityzone nature_cityzone,nature_street nature_street,e_address e_address,e_address_md5 e_address_md5,qq_code_md5 qq_code_md5,wx_code_md5 wx_code_md5,local_state local_state,local_city local_city,local_cityzone local_cityzone,local_street local_street,local_street_md local_street_md,to_local_dt to_local_dt,education education,pay_dt pay_dt,installment_amt installment_amt,ex_start_time ex_start_time,ex_end_time ex_end_time,ex_addr_type ex_addr_type,ex_address ex_address,gps_address gps_address,manager_id manager_id,org_id org_id,src_channel src_channel,db_upd_sys db_upd_sys,create_by create_by,create_date create_date,last_upd_by last_upd_by,last_upd_date last_upd_date,valid valid,con_status con_status,houses houses,bz bz,operate_status operate_status,is_ccreditcard is_ccreditcard,creditcard_quota creditcard_quota,is_social is_social,sesame_points sesame_points,cohabit cohabit,cohabitdj cohabitdj,cohabitfm cohabitfm,cohabitxd cohabitxd,cohabitts cohabitts,cohabitpo cohabitpo,cohabitzn cohabitzn,cohabitqt cohabitqt,now_living_year now_living_year,local_living_year local_living_year,managerno managerno,service_code service_code,jxl_auth_id jxl_auth_id,nation nation,idcardvalid idcardvalid,liability_info liability_info,fddid fddid,is_agree_call is_agree_call,loan_use loan_use,naturefulladdress naturefulladdress,biz_channel biz_channel,drive_license drive_license,issuing_authority issuing_authority,e_address_md5_nosalt e_address_md5_nosalt,credit_card_email credit_card_email,id_code_end id_code_end,id_code_start id_code_start,liability liability from tmp.tb_contact WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
drop table IF EXISTS  tmp.credit_param

;
select 'ods_lms','tb_lb_applyinfo',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_lms.tb_lb_applyinfo

;
INSERT OVERWRITE TABLE stg_lms.tb_lb_custinfo PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,applyid applyid,custtype custtype,custrelation custrelation,custname custname,custname_md5 custname_md5,age age,gender gender,marry marry,doctype doctype,docno docno,docno_md5 docno_md5,socialsecurity socialsecurity,socialsecurity_md5 socialsecurity_md5,tempdocno tempdocno,birthday birthday,birthplace birthplace,household household,education education,mobile mobile,mobile_md5 mobile_md5,email email,email_md5 email_md5,mailtype mailtype,know know,insider insider,insider_md5 insider_md5,relation relation,spousename spousename,spousename_md5 spousename_md5,spouseage spouseage,spousetel spousetel,spousetel_md5 spousetel_md5,spousecorp spousecorp,spouseduties spouseduties,spouseaddr spouseaddr,spousecorptel spousecorptel,spousesalary spousesalary,estateaddr estateaddr,estatebuymode estatebuymode,estatebuydate estatebuydate,estateyearbuilt estateyearbuilt,estatearea estatearea,estatemorbank estatemorbank,estateprice estateprice,estateloanperiod estateloanperiod,estaterepayamt estaterepayamt,estateamount estateamount,estateresum estateresum,comeheredate comeheredate,zipcode zipcode,livetime livetime,qqno_md5 qqno_md5,spousedocno spousedocno,spousedepartment spousedepartment,carbuymode carbuymode,carprice carprice,carpayamt carpayamt,creditcardnum creditcardnum,creditmaxamt creditmaxamt,onebankname onebankname,onebankmaxamt onebankmaxamt,investmentpro investmentpro,mobile2 mobile2,mobile2_md5 mobile2_md5,mobile3 mobile3,mobile3_md5 mobile3_md5,province province,city city,cityzone cityzone,mobilecode mobilecode,mobilecode2 mobilecode2,mobilecode3 mobilecode3,spousetelcode spousetelcode,spousecorptelcode spousecorptelcode,spousecorpsubtel spousecorpsubtel,spousecorpsubtel_md5 spousecorpsubtel_md5,pinyin pinyin,birthplacetype birthplacetype,childnum childnum,qq_md5 qq_md5,microletter_md5 microletter_md5,knowdk knowdk,edutype edutype,eduyear eduyear,entertear entertear,graduatetime graduatetime,facultyname facultyname,stuno stuno,dln dln,channel_user channel_user,sources sources,chsi chsi,home_addr home_addr,graduate graduate,bank_phone bank_phone,bank_phone_md5 bank_phone_md5,receive_addr receive_addr,touna_user_id touna_user_id,childreninfo childreninfo,job_type job_type,person_liability person_liability,mobileemail mobileemail,residence residence,spousejobtype spousejobtype,city_id city_id,cityzone_id cityzone_id,province_id province_id,spousedocno_md5 spousedocno_md5,tempdocno_md5 tempdocno_md5,email_md5_nosalt email_md5_nosalt,doc_end_date doc_end_date,doc_start_date doc_start_date from tmp.tb_lb_custinfo WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
select 'ods_lms','tb_lb_custinfo',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_lms.tb_lb_custinfo

;
drop table if exists tmp.tb_data_count_tb_lm_paymentdetail

;
CREATE TABLE tmp.tb_data_count_tb_lm_paymentdetail(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
drop table IF EXISTS  tmp.tb_contact

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='lms' AND table_name='tb_lm_payment' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
drop table IF EXISTS  tmp.tb_lb_custinfo

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='lms' AND table_name='tb_lm_contract' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
DROP TABLE if exists ods_sensitive.tb_user_latlon_info

;
CREATE TABLE ods_sensitive.`tb_user_latlon_info`  ( `id` int, `name` varchar(255)  COMMENT '姓名', `mobile` varchar(11) COMMENT '申请人手机号', `idCard` varchar(32) COMMENT '身份证号', `lat`  DECIMAL(12,  10)  COMMENT  '纬度', `lon`  DECIMAL(12,  9)  COMMENT  '经度', `productType` varchar(20)   COMMENT '产品类型', `credit_time` date  COMMENT '授信时间', `businessChannels` varchar(100)   COMMENT '渠道', `status` int COMMENT '状态 1 有效，0无效', `create_time` timestamp COMMENT '申请时间' ) comment '数仓加工表：信贷用户经纬度信息' row format delimited fields terminated by '\001' STORED AS TEXTFILE

;
insert overwrite table ods_sensitive.`tb_user_latlon_info` select row_number() over() id, * from ( SELECT max(get_json_object(request_msg, '$.name')) name , max(get_json_object(request_msg, '$.mobile')) mobile , max(get_json_object(request_msg, '$.idCard')) idCard , max(coalesce(get_json_object(request_msg, '$.appLatitude'),'')) ck_app_latitude , max(coalesce(get_json_object(request_msg, '$.appLongitude'),'')) ck_app_longitude , max(get_json_object(request_msg, '$.productType')) productType , max(to_date(resp_time)) as apply_time , max(get_json_object(request_msg, '$.businessChannels')) businessChannels , '1' as status , null create_time FROM ods_sensitive.tb_raf_access_rd group by request_id UNION all SELECT max(get_json_object(request_msg, '$.name')) `name` , max(get_json_object(request_msg, '$.mobile')) mobile , max(get_json_object(request_msg, '$.idCard')) idCard , max(coalesce(get_json_object(request_msg, '$.bizContent.appLatitude'),'')) ck_app_latitude , max(coalesce(get_json_object(request_msg, '$.bizContent.appLongitude'),'')) ck_app_longitude , max(get_json_object(request_msg, '$.productType')) productType , max(from_unixtime(cast(request_time/1000 as int),'yyyy-MM-dd')) as apply_time , max(get_json_object(request_msg, '$.businessChannels')) businessChannels , '1' as `status` , null create_time FROM provider_api_db.tio_decision_credit_json group by request_id ) tmp WHERE mobile is not null and mobile != '' AND ck_app_latitude != ''

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_lm_paymentdetail

;
INSERT OVERWRITE TABLE ods_lms.tb_lm_paymentdetail select id id,paymentid paymentid,bankaccount bankaccount,bankaccount_md5 bankaccount_md5,bank bank,bankno bankno,bankno_md5 bankno_md5,payamt payamt,fees fees,actualpayamt actualpayamt,confirmman confirmman,confirmdate confirmdate,confirmuser confirmuser,status status,banktype banktype,checkstatus checkstatus,checkby checkby,checkdate checkdate,payment payment,bankbranch bankbranch,paybankaccount paybankaccount,auditstatus auditstatus,auditby auditby,auditdate auditdate,jclearamt jclearamt,jloanid jloanid,checkmark checkmark,auditremark auditremark,comfirmremark comfirmremark,fkkjfees fkkjfees,ysxf ysxf,fkapplyby fkapplyby,fkapplydate fkapplydate,fkremark fkremark,ysxfamt ysxfamt,createby createby,createdate createdate,fkapplystatus fkapplystatus,paytype paytype,applyid applyid,contractid contractid,isfullscale isfullscale,fincheckstatus fincheckstatus,fincheckby fincheckby,fincheckdate fincheckdate,fincheckdes fincheckdes,finauditstatus finauditstatus,finauditby finauditby,finauditdate finauditdate,finauditdes finauditdes,returnremark returnremark,channel channel,risk_doc_status risk_doc_status,risk_doc_upload_by risk_doc_upload_by,risk_doc_upload_date risk_doc_upload_date,ismortafterloan ismortafterloan,djzstatus djzstatus,mort_distribute_by mort_distribute_by,mort_distribute_time mort_distribute_time,mort_do_by mort_do_by,mort_do_time mort_do_time,mort_check_time mort_check_time from tmp.tb_lm_paymentdetail WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
drop table if exists tmp.tb_data_count_tb_lm_contract

;
CREATE TABLE tmp.tb_data_count_tb_lm_contract(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
SELECT host,port,username,password,database_name,concat('select ','"decision",','"" table_name',', count(1) data_cnt, ','"" year,','"" month,','"" day,','now() update_time ','from ','decision','.','') FROM tb_get_conn_info where host='172.30.16.250' and database_name='decision'

;
SELECT host,port,username,password,database_name,concat('select ','"decision",','"v_bd_tb_lb_decision_result" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','decision','.','v_bd_tb_lb_decision_result') FROM tb_get_conn_info where host='172.30.16.250' and database_name='decision'

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-hadoop/20190723/155267/7914110092641083//data' select apply_code,Vehicle_BuyDate,Apt_ReLoan_Type from ods_sensitive.car_decision_input_dec where data_date='2019-07-20' and length(Vehicle_BuyDate)=0  and Apt_ReLoan_Type='0' limit 10

;
INSERT OVERWRITE TABLE stg_lms.tb_lm_paymentdetail PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,paymentid paymentid,bankaccount bankaccount,bankaccount_md5 bankaccount_md5,bank bank,bankno bankno,bankno_md5 bankno_md5,payamt payamt,fees fees,actualpayamt actualpayamt,confirmman confirmman,confirmdate confirmdate,confirmuser confirmuser,status status,banktype banktype,checkstatus checkstatus,checkby checkby,checkdate checkdate,payment payment,bankbranch bankbranch,paybankaccount paybankaccount,auditstatus auditstatus,auditby auditby,auditdate auditdate,jclearamt jclearamt,jloanid jloanid,checkmark checkmark,auditremark auditremark,comfirmremark comfirmremark,fkkjfees fkkjfees,ysxf ysxf,fkapplyby fkapplyby,fkapplydate fkapplydate,fkremark fkremark,ysxfamt ysxfamt,createby createby,createdate createdate,fkapplystatus fkapplystatus,paytype paytype,applyid applyid,contractid contractid,isfullscale isfullscale,fincheckstatus fincheckstatus,fincheckby fincheckby,fincheckdate fincheckdate,fincheckdes fincheckdes,finauditstatus finauditstatus,finauditby finauditby,finauditdate finauditdate,finauditdes finauditdes,returnremark returnremark,channel channel,risk_doc_status risk_doc_status,risk_doc_upload_by risk_doc_upload_by,risk_doc_upload_date risk_doc_upload_date,ismortafterloan ismortafterloan,djzstatus djzstatus,mort_distribute_by mort_distribute_by,mort_distribute_time mort_distribute_time,mort_do_by mort_do_by,mort_do_time mort_do_time,mort_check_time mort_check_time from tmp.tb_lm_paymentdetail WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
alter table tmp.tb_lm_payment add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_lm_payment/2019/07/23'

;
INSERT OVERWRITE TABLE ods_lms.tb_lm_payment select id id,applyid applyid,contractid contractid,loanno loanno,amt amt,payment payment,usefor usefor,rate rate,feerate feerate,loanfees loanfees,managefeerate managefeerate,managefees managefees,delayfeerate delayfeerate,payfee payfee,delayrate delayrate,clearrate clearrate,loandate loandate,startdate startdate,enddate enddate,balanceday balanceday,iscompound iscompound,isfees isfees,fees fees,isdeduct isdeduct,isdelayfees isdelayfees,loanstatus loanstatus,returnstatus returnstatus,remark remark,createby createby,createtime createtime,modifyby modifyby,modifytime modifytime,applyman applyman,status status,chkidcard chkidcard,chkdh chkdh,jloanid jloanid,jclearamt jclearamt,qybzj qybzj,fkkjfees fkkjfees,ysxf ysxf,ysxfamt ysxfamt,isautocreate isautocreate,actualamt actualamt,custname custname,custname_md5 custname_md5,custno custno,custno_md5 custno_md5,payamt payamt,leftamt leftamt,siteno siteno,contractno contractno,fkapplydate fkapplydate,fkapplyby fkapplyby,fkapplystatus fkapplystatus,fktimes fktimes,minpdid minpdid,canpay canpay,usdelayint usdelayint,fksubmitdate fksubmitdate,final_amt final_amt,down_amt down_amt,deposit_amt deposit_amt,touna_bid touna_bid,issueremark issueremark,issueby issueby,issuedate issuedate,issueresult issueresult,is_money_custody is_money_custody,belong_to_ratio belong_to_ratio,mort_status mort_status,pay_for_touna pay_for_touna,buckle_confirmed_status buckle_confirmed_status,buckle_confirmed_remark buckle_confirmed_remark,buckle_confirmed_time buckle_confirmed_time from tmp.tb_lm_payment WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-hadoop/20190723/155269/7914148089116581//data' select sum(account)account_q2 from ods_touna.dw_borrow WHERE  status  IN(3,73) and  FROM_UNIXTIME(cast(a.verify_time as int ),'yyyy-MM-dd') <= '2019-06-30' and  FROM_UNIXTIME(cast(a.verify_time as int ),'yyyy-MM-dd') >= '2019-04-01'

;
alter table tmp.tb_lm_contract add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_lm_contract/2019/07/23'

;
drop table if exists tmp.tb_data_count_tb_lb_decision_result

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-hadoop/20190723/155271/7914175251480647//data' select sum(account)account_q2 from ods_touna.dw_borrow  a WHERE  status  IN(3,73) and  FROM_UNIXTIME(cast(a.verify_time as int ),'yyyy-MM-dd') <= '2019-06-30' and  FROM_UNIXTIME(cast(a.verify_time as int ),'yyyy-MM-dd') >= '2019-04-01'

;
SELECT apply_no,cur_overdue_cnt,cur_overdue_amt,cur_overdue_amount,overdue_cnt,update_time,dm_updatetime,query_time,max_curr_overdue_terms FROM risk_dm.third_dm_zixin

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-hadoop/20190723/155272/7914206773287296//data' select apply_code,Vehicle_BuyDate,Apt_ReLoan_Type from ods_sensitive.car_decision_input_dec where data_date=('2019-07-18','2019-07-19','2019-07-20','2019-07-21','2019-07-22') and length(Vehicle_BuyDate)=0  and Apt_ReLoan_Type='0' limit 10

;
select 'ods_lms','tb_lm_payment',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_lms.tb_lm_payment

;
drop table IF EXISTS  tmp.tb_lm_paymentdetail

;
select 'ods_lms','tb_lm_contract',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_lms.tb_lm_contract

;
INSERT OVERWRITE TABLE ods_lms.tb_lb_decision_result select id id,apply_code apply_code,next_opr_step next_opr_step,loan_to_vaule loan_to_vaule,ext_bureau_list ext_bureau_list,ext_bureau_complete ext_bureau_complete,delegation delegation,random_num random_num,evaluate_price evaluate_price,base_score base_score,decision_text decision_text,reason_code reason_code,sum_score sum_score,risk_grade risk_grade,risk_tips risk_tips,status status,last_update_time last_update_time,call_point call_point,annual_pay annual_pay,violation_pay violation_pay,insurance_deductions insurance_deductions,total_deductions total_deductions,site_category site_category,approval_category approval_category,suggest_loan_amt suggest_loan_amt,apro_max_credit_amt apro_max_credit_amt,j_insurance_deductions j_insurance_deductions,s_insurance_deductions s_insurance_deductions,hot_tips hot_tips,model_ltv model_ltv,model_pro model_pro,admittance_flag admittance_flag,repayment_mode repayment_mode,pro_credit_amt pro_credit_amt,res_loan_mode res_loan_mode,res_antifraud_score res_antifraud_score,res_high_value_consume res_high_value_consume,res_version res_version,res_loan_time res_loan_time,res_evapzis res_evapzis,res_flashloanis res_flashloanis,res_reltv res_reltv,gps_flag gps_flag from tmp.tb_lb_decision_result WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
DROP TABLE IF EXISTS tmp.tb_lf_return

;
CREATE TABLE IF NOT EXISTS tmp.tb_lf_return(id int comment "记录ID",applyid int comment "贷款申请记录ID",applyno varchar(50) comment "贷款申请号",contractid int comment "合同记录ID",contractno varchar(50) comment "合同编号",loanid int comment "贷款记录ID",loanno varchar(50) comment "贷款号",custname varchar(200) comment "主贷人",custname_md5 varchar(200) comment "脱敏主贷人",custno varchar(100) comment "证件号码",custno_md5 varchar(200) comment "脱敏证件号码",applydate timestamp comment "贷款申请日期",loandate timestamp comment "放款申请日期",fillman varchar(50) comment "录入人",filldate timestamp comment "录入日期",payphases int comment "还款期数",totalphases int comment "总期数",totalcapital decimal(15,2) comment "实还本金合计",totalint decimal(15,2) comment "实还利息合计",totalmanagefees decimal(15,2) comment "实还管理费合计",totaldelayint decimal(15,2) comment "实还逾期利息合计",totalfirstfees decimal(15,2) comment "实还拖车费",totaldelayamt decimal(15,2) comment "实还违约金合计",totalextfees decimal(15,2) comment "实还停车费",totaldonamt decimal(15,2) comment "实还上门费",totalchargefees decimal(15,2) comment "实还扣款手续费合计",totalcomint decimal(15,2) comment "实还复利合计",remark varchar(200) comment "备注",createrby varchar(50) comment "创建人",creatertime timestamp comment "创建时间",modifyby varchar(50) comment "修改人",modifytime timestamp comment "修改时间",totalamt decimal(15,2) comment "还款合计",totaltranamt decimal(15,2) comment "交易金额",totalpenaty decimal(15,2) comment "实还逾期违约金",totalforfeit decimal(15,2) comment "实还风险金",status int comment "状态，-1没到期，0待收回，1已确认，3收回失败，4坏账",delaystatus decimal(15,2) comment "逾期状态,0正常,1逾期",totalredcapital decimal(15,2) comment "减免本金合计",totalredint decimal(15,2) comment "减免利息合计",totalredmanage decimal(15,2) comment "减免管理费合计",totalreddelayint decimal(15,2) comment "减免逾期利息合计",totalredfirstfees decimal(15,2) comment "减免停车费",totalreddelayamt decimal(15,2) comment "减免违约金合计",totalredextfees decimal(15,2) comment "减免拖车费",totalreddonamt decimal(15,2) comment "减免催收费合计",totalredchargefees decimal(15,2) comment "减免扣款失败手续费合计",totalredcomint decimal(15,2) comment "减免GPS费",totalredpenaty decimal(15,2) comment "减免逾期违约金",totalredforfeit decimal(15,2) comment "减免快递费",totalred decimal(15,2) comment "减免合计",accountid int comment "公司收款账号记录ID",actionby varchar(50) comment "处理人，收回成功或收回失败时的处理人",actiondate timestamp comment "处理时间",confirmby varchar(50) comment "确认人",confirmdate timestamp comment "确认时间",totalbzj decimal(15,2) comment "累计已还出省保证金",isds decimal(15,2) comment "是否代收，1是，0否",totaltcf decimal(15,2) comment "累计已还停车费",totalsmcsf decimal(15,2) comment "累计已还上门催收费",totaltchf decimal(15,2) comment "累计已还拖车费",totalqtf decimal(15,2) comment "累计已还其他费",totaldyf decimal(15,2) comment "累计已还抵押登记费",totalgpsf decimal(15,2) comment "累计已还GPS费",totalglf decimal(15,2) comment "累计已还账号管理费",totalkcf decimal(15,2) comment "累计已还考察费",totaldqx decimal(15,2) comment "累计已还盗抢险",totalpgf decimal(15,2) comment "累计已还评估费",totalxzf decimal(15,2) comment "累计已还刑侦费",totaljjf decimal(15,2) comment "累计已还加急费",totalgzf decimal(15,2) comment "累计已还抵押登记公证费",totalfxj decimal(15,2) comment "累计已还风险准备金",totalspf decimal(15,2) comment "累计已还审核费",totallsf decimal(15,2) comment "累计已还律师见证费",totalkdf decimal(15,2) comment "累计已还快递费",totalscf decimal(15,2) comment "累计已还赎车费",totaljsf decimal(15,2) comment "累计已还介绍费",backnum int comment "还款的顺序号，默认为0，由小到大，表示还款的先后顺序",usdelayint decimal(15,2) comment "挂账金额",notice_status varchar(3) comment "还款是否通知投哪：0未通知1已通知",reply_type int comment "还款类型：默认1线下，0线上",paydetailid int comment "对应的paymentdetailid",touna_bid int comment "投哪ID",update_time timestamp comment "更新时间",totalcarcostfees decimal(15,2) comment "实还车辆折损费合计",totalredcarcost decimal(15,2) comment "减免车辆折损费费合计",totalredbrokerage decimal(15,2) comment "减免手续费合计",totalredfxj decimal(15,2) comment "减免展期风险金合计",totalredqtf decimal(15,2) comment "减免其他费合计",trade_sub_id int comment "代扣子表id") comment "贷款收回表" partitioned by (fq_year string, fq_month string,fq_day string)

;
SELECT host,port,username,password,database_name,concat('select ','"lms",','"v_bd_tb_lf_return" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','lms','.','v_bd_tb_lf_return') FROM tb_get_conn_info where host='172.30.16.250' and database_name='lms'

;
drop table IF EXISTS  tmp.tb_lm_contract

;
select cast(from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') as varchar(50)) AS TIMESTAMP

;
DROP TABLE IF EXISTS tmp.tb_lf_returndetail

;
CREATE TABLE IF NOT EXISTS tmp.tb_lf_returndetail(id int comment "记录ID",returnid int comment "贷款收回记录ID",phases int comment "还款期数",paymode int comment "交易方式,1现金，2银行转账，3自动代扣,4尾款抵还款，5余款抵还款",paydate timestamp comment "还款日期",interesttype decimal(15,2) comment "结算种类 1-全额 5-部分还款",amt decimal(15,2) comment "交易金额",startdate timestamp comment "起息日期",enddate timestamp comment "结息日期",shouldpaydate timestamp comment "应还款日期",shouldcapital decimal(15,2) comment "应还本金",shouldint decimal(15,2) comment "应还利息",shouldmanage decimal(15,2) comment "应还管理费",shoulddelayint decimal(15,2) comment "应还逾期利息",shouldfirstfees decimal(15,2) comment "应还一次性手续费",shoulddelayamt decimal(15,2) comment "应还违约金",shouldextfees decimal(15,2) comment "应还延期费",shoulddonamt decimal(15,2) comment "应还催收费",shouldchargefee decimal(15,2) comment "应还扣款手续费",shouldcomint decimal(15,2) comment "应还复息",actcapital decimal(15,2) comment "实还本金",actint decimal(15,2) comment "实还利息",actmanage decimal(15,2) comment "实还管理费",actdelayint decimal(15,2) comment "实还逾期利息",actfirstfees decimal(15,2) comment "实还一次性手续费",actdelayamt decimal(15,2) comment "实还违约金",actextfees decimal(15,2) comment "实还延期费",actdonamt decimal(15,2) comment "实还外包催收费",actchargefees decimal(15,2) comment "实还扣款手续费",actcomint decimal(15,2) comment "实还复利",totalshould decimal(15,2) comment "应还合计",totalact decimal(15,2) comment "实还合计",totalreduce decimal(15,2) comment "减免",loanid int comment "贷款记录ID",shouldpenaty decimal(15,2) comment "应还罚息",actpenaty decimal(15,2) comment "实还罚息",shouldforfeit decimal(15,2) comment "应未滞纳金",actforfeit decimal(15,2) comment "实还滞纳金",syscapital decimal(15,2) comment "系统计算本金",sysint decimal(15,2) comment "系统计算利息",sysdelayint decimal(15,2) comment "系统计算逾期利息",sysfirstfees decimal(15,2) comment "系统计算手续费",sysdelayamt decimal(15,2) comment "系统计算违约金",sysextfees decimal(15,2) comment "系统计算展期费用",sysdonamt decimal(15,2) comment "系统计算外包催收费用",syschargefees decimal(15,2) comment "系统计算扣款失败手续费",syscomint decimal(15,2) comment "系统计算复利",syspenaty decimal(15,2) comment "系统计算罚息",sysforfeit decimal(15,2) comment "系统计算滞纳金",totalsys decimal(15,2) comment "系统计算总计",sysmanage decimal(15,2) comment "系统计算管理费",isdelay decimal(15,2) comment "是否逾期，0否，1是",shouldbzj decimal(15,2) comment "应还出省保证金",actbzj decimal(15,2) comment "实还保证金",sysbzj decimal(15,2) comment "系统计算保证金",shouldtcf decimal(15,2) comment "应还停车费",acttcf decimal(15,2) comment "实还停车费",systcf decimal(15,2) comment "系统计算停车费",shouldsmcsf decimal(15,2) comment "应还上门催收费",actsmcsf decimal(15,2) comment "实还上门催收费",syssmcsf decimal(15,2) comment "系统计算上门催收费",shouldtchf decimal(15,2) comment "应还拖车费",acttchf decimal(15,2) comment "实还拖车费",systchf decimal(15,2) comment "系统计算拖车费",shouldqtf decimal(15,2) comment "应还其他费",actqtf decimal(15,2) comment "实还其他费",sysqtf decimal(15,2) comment "系统计算其他费",shoulddyf decimal(15,2) comment "应还抵押登记费",actdyf decimal(15,2) comment "实还抵押登记费",sysdyf decimal(15,2) comment "系统计算抵押登记费",shouldgpsf decimal(15,2) comment "应还GPS费",actgpsf decimal(15,2) comment "实还GPS费",sysgpsf decimal(15,2) comment "系统计算GPS费",shouldglf decimal(15,2) comment "应还账户管理费",actglf decimal(15,2) comment "实还账户管理费",sysglf decimal(15,2) comment "系统计算账户管理费",shouldkcf decimal(15,2) comment "应还考察费",actkcf decimal(15,2) comment "实还考察费",syskcf decimal(15,2) comment "系统计算考察费",shoulddqx decimal(15,2) comment "应还盗抢险",actdqx decimal(15,2) comment "实还盗抢险",sysdqx decimal(15,2) comment "系统计算盗抢险",shouldpgf decimal(15,2) comment "应还评估费",actpgf decimal(15,2) comment "实还评估费",syspgf decimal(15,2) comment "系统计算评估费",shouldxzf decimal(15,2) comment "应还刑侦费",actxzf decimal(15,2) comment "实还刑侦费",sysxzf decimal(15,2) comment "系统计算刑侦费",shouldjjf decimal(15,2) comment "应还加急费",actjjf decimal(15,2) comment "实还加急费",sysjjf decimal(15,2) comment "系统计算加急费",shouldgzf decimal(15,2) comment "应还抵押登记公证费",actgzf decimal(15,2) comment "实还抵押登记公证费",sysgzf decimal(15,2) comment "系统计算抵押登记公证费",shouldfxj decimal(15,2) comment "应还风险准备金",actfxj decimal(15,2) comment "实还风险准备金",sysfxj decimal(15,2) comment "系统计算风险准备金",shouldspf decimal(15,2) comment "应还审核费",actspf decimal(15,2) comment "实还审核费",sysspf decimal(15,2) comment "系统计算审核费",shouldlsf decimal(15,2) comment "应还律师见证费",actlsf decimal(15,2) comment "实还律师见证费",syslsf decimal(15,2) comment "系统计算律师见证费",shouldkdf decimal(15,2) comment "应还快递费",actkdf decimal(15,2) comment "实还快递费",syskdf decimal(15,2) comment "系统计算快递费",shouldscf decimal(15,2) comment "应还赎车费",actscf decimal(15,2) comment "实还赎车费",sysscf decimal(15,2) comment "系统计算赎车费",shouldjsf decimal(15,2) comment "应还介绍费",actjsf decimal(15,2) comment "实还介绍费",sysjsf decimal(15,2) comment "系统计算介绍费",beoverdue int comment "逾期天数",update_time timestamp comment "更新时间",shouldcarcost decimal(15,2) comment "应还车辆折损费",actcarcost decimal(15,2) comment "实还车辆折损费",syscarcost decimal(15,2) comment "系统计算车辆折损费",max_ove_days int comment "最大逾期天数") comment "贷款收回详情表" partitioned by (fq_year string, fq_month string,fq_day string)

;
drop table if exists tmp.tb_data_count_tb_lf_returndetail

;
CREATE TABLE tmp.tb_data_count_tb_lf_returndetail(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
SELECT host,port,username,password,database_name,concat('select ','"lms",','"v_bd_tb_lf_returndetail" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','lms','.','v_bd_tb_lf_returndetail') FROM tb_get_conn_info where host='172.30.16.250' and database_name='lms'

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_lf_return

;
select tb_lb_applyinfo.applycode ,tb_lb_applyinfo.id ,tb_lm_contract.contractno ,tb_lb_applyinfo.status as status1 ,tb_lm_contract.status as contstatus1 ,tb_lm_contract.returnstatus as returnstatus1 ,tb_lm_contract.loanstatus as loanstatus1 ,tb_lb_applyinfo.applydate ,tb_lb_applyinfo.createtime as applytime ,tb_lb_applyinfo.loantime as totalphases ,tb_site_rpt.sitename ,tb_sys_province.provincename as siteprovince ,tb_sys_city.cityname as sitecity ,tb_sys_cityzone.cityzonename as sitecityzone ,tb_site_rpt.opendate as siteopendate ,tb_site_rpt.department as department1 ,tb_lb_applyinfo.mutual_loan_model as mutual_loan_model1 ,tb_lb_applyinfo.single_premiums as single_premiums1 ,tb_sys_source.datavalue as sources ,tb_lb_applyinfo.dkfs ,tb_lb_applyinfo.hkfs as hkfs1 ,tb_lb_applyinfo.rate ,tb_lb_applyinfo.managefeerate ,tb_lb_applyinfo.feerate ,tb_lb_applyinfo.isout as isout1 ,cast(tb_lb_applyinfo.pgj as decimal(15,2)) as pgj ,tb_lb_applyinfo.direct_empid ,tb_sys_product.productname ,tb_sys_dist.datavalue as loantype ,tb_lb_applyinfo.dealer_name ,tb_lb_applyinfo.first_pay_target ,tb_lb_applyinfo.loantype as loantype2 ,tb_lb_applyinfo.sfcs as sfcs1 ,tb_lb_applyinfo.AUDITTIME ,tb_lb_applyinfo.purpose as purpose1 ,tb_lb_applyinfo.last_apply_id ,tb_lm_contract1.contractno as dianzi_last_contractno ,tb_lb_applyinfo.reloan_flag as reloan_flag1 ,tb_lb_applyinfo.reloan_type as reloan_type1 ,tb_lb_custinfo.gender ,tb_lb_custinfo.education as education1 ,tb_lb_custinfo.marry as marry1 ,tb_lb_custinfo.province ,tb_lb_custinfo.city ,tb_lb_houseinfo.HOUSETPYE as HOUSETPYE1 ,tb_lb_houseinfo.dj as dj1 ,tb_lb_houseinfo.fm as fm1 ,tb_lb_houseinfo.xd as xd1 ,tb_lb_houseinfo.ts as ts1 ,tb_lb_houseinfo.po as po1 ,tb_lb_houseinfo.zn as zn1 ,tb_lb_houseinfo.qt as qt1 ,tb_lb_custinfo.birthplacetype as birthplacetype1 ,tb_lb_houseinfo.ISONLYHOUSE as ISONLYHOUSE1 ,tb_lb_carmessage.BUYMODE as carBUYMODE1 ,tb_lb_carmessage.csx as csx1 ,tb_lb_carmessage.dqx as dqx1 ,tb_lb_carmessage.dszzrx as dszzrx1 ,tb_lb_carmessage.buy_type as buy_type1 ,tb_lb_carmessage.regdate ,tb_lb_estateinfo.BUYMODE as houseBUYMODE1 ,tb_lb_estateinfo.ONWER as ONWER1 ,tb_lb_applyinfo.amount as applyamount ,tb_lb_applyinfo.yhknl as yhknl1 ,tb_lb_custinfo.custname ,tb_lb_custinfo.age ,tb_lb_custinfo.docno ,tb_lb_custinfo.docno_md5 ,tb_lb_custinfo.birthday as birthday1 ,tb_lb_custinfo.childnum ,tb_lb_houseinfo.LOCAL_RESIDE_YEARS ,tb_lb_houseinfo.CURRENT_ADDR_RESIDE_YEARS ,tb_lb_houseinfo.COHABIT ,tb_lb_custinfo.household ,tb_lb_custinfo.residence as residence1 ,tb_lb_custinfo.job_type as job_type1 ,tb_lb_custinfo.spousejobtype as spousejobtype1 ,tb_lb_applyinfo.hklx ,tb_lb_houseinfo.housetime ,tb_lb_custinfo.spouseage ,tb_lb_custinfo.spousesalary ,tb_lb_custinfo.knowdk ,tb_lb_custinfo.spousecorp ,tb_lb_profession.CORPNAME ,tb_lb_profession.DEPTID ,tb_lb_profession.INDUSTRY ,tb_lb_profession.MAINBUSS ,tb_lb_profession.zyyw ,tb_lb_profession.SALARY ,tb_lb_profession.DUTIES ,tb_lb_profession.years ,tb_lb_estateinfo.AMOUNT as housecount ,tb_lb_estateinfo.BUYDATE as housebuydate1 ,tb_lb_estateinfo.PRICE as houseprice ,tb_lb_estateinfo.FCMJ as fcmj1 ,tb_lb_estateinfo.salesarea as salesarea1 ,tb_lb_carmessage.carno ,tb_lb_carmessage.carno_md5 ,tb_lb_carmessage.fdjhm_md5 ,tb_lb_carmessage.modelid ,tb_car300_carmodel.model_price as guide_price ,tb_car300_carmodel.model_name ,tb_car300_carseries.series_name ,tb_car300_carseries.series_group_name ,cast(tb_car_type.factory as varchar(100)) as factory ,tb_lb_evaluatereport.fuel_type as fuel_type_new1 ,tb_lb_carmessage.cjh_md5 ,tb_lb_carmessage.brand ,tb_lb_carmessage.buydate as carbuydate1 ,tb_lb_carmessage.price as carprice ,tb_lb_carmessage.transfer_times ,tb_lb_carmessage.family_car_nums ,tb_lb_carmessage.other ,tb_lb_carmessage.bjmp ,tb_lb_carmessage.othermsg ,tb_lb_carmessage.yuegong ,tb_lb_carmessage.carinittime ,tb_lb_carmessage.mileage ,tb_lb_carmessage.gpsinstallman ,tb_lb_carmessage.ajye ,tb_lb_carmessage.car_seats ,tb_lb_carmessage.mortgage_month ,tb_lb_carmessage.car_notype ,tb_lb_card_message.car_owner_years ,tb_lb_card_message.car_owner_way as car_owner_way1 ,tb_lb_card_message.car_insurance_info as car_insurance_info1 ,tb_lb_card_message.car_transfer_times ,tb_lb_card_message.car_release_time ,tb_lb_card_message.driver_lic_get_time ,tb_lb_card_message.car_charge_times ,tb_lb_card_message.has_driver_lic as has_driver_lic1 ,tb_lb_card_message.has_release as has_release1 ,tb_lb_card_message.has_regist_cert as has_regist_cert1 ,tb_lb_card_message.regist_cert_time ,tb_lb_card_message.first_regist_date ,tb_lb_card_message.last_mortgager_info ,tb_lm_contract.auditamt ,tb_lm_contract.amt ,tb_lm_contract.loan_amt ,tb_lm_payment.loandate from ods_lms.tb_lb_applyinfo as tb_lb_applyinfo left join (select * from (select *,row_number() over (partition by applyid order by id desc) as rn from ods_lms.tb_lb_custinfo) as t1 where t1.rn=1) as tb_lb_custinfo on tb_lb_applyinfo.id=tb_lb_custinfo.applyid left join (select * from (select *,row_number() over (partition by custid order by id desc) as rn from ods_lms.tb_lb_estateinfo) as t2 where t2.rn=1) as tb_lb_estateinfo on tb_lb_estateinfo.custid=tb_lb_custinfo.id left join (select * from (select *,row_number() over (partition by custid order by id desc) as rn from ods_lms.tb_lb_houseinfo) as t3 where t3.rn=1) as tb_lb_houseinfo on tb_lb_houseinfo.custid=tb_lb_custinfo.id left join (select * from (select *,row_number() over (partition by custid order by id desc) as rn from ods_lms.tb_lb_carmessage) as t4 where t4.rn=1) as tb_lb_carmessage on tb_lb_carmessage.custid=tb_lb_custinfo.id left join (select * from (select *,row_number() over (partition by custid order by id desc) as rn from ods_lms.tb_lb_profession) as t5 where t5.rn=1) as tb_lb_profession on tb_lb_profession.custid=tb_lb_custinfo.id left join (select * from (select *,row_number() over (partition by applyid order by id desc) as rn from ods_lms.tb_lm_contract) as t6 where t6.rn=1) as tb_lm_contract on tb_lm_contract.applyid= tb_lb_applyinfo.id left join (select * from (select *,row_number() over (partition by custid order by id desc) as rn from ods_lms.tb_lb_card_message) as t7 where t7.rn=1) as tb_lb_card_message on tb_lb_card_message.custid= tb_lb_custinfo.id left join (select * from (select *,row_number() over (partition by datacode order by id desc) as rn from ods_lms.tb_sys_dist where datatype="Information") as t8 where t8.rn=1) as tb_sys_source on tb_lb_applyinfo.sources=tb_sys_source.datacode left join (select * from (select *,row_number() over (partition by sitecode order by id desc) as rn from ods_bi.tb_site_rpt) as t9 where t9.rn=1) as tb_site_rpt on tb_lb_applyinfo.siteno=tb_site_rpt.sitecode left join ods_lms.tb_sys_product as tb_sys_product on tb_lb_applyinfo.products=tb_sys_product.id left join (select * from (select *,row_number() over (partition by datacode order by id desc) as rn from ods_lms.tb_sys_dist where datatype="PT001") as t10 where t10.rn=1) as tb_sys_dist on tb_sys_product.producttype=tb_sys_dist.DATACODE left join (select * from (select *,row_number() over (partition by applyid order by id desc) as rn from ods_lms.tb_lb_evaluatereport where evaluate_from<>2) as t where t.rn=1) as tb_lb_evaluatereport on tb_lb_evaluatereport.applyid=tb_lb_applyinfo.id LEFT JOIN ods_lms.tb_car300_carmodel as tb_car300_carmodel ON tb_car300_carmodel.id = tb_lb_evaluatereport.modelid LEFT JOIN ods_lms.tb_car300_carseries as tb_car300_carseries ON tb_car300_carmodel.series_id = tb_car300_carseries.id LEFT JOIN (select * from ods_lms.tb_car_type where status=1) tb_car_type ON tb_car_type.id = tb_car300_carmodel.series_id left join (select * from (select *,row_number() over (partition by provinceid order by provinceid desc) as rn from ods_lms.tb_sys_province) as t11 where t11.rn=1) as tb_sys_province on tb_sys_province.provinceid=tb_site_rpt.province left join (select * from (select *,row_number() over (partition by cityid order by cityid desc) as rn from ods_lms.tb_sys_city) as t12 where t12.rn=1) as tb_sys_city on tb_sys_city.cityid=tb_site_rpt.city left join (select * from (select *,row_number() over (partition by cityzoneid order by cityzoneid desc) as rn from ods_lms.tb_sys_cityzone) as t12 where t12.rn=1) as tb_sys_cityzone on tb_sys_cityzone.cityzoneid=tb_site_rpt.cityzone left join (select * from (select *,row_number() over (partition by applyid order by id desc) as rn from ods_lms.tb_lm_contract) as t6 where t6.rn=1) as tb_lm_contract1 on tb_lm_contract1.applyid= tb_lb_applyinfo.last_apply_id left join (select * from (select *,row_number() over (partition by applyid order by id desc) as rn from ods_lms.tb_lm_payment) as t6 where t6.rn=1) as tb_lm_payment on tb_lm_payment.applyid=tb_lb_applyinfo.id

;
SELECT host,port,username,password,database_name,concat('select ','"lms",','"v_bd_tb_lm_contract" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','lms','.','v_bd_tb_lm_contract') FROM tb_get_conn_info where host='172.30.16.250' and database_name='lms'

;
drop table IF EXISTS  tmp.tb_lb_decision_result

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_lf_returndetail

;
SHOW TABLES 'TB_LB_PAWNCARSITUATION'

;
DESCRIBE FORMATTED TB_LB_PAWNCARSITUATION

;
SELECT * FROM `TB_LB_PAWNCARSITUATION`

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_lm_contract

;
INSERT OVERWRITE TABLE ods_lms.tb_lm_contract select id id,applyid applyid,contractno contractno,contractname contractname,custname custname,custname_md5 custname_md5,custno custno,custno_md5 custno_md5,addr addr,amt amt,payment payment,usefor usefor,rate rate,feerate feerate,fees fees,managefeerate managefeerate,managefees managefees,delayfeerate delayfeerate,payfee payfee,delayrate delayrate,clearrate clearrate,loanstatus loanstatus,returnstatus returnstatus,remark remark,createby createby,createtime createtime,modifyby modifyby,modifytime modifytime,loantime loantime,contractdate contractdate,applyno applyno,signman signman,signman_md5 signman_md5,status status,checkdate checkdate,checkman checkman,confirmman confirmman,confirmdate confirmdate,checkcode checkcode,printman printman,printdate printdate,chksigndate chksigndate,chksignman chksignman,chksignman_md5 chksignman_md5,contractnumber contractnumber,auditamt auditamt,auditloantime auditloantime,contracttemptype contracttemptype,zqr zqr,zqr_md5 zqr_md5,dkfs dkfs,hkfs hkfs,backflag backflag,zqrid zqrid,cancelapyreason cancelapyreason,cancelpaydate cancelpaydate,cancelpayby cancelpayby,stockaccount stockaccount,stockaccount_md5 stockaccount_md5,customertype customertype,cjr cjr,cjrid cjrid,logisticsno logisticsno,companyno companyno,logisticsstatus logisticsstatus,firstpayed firstpayed,firstpayed_status firstpayed_status,paymentfailreason paymentfailreason,charge_package_id charge_package_id,appendix_status appendix_status,fuyou_signed fuyou_signed,loan_amt loan_amt,mortgage_dealing_time_flag mortgage_dealing_time_flag,fee_calculate_flow_flag fee_calculate_flow_flag,rerate rerate,borrower_sign_flag borrower_sign_flag,cancel_node cancel_node,gf_bindingaccount_flag gf_bindingaccount_flag,gps_install_fee_flag gps_install_fee_flag,platform_sign_flag platform_sign_flag,policy_activity_id policy_activity_id,whether_online whether_online from tmp.tb_lm_contract WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
alter table tmp.tb_sys_emp add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_sys_emp/2019/07/23'

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_sys_emp

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-limaoxing/20190723/155274/7914688854839271//data' SELECT * FROM atmp.ck_loan_app_report_data_pre WHERE distinct_id ="16c1910ed76169-0c06e0401db718-2d48037b-230400-16c1910ed7842"

;
INSERT OVERWRITE TABLE stg_lms.tb_sys_emp PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,empno empno,empname empname,empname_md5 empname_md5,idcard idcard,idcard_md5 idcard_md5,gender gender,birthday birthday,duties duties,orgid orgid,tel tel,mobile mobile,mobile_md5 mobile_md5,hometel hometel,hometel_md5 hometel_md5,officetel officetel,officetel_md5 officetel_md5,homeaddr homeaddr,homeaddr_md5 homeaddr_md5,post post,email email,email_md5 email_md5,issalesman issalesman,issuperviser issuperviser,remark remark,createby createby,createtime createtime,modifyby modifyby,modifytime modifytime,jobdate jobdate,leavestatus leavestatus,leavedate leavedate,vacation vacation,isdirect isdirect,fullmembertime fullmembertime,higherofficetime higherofficetime,movetime movetime,bankaccount bankaccount,bankaccount_md5 bankaccount_md5,bank bank,bankbranch bankbranch,bankno bankno,bankno_md5 bankno_md5,bankprovince bankprovince,bankcity bankcity,distrsequence distrsequence,daibachannel daibachannel,tel_md5 tel_md5 from tmp.tb_sys_emp WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
alter table tmp.tb_lf_return add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_lf_return/2019/07/23'

;
INSERT OVERWRITE TABLE ods_lms.tb_lf_return select id id,applyid applyid,applyno applyno,contractid contractid,contractno contractno,loanid loanid,loanno loanno,custname custname,custname_md5 custname_md5,custno custno,custno_md5 custno_md5,applydate applydate,loandate loandate,fillman fillman,filldate filldate,payphases payphases,totalphases totalphases,totalcapital totalcapital,totalint totalint,totalmanagefees totalmanagefees,totaldelayint totaldelayint,totalfirstfees totalfirstfees,totaldelayamt totaldelayamt,totalextfees totalextfees,totaldonamt totaldonamt,totalchargefees totalchargefees,totalcomint totalcomint,remark remark,createrby createrby,creatertime creatertime,modifyby modifyby,modifytime modifytime,totalamt totalamt,totaltranamt totaltranamt,totalpenaty totalpenaty,totalforfeit totalforfeit,status status,delaystatus delaystatus,totalredcapital totalredcapital,totalredint totalredint,totalredmanage totalredmanage,totalreddelayint totalreddelayint,totalredfirstfees totalredfirstfees,totalreddelayamt totalreddelayamt,totalredextfees totalredextfees,totalreddonamt totalreddonamt,totalredchargefees totalredchargefees,totalredcomint totalredcomint,totalredpenaty totalredpenaty,totalredforfeit totalredforfeit,totalred totalred,accountid accountid,actionby actionby,actiondate actiondate,confirmby confirmby,confirmdate confirmdate,totalbzj totalbzj,isds isds,totaltcf totaltcf,totalsmcsf totalsmcsf,totaltchf totaltchf,totalqtf totalqtf,totaldyf totaldyf,totalgpsf totalgpsf,totalglf totalglf,totalkcf totalkcf,totaldqx totaldqx,totalpgf totalpgf,totalxzf totalxzf,totaljjf totaljjf,totalgzf totalgzf,totalfxj totalfxj,totalspf totalspf,totallsf totallsf,totalkdf totalkdf,totalscf totalscf,totaljsf totaljsf,backnum backnum,usdelayint usdelayint,notice_status notice_status,reply_type reply_type,paydetailid paydetailid,touna_bid touna_bid,update_time update_time,totalcarcostfees totalcarcostfees,totalredcarcost totalredcarcost,totalredbrokerage totalredbrokerage,totalredfxj totalredfxj,totalredqtf totalredqtf,trade_sub_id trade_sub_id from tmp.tb_lf_return WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
INSERT OVERWRITE TABLE stg_lms.tb_lf_return PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,applyid applyid,applyno applyno,contractid contractid,contractno contractno,loanid loanid,loanno loanno,custname custname,custname_md5 custname_md5,custno custno,custno_md5 custno_md5,applydate applydate,loandate loandate,fillman fillman,filldate filldate,payphases payphases,totalphases totalphases,totalcapital totalcapital,totalint totalint,totalmanagefees totalmanagefees,totaldelayint totaldelayint,totalfirstfees totalfirstfees,totaldelayamt totaldelayamt,totalextfees totalextfees,totaldonamt totaldonamt,totalchargefees totalchargefees,totalcomint totalcomint,remark remark,createrby createrby,creatertime creatertime,modifyby modifyby,modifytime modifytime,totalamt totalamt,totaltranamt totaltranamt,totalpenaty totalpenaty,totalforfeit totalforfeit,status status,delaystatus delaystatus,totalredcapital totalredcapital,totalredint totalredint,totalredmanage totalredmanage,totalreddelayint totalreddelayint,totalredfirstfees totalredfirstfees,totalreddelayamt totalreddelayamt,totalredextfees totalredextfees,totalreddonamt totalreddonamt,totalredchargefees totalredchargefees,totalredcomint totalredcomint,totalredpenaty totalredpenaty,totalredforfeit totalredforfeit,totalred totalred,accountid accountid,actionby actionby,actiondate actiondate,confirmby confirmby,confirmdate confirmdate,totalbzj totalbzj,isds isds,totaltcf totaltcf,totalsmcsf totalsmcsf,totaltchf totaltchf,totalqtf totalqtf,totaldyf totaldyf,totalgpsf totalgpsf,totalglf totalglf,totalkcf totalkcf,totaldqx totaldqx,totalpgf totalpgf,totalxzf totalxzf,totaljjf totaljjf,totalgzf totalgzf,totalfxj totalfxj,totalspf totalspf,totallsf totallsf,totalkdf totalkdf,totalscf totalscf,totaljsf totaljsf,backnum backnum,usdelayint usdelayint,notice_status notice_status,reply_type reply_type,paydetailid paydetailid,touna_bid touna_bid,update_time update_time,totalcarcostfees totalcarcostfees,totalredcarcost totalredcarcost,totalredbrokerage totalredbrokerage,totalredfxj totalredfxj,totalredqtf totalredqtf,trade_sub_id trade_sub_id from tmp.tb_lf_return WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
INSERT OVERWRITE TABLE ods_lms.tb_lf_returndetail select id id,returnid returnid,phases phases,paymode paymode,paydate paydate,interesttype interesttype,amt amt,startdate startdate,enddate enddate,shouldpaydate shouldpaydate,shouldcapital shouldcapital,shouldint shouldint,shouldmanage shouldmanage,shoulddelayint shoulddelayint,shouldfirstfees shouldfirstfees,shoulddelayamt shoulddelayamt,shouldextfees shouldextfees,shoulddonamt shoulddonamt,shouldchargefee shouldchargefee,shouldcomint shouldcomint,actcapital actcapital,actint actint,actmanage actmanage,actdelayint actdelayint,actfirstfees actfirstfees,actdelayamt actdelayamt,actextfees actextfees,actdonamt actdonamt,actchargefees actchargefees,actcomint actcomint,totalshould totalshould,totalact totalact,totalreduce totalreduce,loanid loanid,shouldpenaty shouldpenaty,actpenaty actpenaty,shouldforfeit shouldforfeit,actforfeit actforfeit,syscapital syscapital,sysint sysint,sysdelayint sysdelayint,sysfirstfees sysfirstfees,sysdelayamt sysdelayamt,sysextfees sysextfees,sysdonamt sysdonamt,syschargefees syschargefees,syscomint syscomint,syspenaty syspenaty,sysforfeit sysforfeit,totalsys totalsys,sysmanage sysmanage,isdelay isdelay,shouldbzj shouldbzj,actbzj actbzj,sysbzj sysbzj,shouldtcf shouldtcf,acttcf acttcf,systcf systcf,shouldsmcsf shouldsmcsf,actsmcsf actsmcsf,syssmcsf syssmcsf,shouldtchf shouldtchf,acttchf acttchf,systchf systchf,shouldqtf shouldqtf,actqtf actqtf,sysqtf sysqtf,shoulddyf shoulddyf,actdyf actdyf,sysdyf sysdyf,shouldgpsf shouldgpsf,actgpsf actgpsf,sysgpsf sysgpsf,shouldglf shouldglf,actglf actglf,sysglf sysglf,shouldkcf shouldkcf,actkcf actkcf,syskcf syskcf,shoulddqx shoulddqx,actdqx actdqx,sysdqx sysdqx,shouldpgf shouldpgf,actpgf actpgf,syspgf syspgf,shouldxzf shouldxzf,actxzf actxzf,sysxzf sysxzf,shouldjjf shouldjjf,actjjf actjjf,sysjjf sysjjf,shouldgzf shouldgzf,actgzf actgzf,sysgzf sysgzf,shouldfxj shouldfxj,actfxj actfxj,sysfxj sysfxj,shouldspf shouldspf,actspf actspf,sysspf sysspf,shouldlsf shouldlsf,actlsf actlsf,syslsf syslsf,shouldkdf shouldkdf,actkdf actkdf,syskdf syskdf,shouldscf shouldscf,actscf actscf,sysscf sysscf,shouldjsf shouldjsf,actjsf actjsf,sysjsf sysjsf,beoverdue beoverdue,update_time update_time,shouldcarcost shouldcarcost,actcarcost actcarcost,syscarcost syscarcost,max_ove_days max_ove_days from tmp.tb_lf_returndetail WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
USE `stg_lms`

;
select contractno, carstatus, carsituation, concat(fq_year,"-",fq_month,"-",fq_day) as date from stg_lms.tb_lb_pawncarsituation where concat(fq_year,"-",fq_month,"-",fq_day) >= "2019-06-30" and concat(fq_year,"-",fq_month,"-",fq_day) <= "2019-07-23"

;
drop table IF EXISTS  tmp.tb_lf_return

;
select 'ods_lms','tb_lf_returndetail',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_lms.tb_lf_returndetail

;
SELECT * FROM app_db.tn_plan_repayment_company where data_type='月' and repay_time>='2018-10'

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-limaoxing/20190723/155276/7915097216077096//data' SELECT * FROM atmp.ck_loan_app_report_data_pre WHERE event_type ="event_click_phoneinput"

;
SELECT * FROM app_db.tn_plan_repayment_partner where data_type='月' and repay_time>='2018-10'

;
show create table atmp.ck_loan_app_report_data_pre

;
SELECT * FROM app_db.tn_plan_repayment_partner where data_type='日' and repay_time<current_date()

;
select * from app_db.tn_smart_next_repay_detail

;
SELECT * FROM app_db.tn_money_asset_interest_dwm where date_type='周'

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='desens' AND table_name='tb_currentdue_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='desens' AND table_name='tb_site_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
DROP TABLE IF EXISTS tmp.tb_currentdue_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tb_currentdue_rpt(id int comment "主键ID",contractno varchar(50) comment "合同号",custname varchar(50) comment "客户姓名",sitecode varchar(50) comment "分公司编号",sitename varchar(50) comment "分公司名字（历史，非最新）",loancode varchar(50) comment "贷款产品类型编号",loantype varchar(50) comment "贷款产品类型名称",loandate date comment "提现时间",shouldcapital decimal(16,2) comment "应还本金",recentpaydate date comment "应还款日期",shouldamt decimal(16,2) comment "正常还款",currentduedays int comment "逾期天数",overduepayment decimal(16,2) comment "滞纳金额",compositefees decimal(22,6) comment "综合费率",shoulddueamt decimal(16,2) comment "截止今天应还",returnamt decimal(16,2) comment "已还本金",noreturnamt decimal(16,2) comment "未还本金",qybzj decimal(16,2) comment "风险处置押金",overduecapital decimal(16,2) comment "逾期期间未还本金",phoneno varchar(100) comment "手机号",bank varchar(100) comment "银行",bankno varchar(100) comment "银行卡号",remark varchar(512) comment "备注",stadate date comment "统计日期",urgeman varchar(50) comment "催收人",situation int comment "催收情况- 1:电催中,2:已上门,3:已拖车,4:反押,5:赎车,6:已作坏账核销,7:已卖车未结清,8:诉讼,9:其他",custstatus int comment "客户是否失联-1:失联,2:未失联",carstatus int comment "车辆情况,0:未押车,1:正常在库,2:拖车入库,3:售出处置,4：结清出库,5:检查出库6:其他 SELECT action.xml container_tokens default_container_executor_session.sh default_container_executor.sh job.xml json-simple-1.1.jar launch_container.sh oozie-hadoop-conf-1563849009185 oozie-hadoop-utils-2.6.0-cdh5.10.2.oozie-4.1.0-cdh5.10.2.jar oozie-hadoop-utils.jar oozie-sharelib-oozie-4.1.0-cdh5.10.2.jar oozie-sharelib-oozie.jar output.properties propagation-conf.xml sql_produce.sh tmp FROM tb_dist_rpt WHERE DATATYPE=CARSTATUS",gpsstatus int comment "GPS情况,0:正常,1:掉线,2:出省,3：拆除",status varchar(4) comment "当SHOULDAMT大于0时为s1-逾期,否则为s2-正常",isdirect int comment "是否直销 0:否 1:直销 2:呼叫中心",sources varchar(100) comment "合作机构",overdueint decimal(16,2) comment "逾期未还利息",idcard varchar(100) comment "身份证号",instatus int comment "tb_urge_rpt表中 在库情况1在库 2不在库 3已核销坏账",totalphases int comment "贷款期数",hkfs varchar(50) comment "还款方式",payphases int comment "应还款期数",applyid bigint comment "申请ID",carno varchar(100) comment "车牌号",salesman varchar(50) comment "客户经理",teamleader varchar(20) comment "团队经理",auditamt decimal(15,2) comment "批核金额RE",unifiedcustname varchar(200) comment "联合贷扣款账户名",unifiedcontractno varchar(50) comment "联合贷主进件合同号",orgid int comment "组织机构ID",usertype varchar(10) comment "用户类型(新客户/老客户)",productid int comment "贷款产品ID",productname varchar(100) comment "贷款产品",coopname varchar(50) comment "合作机构",orgname varchar(100) comment "组织机构（存贷款申请时的名称）",microstoreflag int comment "是否微门店 0:否,1:是",contractbody varchar(20) comment "合同主体",loanchannel varchar(50) comment "放款渠道",returncoopname varchar(50) comment "回款确认机构",applyaudittime timestamp comment "申请提交时间",actfxbzf decimal(15,2) comment "实还风险保障费",withdrawdate date comment "满标时间",cursitename varchar(50) comment "当前分公司名字",fileno varchar(32) comment "档案号",directorgid int comment "直销组织ID",directorgname varchar(100) comment "直销组织名",rerate decimal(10,6) comment "RE费率",corpname varchar(255) comment "担保公司名称",infoservicefee decimal(15,2) comment "信息服务费(360车贷)",empno varchar(50) comment "客户经理工号",agentid varchar(50) comment "经纪人ID",agentcode varchar(50) comment "经纪人工号",agentname varchar(50) comment "经纪人姓名",inviterduties varchar(50) comment "邀请人岗位",departmentid int comment "事业部ID",departmentname varchar(50) comment "事业部名称",dkfs varchar(50) comment "抵押方式",update_time timestamp comment "更新时间",cyssitename varchar(100) comment "超越数公司名称") comment "逾期表" partitioned by (fq_year string, fq_month string,fq_day string)

;
DROP TABLE IF EXISTS tmp.tb_area

;
CREATE TABLE IF NOT EXISTS tmp.tb_area(id int comment "区域ID，主键ID",areano varchar(50) comment "组织机构编号",areaname varchar(100) comment "组织机构名称",arealeader varchar(100) comment "组织机构负责人",pid bigint comment "对应orgid上级组织机构Id,对应大区别ID",arealeaderid bigint comment "组织机构负责人ID",arealeaderempno varchar(50) comment "员工编号",areatype int comment "状态，1-个贷，2-袋吧，3-贷后",create_user varchar(50) comment "创建人",create_time timestamp comment "创建时间",update_user varchar(50) comment "更新人",update_time timestamp comment "更新时间",data_status varchar(2) comment "状态，0否，1是",issite int comment "是否网点 1：是 0：否") comment "区域表" partitioned by (fq_year string, fq_month string,fq_day string)

;
DROP TABLE IF EXISTS tmp.tb_bigarea

;
CREATE TABLE IF NOT EXISTS tmp.tb_bigarea(id int comment "大区ID，主键",bigareano varchar(50) comment "组织机构编号",bigareaname varchar(100) comment "组织机构名称",bigarealeader varchar(100) comment "组织机构负责人",pid bigint comment "对应orgid上级组织机构Id",bigarealeaderid bigint comment "组织机构负责人ID",bigareaderempno varchar(50) comment "员工编号",bigtype int comment "状态，1-个贷，2-袋吧，3-贷后",create_user varchar(50) comment "创建人",create_time timestamp comment "创建时间",update_user varchar(50) comment "更新人",update_time timestamp comment "更新时间",data_status varchar(2) comment "状态，0否，1是",issite int comment "是否网点 1：是 0：否") comment "大区表" partitioned by (fq_year string, fq_month string,fq_day string)

;
SELECT host,port,username,password,database_name,concat('select ','"desens",','"" table_name',', count(1) data_cnt, ','"" year,','"" month,','"" day,','now() update_time ','from ','desens','.','') FROM tb_get_conn_info where host='172.30.17.245' and database_name='desens'

;
drop table if exists tmp.tb_data_count_tb_site_rpt

;
CREATE TABLE tmp.tb_data_count_tb_site_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
select channel as `授信渠道` , data_date as `日期` , info_cnt as `授信申请量` , info_passed_cnt as `授信_基础资料反欺诈通过量` , cert_cnt as `授信_授信环节量` , cert_passed_cnt as `授信_授信环节通过量` , cert_avg_amt as `平均授信金额` , draw_cnt as `支用申请量` , draw_passed_cnt as `支用通过量` , borrow_cnt as `满标量` , borrow_cnt - withdraw_cnt as `满标未提现量` , withdraw_cnt as `提现量` , payment_cnt as `放款成功量` , loan_tot_amt as `放款金额` , loan_avg_amt as `平均放款金额` , cert_passed_cnt / info_cnt as `授信通过率` from rw_data_analysis.credit_funnel_info2loan

;
SELECT host,port,username,password,database_name,concat('select ','"desens",','"tb_area" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','desens','.','tb_area') FROM tb_get_conn_info where host='172.30.17.245' and database_name='desens'

;
SELECT host,port,username,password,database_name,concat('select ','"desens",','"tb_site_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','desens','.','tb_site_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='desens'

;
select regexp_replace(date_sub(current_date,1),'-','') as cutoffdate

;
alter table tmp.tb_bigarea add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_bigarea/2019/07/23'

;
INSERT OVERWRITE TABLE ods_bi.tb_area select id id,areano areano,areaname areaname,arealeader arealeader,pid pid,arealeaderid arealeaderid,arealeaderempno arealeaderempno,areatype areatype,create_user create_user,create_time create_time,update_user update_user,update_time update_time,data_status data_status,issite issite from tmp.tb_area WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
INSERT OVERWRITE TABLE ods_bi.tb_bigarea select id id,bigareano bigareano,bigareaname bigareaname,bigarealeader bigarealeader,pid pid,bigarealeaderid bigarealeaderid,bigareaderempno bigareaderempno,bigtype bigtype,create_user create_user,create_time create_time,update_user update_user,update_time update_time,data_status data_status,issite issite from tmp.tb_bigarea WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_site_rpt

;
drop table if exists tmp.tb_data_count_tb_area

;
INSERT OVERWRITE TABLE stg_bi.tb_bigarea PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,bigareano bigareano,bigareaname bigareaname,bigarealeader bigarealeader,pid pid,bigarealeaderid bigarealeaderid,bigareaderempno bigareaderempno,bigtype bigtype,create_user create_user,create_time create_time,update_user update_user,update_time update_time,data_status data_status,issite issite from tmp.tb_bigarea WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
select 'ods_bi','tb_bigarea',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_bigarea

;
drop table IF EXISTS  tmp.tb_bigarea

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='desens' AND table_name='tb_emp_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
drop table if exists tmp.tb_data_count_tb_currentdue_rpt

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-limaoxing/20190723/155282/7915499263954453//data' SELECT * FROM atmp.ck_loan_app_report_data_pre WHERE event_type ="event_pagestart"

;
DROP TABLE IF EXISTS tmp.tb_loancount_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tb_loancount_rpt(id int comment "主键ID",confirmdate date comment "放款日期",custname varchar(50) comment "客户姓名",contractno varchar(50) comment "合同号",sitename varchar(100) comment "分公司",productytpename varchar(100) comment "借款类型",paymenttypename varchar(50) comment "还款方式",auditamt decimal(15,2) comment "计息本金",paytype int comment "付款类型",payamt decimal(15,2) comment "付款金额",managefees decimal(15,2) comment "账户管理费",interest decimal(15,2) comment "利息",kcfees decimal(15,2) comment "考察费",gpsfees decimal(15,2) comment "GPS费",dydjfees decimal(15,2) comment "抵押登记费",tcfees decimal(15,2) comment "停车费",dqxfees decimal(15,2) comment "盗抢险",xzfees decimal(15,2) comment "刑侦费",pgfees decimal(15,2) comment "评估费",lsjzfees decimal(15,2) comment "律师见证费",jjfees decimal(15,2) comment "加急费",kdfees decimal(15,2) comment "快递费",gzfees decimal(15,2) comment "公证费",nfwfees decimal(15,2) comment "年服务费",r360fees decimal(15,2) comment "融360手续费",zxsxfees decimal(15,2) comment "直销手续费",qtfees decimal(15,2) comment "其它费",dkwzfees decimal(15,2) comment "代扣违章费",sxfees decimal(15,2) comment "手续费",pysfees decimal(15,2) comment "配钥费",csbzjfees decimal(15,2) comment "出省保证金",lybzjfees decimal(15,2) comment "履约保证金",nsyjfees decimal(15,2) comment "年审押金",dydjbzjfees decimal(15,2) comment "抵押登记保证金",qtdsfees decimal(15,2) comment "其他代收费",actualpayamt decimal(15,2) comment "实际付款金额",balance decimal(15,2) comment "待放余款",loantype varchar(20) comment "贷款类型",orgleader varchar(50) comment "客户主任",empname varchar(50) comment "客户经理",totalphases int comment "贷款总期数",bankno varchar(50) comment "放款账号",wfyk decimal(15,2) comment "未放余款",isdirect int comment "是否直销",sources varchar(10) comment "渠道类型",directseller varchar(50) comment "直销坐席",sfamt decimal(10,2) comment "服务费",bank_sk varchar(50) comment "银行开户行—收款",bankno_sk varchar(100) comment "银行账号-收款",siteno varchar(200) comment "分公司代码",applyid varchar(50) comment "申请ID",shouldglf decimal(15,2) comment "快递费",contracttemptype varchar(50) comment "产品类型代码",loan_amt decimal(15,2) comment "借款金额",aseatfee decimal(15,2) comment "个贷坐席介绍费",unifiedcustname varchar(200) comment "联合贷扣款账户名",unifiedcontractno varchar(50) comment "联合贷主进件合同号",rebatefee decimal(15,2) comment "业务员返点费",dkfs varchar(50) comment "贷款方式",orgid int comment "组织机构ID",gpsfees_install decimal(15,2) comment "GPS费（一次性）",gpsfees_rent decimal(15,2) comment "GPS费（月租性）",usertype varchar(10) comment "用户类型(新客户/老客户)",productname varchar(100) comment "贷款产品",productid int comment "贷款产品ID",coopname varchar(50) comment "合作机构",orgname varchar(100) comment "组织机构（存贷款申请时的名称）",microstoreflag int comment "是否微门店 0:否,1:是",contractbody varchar(20) comment "合同主体",loanchannel varchar(50) comment "放款渠道",returncoopname varchar(50) comment "回款确认机构",returntime timestamp comment "回款确认时间",coopcheck varchar(5) comment "合作机构校验 0:否,1:是",applyaudittime timestamp comment "申请提交时间",actdbfwf decimal(15,2) comment "实还担保服务费",actfxbzf decimal(15,2) comment "实还风险保障费",agentcode varchar(50) comment "经纪人工号",agentid varchar(50) comment "经纪人ID",agentname varchar(50) comment "经纪人姓名",compositefees decimal(22,6) comment "综合费率",corpname varchar(255) comment "担保公司名称",cursitename varchar(50) comment "当前分公司名字",departmentid int comment "事业部ID",departmentname varchar(50) comment "事业部名称",directorgid int comment "直销组织ID",directorgname varchar(100) comment "直销组织名",empno varchar(50) comment "客户经理工号",inviterduties varchar(50) comment "邀请人岗位",rerate decimal(10,6) comment "RE费率",update_time timestamp comment "更新时间",withdrawdate date comment "满标时间",cyssitename varchar(100) comment "超越数公司名称") comment "放款表" partitioned by (fq_year string, fq_month string,fq_day string)

;
drop table if exists tmp.tb_data_count_tb_loancount_rpt

;
CREATE TABLE tmp.tb_data_count_tb_loancount_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
SELECT host,port,username,password,database_name,concat('select ','"desens",','"tb_emp_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','desens','.','tb_emp_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='desens'

;
alter table tmp.tb_emp_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_emp_rpt/2019/07/23'

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_emp_rpt

;
drop table if exists tmp.tb_data_count_tb_emp_rpt

;
alter table tmp.tb_loancount_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_loancount_rpt/2019/07/23'

;
INSERT OVERWRITE TABLE stg_bi.tb_emp_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,empno empno,empname empname,idcard idcard,gender gender,birthday birthday,duties duties,orgid orgid,tel tel,mobile mobile,hometel hometel,officetel officetel,homeaddr homeaddr,post post,email email,issalesman issalesman,issuperviser issuperviser,remark remark,jobdate jobdate,leavestatus leavestatus,leavedate leavedate,vacation vacation,isdirect isdirect,fullmembertime fullmembertime,higherofficetime higherofficetime,movetime movetime,loginname loginname,auditlevel auditlevel from tmp.tb_emp_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
drop table IF EXISTS  tmp.tb_emp_rpt

;
select 'ods_bi','tb_loancount_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_loancount_rpt

;
DROP TABLE IF EXISTS tmp.tb_provincemanage

;
CREATE TABLE IF NOT EXISTS tmp.tb_provincemanage(id int comment "orgid",promanano varchar(50) comment "组织机构编号",promana varchar(100) comment "组织机构名称",promanaleader varchar(100) comment "组织机构负责人",superiorid int comment "上级id,对应orgid上级组织机构Id",promanaleaderid int comment "",promanaleaderno varchar(50) comment "员工编号",type int comment "状态，1-个贷，2-袋吧，3-贷后",create_user varchar(50) comment "创建人",create_time timestamp comment "创建时间",update_user varchar(50) comment "更新人",update_time timestamp comment "更新时间",data_status varchar(2) comment "状态，0否，1是",areaid int comment "区域ID",issite int comment "是否网点 1：是 0：否") comment "VIEW" partitioned by (fq_year string, fq_month string,fq_day string)

;
SELECT host,port,username,password,database_name,concat('select ','"cognosdb",','"" table_name',', count(1) data_cnt, ','"" year,','"" month,','"" day,','now() update_time ','from ','cognosdb','.','') FROM tb_get_conn_info where host='172.30.17.245' and database_name='cognosdb'

;
alter table tmp.tb_provincemanage add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_provincemanage/2019/07/23'

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_provincemanage

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='cognosdb' AND table_name='tio_finance_profit_import' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
select 'ods_bi','tb_provincemanage',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_provincemanage

;
DROP TABLE IF EXISTS tmp.tio_finance_profit_import

;
CREATE TABLE IF NOT EXISTS tmp.tio_finance_profit_import(finabranchcode varchar(30) comment "财务分部编号",status varchar(2) comment "数据状态 ：0 已删除 ；1：正常",profits decimal(15,2) comment "利润",finabranchname varchar(100) comment "财务分部名称",create_time timestamp comment "创建时间",update_time timestamp comment "修改时间",statdate varchar(10) comment "统计日期",id bigint comment "主键ID") comment "VIEW" partitioned by (fq_year string, fq_month string,fq_day string)

;
drop table if exists tmp.tb_data_count_tio_finance_profit_import

;
CREATE TABLE tmp.tb_data_count_tio_finance_profit_import(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
drop table IF EXISTS  tmp.tb_provincemanage

;
alter table tmp.tio_finance_profit_import add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tio_finance_profit_import/2019/07/23'

;
DROP TABLE IF EXISTS tmp.tb_applyaudit_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tb_applyaudit_rpt(id bigint comment "主键ID",applyid int comment "贷款申请单记录ID",auditlevel int comment "审批级数,分1,2,3,4,5…，此数据项的最高级数由参数设置，其中0为调查",serialnumber int comment "流水序号,记录审批流水顺序",auditamt decimal(15,2) comment "批核额度",recamt decimal(15,2) comment "建议额度,自动算，不可修改",phases int comment "付款期数",rate decimal(22,6) comment "未知",managefees decimal(22,6) comment "未知",fee decimal(22,6) comment "未知",auditresult int comment "审批结果,1同意，2拒绝，3退回",suggestion varchar(1024) comment "意见",auditstatus int comment "审批状态,0未审，1已审，默认为0,3退回",auditby varchar(50) comment "审批人,审批人。记录用户名",audittime timestamp comment "审批时间",backflow int comment "退回点。-2：客户资料维护；-1：贷款申请；审批从1开始",recid int comment "建议额度明细信息记录ID",backflowid int comment "退回点的记录ID",deratio decimal(15,2) comment "DE比例 负债率",drratio decimal(15,2) comment "DR比例 总负债率",llratio decimal(15,2) comment "LL比例 最高负债额",contracttemptype varchar(50) comment "合同模板类别",dkfs varchar(50) comment "贷款方式",hkfs int comment "还款方式",producttype varchar(50) comment "产品类型") comment "VIEW" partitioned by (fq_year string, fq_month string,fq_day string)

;
drop table if exists tmp.tb_data_count_tb_applyaudit_rpt

;
CREATE TABLE tmp.tb_data_count_tb_applyaudit_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
select 'ods_bi','tio_finance_profit_import',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tio_finance_profit_import

;
drop table IF EXISTS  tmp.tio_finance_profit_import

;
alter table tmp.tb_applyaudit_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_applyaudit_rpt/2019/07/23'

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_applyaudit_rpt

;
INSERT OVERWRITE TABLE stg_bi.tb_applyaudit_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,applyid applyid,auditlevel auditlevel,serialnumber serialnumber,auditamt auditamt,recamt recamt,phases phases,rate rate,managefees managefees,fee fee,auditresult auditresult,suggestion suggestion,auditstatus auditstatus,auditby auditby,audittime audittime,backflow backflow,recid recid,backflowid backflowid,deratio deratio,drratio drratio,llratio llratio,contracttemptype contracttemptype,dkfs dkfs,hkfs hkfs,producttype producttype from tmp.tb_applyaudit_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
alter table tmp.tb_contract_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_contract_rpt/2019/07/23'

;
INSERT OVERWRITE TABLE ods_bi.tb_contract_rpt select id id,applyid applyid,loanstatus loanstatus,returnstatus returnstatus,status status,chksigndate chksigndate,contractno contractno,feerate feerate,managefeerate managefeerate,auditamt auditamt,rate rate,chksignman chksignman,hkfs hkfs,auditloantime auditloantime,dkfs dkfs,amt amt,totalfee totalfee,sfamt sfamt,zqr zqr,cjr cjr,contractdate contractdate,loan_amt loan_amt,firstpayed_status firstpayed_status,rerate rerate,servicerate servicerate from tmp.tb_contract_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
drop table if exists tmp.tb_data_count_tb_contract_rpt

;
INSERT OVERWRITE TABLE stg_bi.tb_site_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,sitecode sitecode,sitename sitename,siteaddr siteaddr,sitetel sitetel,status status,orgid orgid,areacode areacode,areaname areaname,opendate opendate,siteallname siteallname,province province,city city,cityzone cityzone,yongyou_code yongyou_code,cityno cityno,areaid areaid,superiorid superiorid,department department from tmp.tb_site_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
INSERT OVERWRITE TABLE stg_bi.tb_contract_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,applyid applyid,loanstatus loanstatus,returnstatus returnstatus,status status,chksigndate chksigndate,contractno contractno,feerate feerate,managefeerate managefeerate,auditamt auditamt,rate rate,chksignman chksignman,hkfs hkfs,auditloantime auditloantime,dkfs dkfs,amt amt,totalfee totalfee,sfamt sfamt,zqr zqr,cjr cjr,contractdate contractdate,loan_amt loan_amt,firstpayed_status firstpayed_status,rerate rerate,servicerate servicerate from tmp.tb_contract_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
DROP TABLE IF EXISTS tmp.tb_return_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tb_return_rpt(id int comment "主键ID",applyid bigint comment "申请ID",loanid int comment "放款ID",payphases int comment "期数",totalphases int comment "总期数",status int comment "回款状态，0待收回，1已确认，2收回成功，3收回失败",paydate date comment "还款日期",enddate date comment "结息日期",shoulddelayint double comment "应还逾期利息",actcapital double comment "实还本金",amt double comment "交易金额",shouldpaydate date comment "应还款日期",shouldcapital double comment "应还本金",isdelay int comment "是否逾期，0否，1是",shouldint double comment "应还利息",actmanage double comment "实还管理费",actdelayint double comment "实还逾期利息",acttcf double comment "实还停车费",actdelayamt double comment "实还违约金",actsmcsf double comment "实还上门催收费",actgpsf double comment "实还GPS费",acttchf double comment "实还拖车费",actscf double comment "实还赎车费",actkdf double comment "实还快递费",actint double comment "实还利息",shouldglf double comment "应还账户管理费",shouldtcf double comment "应还停车费",shoulddelayamt double comment "应还违约金",shouldsmcsf double comment "应还上门催收费",shouldgpsf double comment "应还GPS费",shouldtchf double comment "应还拖车费",shouldscf double comment "应还赎车费",shouldkdf double comment "应还快递费",shouldmanage double comment "应还管理费",paymode int comment "交易方式,1现金，2银行转账，3自动代扣",beoverdue int comment "逾期天数",totalamt decimal(15,2) comment "还款合计",totalshould decimal(15,2) comment "应还总额",totalact decimal(15,2) comment "实还合计",totalreddelayint decimal(15,2) comment "减免逾期利息合计",shouldkcf decimal(15,2) comment "应还考察费",actkcf decimal(15,2) comment "实还考察费",shoulddyf decimal(15,2) comment "应还抵押登记费",actdyf decimal(15,2) comment "实还抵押登记费",shoulddqx decimal(15,2) comment "应还盗抢险(现：风险保障费)",actdqx decimal(15,2) comment "实还盗抢险(现：风险保障费)",shouldxzf decimal(15,2) comment "应还刑侦费",actxzf decimal(15,2) comment "实还刑侦费",shouldpgf decimal(15,2) comment "应还评估费",actpgf decimal(15,2) comment "实还评估费",shouldspf decimal(15,2) comment "应还审核费",actspf decimal(15,2) comment "实还审核费",shouldlsf decimal(15,2) comment "应还律师见证费(现：服务费)",actlsf decimal(15,2) comment "实还律师见证费(现：服务费)",shouldjjf decimal(15,2) comment "应还加急费",actjjf decimal(15,2) comment "实还加急费",shouldgzf decimal(15,2) comment "应还抵押登记公证费",actgzf decimal(15,2) comment "实还抵押登记公证费",shouldfirstfees decimal(15,2) comment "应还一次性手续费",actfirstfees decimal(15,2) comment "实还一次性手续费",shouldqtf decimal(15,2) comment "应还其他费",actqtf decimal(15,2) comment "实还其他费",shouldfxj decimal(15,2) comment "应还风险准备金",actfxj decimal(15,2) comment "实还风险准备金",shouldpenaty decimal(15,2) comment "应还逾期违约金",actpenaty decimal(15,2) comment "逾期违约金",update_time date comment "更新时间",totalredforfeit1 decimal(15,2) comment "减免风险金1(小贷那边注释是减免快递费，但实际意思就是减免风险金)",shouldzqfxj decimal(15,2) comment "应还展期风险金",actzqfxj decimal(15,2) comment "实际展期风险金",returndetailid int comment "回款流水ID",shouldcarcost decimal(15,2) comment "应还车辆折损费",actcarcost decimal(15,2) comment "实还车辆折损费",bankaccount varchar(200) comment "回款账户名",actinfoservicefee decimal(15,2) comment "实还信息服务费(360车贷)",shouldinfoservicefee decimal(15,2) comment "应还信息服务费(360车贷)") comment "VIEW" partitioned by (fq_year string, fq_month string,fq_day string)

;
drop table IF EXISTS  tmp.tb_contract_rpt

;
SELECT host,port,username,password,database_name,concat('select ','"cognosdb",','"v_bd_tb_return_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','cognosdb','.','v_bd_tb_return_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='cognosdb'

;
DROP TABLE IF EXISTS tmp.tb_currentprog_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tb_currentprog_rpt(id int comment "主键ID",contractno varchar(50) comment "合同号",custname varchar(50) comment "客户姓名",sitecode varchar(50) comment "分公司编号",sitename varchar(50) comment "分公司名字（历史，非最新）",loancode varchar(50) comment "贷款产品类型编号",loantype varchar(50) comment "贷款产品类型名称",dkfs varchar(50) comment "抵押方式",hkfs varchar(50) comment "还款方式",carno_fcdz varchar(200) comment "身份证_房产证号",assprice decimal(16,2) comment "评估价",bank varchar(100) comment "银行",bankno varchar(100) comment "银行卡号",gender varchar(16) comment "性别",docno varchar(100) comment "身份证号",phoneno varchar(100) comment "手机号",loanamt decimal(16,2) comment "借款金额",shouldcapital decimal(16,2) comment "应还本金",qybzj decimal(16,2) comment "风险处置押金",totalphases int comment "贷款期数",loandate date comment "提现时间",returnday int comment "还款日（号）",firstreturndate date comment "第一期的回款日期",lastreturndate date comment "最后一期的回款日期",compositefees decimal(22,6) comment "综合费率",returntotal decimal(16,2) comment "贷款期数 (月)",currentamt decimal(16,2) comment "当月应还款",currentactint decimal(16,2) comment "当月实收息费",phase0 decimal(16,2) comment "第0期",phase1 decimal(16,2) comment "第1期",phase2 decimal(16,2) comment "第2期",phase3 decimal(16,2) comment "第3期",phase4 decimal(16,2) comment "第4期",phase5 decimal(16,2) comment "第5期",phase6 decimal(16,2) comment "第6期",phase7 decimal(16,2) comment "第7期",phase8 decimal(16,2) comment "第8期",phase9 decimal(16,2) comment "第9期",phase10 decimal(16,2) comment "第10期",phase11 decimal(16,2) comment "第11期",phase12 decimal(16,2) comment "第12期",phase12l decimal(16,2) comment "第12期以上",returnphases int comment "已还期数",noreturnphases int comment "未还期数",returnamt decimal(16,2) comment "已还总额",noreturnamt decimal(16,2) comment "未还总额",returnint decimal(16,2) comment "已还息费",noreturnint decimal(16,2) comment "未还息费",returncapital decimal(16,2) comment "已还本金",noreturncapital decimal(16,2) comment "未还本金",currentduedays int comment "当月逾期天数",totalduedays int comment "累计逾期天数",returnstatus varchar(16) comment "还款情况",remark varchar(512) comment "备注",stadate date comment "统计日期",settledate date comment "结清时间",isdirect int comment "是否直销 0：否 1：直销 2：呼叫中心",sources varchar(100) comment "合作机构",orgleader varchar(50) comment "团队经理",salesman varchar(50) comment "客户经理",gpsamt decimal(10,2) comment "放款预收GPS",baddebt int comment "是否已核销坏账，1表示已核销，0表示没有",directseller varchar(50) comment "直销坐席",applyid bigint comment "申请ID",waitloanamt decimal(16,2) comment "待放尾款",auditamt decimal(15,2) comment "批核金额RE",yearmonth varchar(7) comment "年月查询",unifiedcustname varchar(200) comment "联合贷扣款账户名",unifiedcontractno varchar(50) comment "联合贷主进件合同号",orgid int comment "组织机构ID",usertype varchar(10) comment "用户类型(新客户/老客户)",productid int comment "贷款产品ID",productname varchar(100) comment "贷款产品",coopname varchar(50) comment "合作机构",orgname varchar(100) comment "组织机构（存贷款申请时的名称）",microstoreflag int comment "是否微门店 0:否,1:是",contractbody varchar(20) comment "合同主体",loanchannel varchar(50) comment "放款渠道",returncoopname varchar(50) comment "回款确认机构",applyaudittime timestamp comment "申请提交时间",counselingfees decimal(15,2) comment "咨询服务费",returncarcostfees decimal(15,2) comment "已还车辆折损费",noreturncarcostfees decimal(15,2) comment "未还车辆折损费",single_premiums int comment "趸缴产品(1:是,0:否)",actfxbzf decimal(15,2) comment "实还风险保障费",withdrawdate date comment "满标时间",cursitename varchar(50) comment "当前分公司名字",noreturnmanage decimal(15,2) comment "未还管理费",returnmanage decimal(15,2) comment "已还管理费",returnmanage0 decimal(15,2) comment "发放借款预收管理费（第0期预收管理费）",fileno varchar(32) comment "档案号",directorgid int comment "直销组织ID",directorgname varchar(100) comment "直销组织名",rerate decimal(10,6) comment "RE费率",corpname varchar(255) comment "担保公司名称",leavestatus char(1) comment "离职状态 1：已离职 0：在职",empno varchar(50) comment "客户经理工号",agentid varchar(50) comment "经纪人ID",agentcode varchar(50) comment "经纪人工号",agentname varchar(50) comment "经纪人姓名",inviterduties varchar(50) comment "邀请人岗位",update_time timestamp comment "更新时间",actdbfwf decimal(15,2) comment "实还担保服务费",departmentid int comment "事业部ID",departmentname varchar(50) comment "事业部名称",dklx varchar(20) comment "贷款类型",cyssitename varchar(100) comment "超越数公司名称") comment "进度历史表" partitioned by (fq_year string, fq_month string,fq_day string)

;
DROP TABLE IF EXISTS tmp.tb_custinfo_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tb_custinfo_rpt(id int comment "",applyid int comment "",custname_md5 varchar(320) comment "",marry varchar(40) comment "",doctype varchar(50) comment "?",docno varchar(6) comment "",docno_md5 string comment "",birthplace varchar(20) comment "",household varchar(200) comment "",childnum int comment "",industry varchar(50) comment "",duties varchar(20) comment "?",salary decimal(16,2) comment "?",gyrs varchar(50) comment "",corpcaptial decimal(16,2) comment "",addr varchar(200) comment "tb_lb_estateinfo.addr",comeheredate varchar(200) comment "",livetime varchar(200) comment "",mobile varchar(100) comment "电话号码",mobile2 varchar(100) comment "电话号码2",mobile3 varchar(100) comment "电话号码3",gender varchar(4) comment "",operatetime int comment "经营时间(1:小于等于1年,2:大于1年小于等于3年,3:大于3年小于等于5年,4:大于5年)",registercapital int comment "注册资金(1:未注册或无固定工作者,2:注册资金小于100万元或个体工商户,3:注册资金大于等于100万元,4:注册资金大于等于1000万元或企事业单位编制内员工)",onwer int comment "房产状况(1:本人名下商品房,2:配偶、直系亲属名下商品房,3:本人、配偶、直系亲属名下本地自建房,4:配偶、直系亲属名下按揭商品房,5:本人、配偶、直系亲属名下按异地自建房)",buydate date comment "tb_lb_carmessage中",gpsinstallman varchar(50) comment "gps安装人员",housetpye int comment "类型 1 自购；2 家族拥有；3 朋友拥有；4 宿舍；5 租用",age int comment "年龄",dln varchar(50) comment "电核意愿，1愿意电核主贷人，0不愿意电核。默认为1愿意电核主贷人") comment "VIEW" partitioned by (fq_year string, fq_month string,fq_day string)

;
SELECT host,port,username,password,database_name,concat('select ','"desens",','"tb_currentprog_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','desens','.','tb_currentprog_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='desens'

;
SELECT host,port,username,password,database_name,concat('select ','"cognosdb",','"v_bd_tb_custinfo_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','cognosdb','.','v_bd_tb_custinfo_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='cognosdb'

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_return_rpt

;
drop table if exists tmp.tb_data_count_tb_return_rpt

;
DROP TABLE IF EXISTS tmp.tb_lb_pawncarsituation

;
CREATE TABLE IF NOT EXISTS tmp.tb_lb_pawncarsituation(drivingdistance decimal(15,2) comment "行驶里程",pawn_car_in_time timestamp comment "入库时间",pawn_car_out_time timestamp comment "出库时间",follow_up_situation varchar(20) comment "增加工单跟进情况字段",manager varchar(50) comment "录入人",managerpartner varchar(50) comment "经办合作商名称",managergroup varchar(50) comment "经办人组别",garagetype varchar(50) comment "车库类型：dist-pawnGarageType",gpstype varchar(50) comment "GPS终端类型：dist-pawnGpsType",remaincapital decimal(15,2) comment "未还本金",province varchar(50) comment "杞﹁締鍋滄斁鐪佷唤",carsituation int comment "车辆情况：1:正常押车入库,2:贷后收车入库,3:售出处置出库,4:结清赎车出库,5:检查出库,6:其他,7:反押入库,8:公司赎车入库,9:人车消失,10:委外收车入库,11:处置退车入库,12:客户主动入库,13:押车待入库,14:空,15:临时押车入库,16:临时押车出库,17:第三方收车入库,18:审批归还出库,19:贷后强制结清出库,21:车辆二押,22:临时催收用车归还入库,23:临时催收用车出库,24:正常押证不在库,25:正常押证结清,26:临时押车转押证出库",gpsinstall int comment "GPS情况,0:未安装,1:已安装,3:已拆除",id int comment "编号,主键（自增）",createby varchar(50) comment "鍒涘缓浜篿d",handbystr_md5 varchar(192) comment "",scoverduedays int comment "状态变更时的逾期天数",city varchar(50) comment "车辆停放城市",pawntype int comment "抵质押类型,0:押车,1:押证,2:押车押证",applyid int comment "贷款申请单记录ID,贷款申请单信息表的记录ID",drivflag int comment "鏄?惁鏈夎?椹惰瘉鍘熶欢,0:鏄?1:鍚",handletime timestamp comment "缁忓姙鏃堕棿",contractno varchar(50) comment "合同记录ID",remark string comment "备注",carstatus int comment "车库状态：1:在库,2:不在库,3:未知",gpsstatus int comment "GPS情况,0:正常,1:掉线,2:出省,3：拆除",pawnsituation int comment "抵押登记办理情况,0:未办理,1:已办理,2:已解压",addressdetail string comment "",createtime timestamp comment "鍒涘缓鏃堕棿",handleby varchar(50) comment "缁忓姙浜篿d",sparekeynum int comment "备用钥匙数量",cityzone varchar(50) comment "车辆停放区县",createbystr varchar(50) comment "创建人",pawncargroup varchar(50) comment "收车组别：dist-pawnCarGroup",protocolimgpath varchar(500) comment "协议附件地址 逗号隔开",wwbaojia decimal(15,2) comment "委外报价") comment "VIEW" partitioned by (fq_year string, fq_month string,fq_day string)

;
SELECT host,port,username,password,database_name,concat('select ','"lms",','"v_bd_tb_lb_pawncarsituation" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','lms','.','v_bd_tb_lb_pawncarsituation') FROM tb_get_conn_info where host='172.30.16.250' and database_name='lms'

;
alter table tmp.tb_custinfo_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_custinfo_rpt/2019/07/23'

;
INSERT OVERWRITE TABLE ods_bi.tb_custinfo_rpt select id id,applyid applyid,custname_md5 custname_md5,marry marry,doctype doctype,docno docno,docno_md5 docno_md5,birthplace birthplace,household household,childnum childnum,industry industry,duties duties,salary salary,gyrs gyrs,corpcaptial corpcaptial,addr addr,comeheredate comeheredate,livetime livetime,mobile mobile,mobile2 mobile2,mobile3 mobile3,gender gender,operatetime operatetime,registercapital registercapital,onwer onwer,buydate buydate,gpsinstallman gpsinstallman,housetpye housetpye,age age,dln dln from tmp.tb_custinfo_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
select 'ods_bi','tb_currentdue_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_currentdue_rpt

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_lb_pawncarsituation

;
drop table if exists tmp.tb_data_count_tb_lb_pawncarsituation

;
INSERT OVERWRITE TABLE stg_bi.tb_custinfo_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,applyid applyid,custname_md5 custname_md5,marry marry,doctype doctype,docno docno,docno_md5 docno_md5,birthplace birthplace,household household,childnum childnum,industry industry,duties duties,salary salary,gyrs gyrs,corpcaptial corpcaptial,addr addr,comeheredate comeheredate,livetime livetime,mobile mobile,mobile2 mobile2,mobile3 mobile3,gender gender,operatetime operatetime,registercapital registercapital,onwer onwer,buydate buydate,gpsinstallman gpsinstallman,housetpye housetpye,age age,dln dln from tmp.tb_custinfo_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-hadoop/20190723/155284/7916342851867111//data' select apply_code,Vehicle_BuyDate,Apt_ReLoan_Type from ods_sensitive.car_decision_input_dec where data_date >='2019-07-01' and length(Vehicle_BuyDate)=0  and Apt_ReLoan_Type='0' limit 100

;
drop table IF EXISTS  tmp.tb_currentdue_rpt

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='desens' AND table_name='tb_org_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
select 'ods_lms','tb_lb_pawncarsituation',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_lms.tb_lb_pawncarsituation

;
drop table IF EXISTS  tmp.tb_custinfo_rpt

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='warehouse' AND table_name='tbl_basic_info_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
drop table IF EXISTS  tmp.tb_lb_pawncarsituation

;
drop table if exists tmp.tb_data_count_tb_org_rpt

;
CREATE TABLE tmp.tb_data_count_tb_org_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
insert overwrite table dw_org.dw_org_structure_level_info
SELECT
top_org_id,
top_org_name,
top_org_leader_id,
top_org_leader,
'0' top_level,
second_org_id,
second_org_name,
second_org_leader_id,
second_org_leader,
'1' second_level,
BU_id,
org.BU_name,
BU_leader_id,
BU_leader,
'2' BU_level,
bigarea_id,
bigarea_name,
bigarea_leader_id,
bigarea_leader,
'3' bigarea_leve,
COALESCE(area_id,100000+prov.PROVINCEID) area_id,
COALESCE(area_name,case when BU_ID='1985' THEN CONCAT('汽车金融袋吧',prov.PROVINCENAME) else prov.PROVINCENAME end) area_name,
area_leader_id,
area_leader,
'4' area_level,
COALESCE(province_id,100000+prov.PROVINCEID) province_id,
COALESCE(province_name,case when BU_ID='1985' THEN CONCAT('汽车金融袋吧',prov.PROVINCENAME) else prov.PROVINCENAME end) province_name,
province_leader_id,
province_leader,
'4' province_level,
SITE_id,
site_name,
site_leader_id,
site_leader,
'5' site_level,
group_id,
group_name,
group_leader_id,
group_leader,
'6' group_level,
org_id,
org_name,
org_leader_id,
org_leader,
'7' org_level,
SITE_CODE,
from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') update_date
FROM
(
SELECT
o1.id top_org_id,
o1.orgname top_org_name,
o1.orgleaderid top_org_leader_id,
o1.orgleader top_org_leader,
o2.id second_org_id,
o2.orgname second_org_name,
o2.orgleaderid second_org_leader_id,
o2.orgleader second_org_leader,
o3.id BU_id,
o3.orgname BU_name,
o3.orgleaderid BU_leader_id,
o3.orgleader BU_leader,
o4.id bigarea_id,
o4.orgname bigarea_name,
o4.orgleaderid bigarea_leader_id,
o4.orgleader bigarea_leader,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o4.id else
case when o5.orgname like '%服务商%' then null else o5.id end end area_id,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o4.orgname else
case when o5.orgname like '%服务商%' then null else o5.orgname end end area_name,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o4.orgleaderid else
case when o5.orgname like '%服务商%' then null else o5.orgleaderid end end area_leader_id,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o4.orgleader else
case when o5.orgname like '%服务商%' then null else o5.orgleader end end area_leader,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o4.id else
case when o5.orgname like '%服务商%' then null else o5.id end end province_id,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o4.orgname else
case when o5.orgname like '%服务商%' then null else o5.orgname end end province_name,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o4.orgleaderid else
case when o5.orgname like '%服务商%' then null else o5.orgleaderid end end province_leader_id,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o4.orgleader else
case when o5.orgname like '%服务商%' then null else o5.orgleader end end province_leader,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o4.id else
case when o5.orgname like '%服务商%' then o5.id else o6.id end end site_id,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o4.orgname else
case when o5.orgname like '%服务商%' then o5.orgname else o6.orgname end end site_name,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o4.orgleaderid else
case when o5.orgname like '%服务商%' then o5.orgleaderid else o6.orgleaderid end end site_leader_id,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o4.orgleader else
case when o5.orgname like '%服务商%' then o5.orgleader else o6.orgleader end end site_leader,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o5.id else
case when o5.orgname like '%服务商%' then o6.id else o7.id end end group_id,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o5.orgname else
case when o5.orgname like '%服务商%' then o6.orgname else o7.orgname end end group_name,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o5.orgleaderid else
case when o5.orgname like '%服务商%' then o6.orgleaderid else o7.orgleaderid end end group_leader_id,
case when o4.orgname like '%直销%' or o4.orgname like '%渠道%' then o5.orgleader else
case when o5.orgname like '%服务商%' then o6.orgleader else o7.orgleader end end group_leader,
COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(o8.id,o7.id),o6.id),o5.id),o4.id),o3.id),o2.id),o1.id) org_id,
COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(o8.orgname,o7.orgname),o6.orgname),o5.orgname),o4.orgname),o3.orgname),o2.orgname),o1.orgname) org_name,
COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(o8.orgleaderid,o7.orgleaderid),o6.orgleaderid),o5.orgleaderid),o4.orgleaderid),o3.orgleaderid),o2.orgleaderid),o1.orgleaderid) org_leader_id,
COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(o8.orgleader,o7.orgleader),o6.orgleader),o5.orgleader),o4.orgleader),o3.orgleader),o2.orgleader),o1.orgleader) org_leader,
COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(o8.status,o7.status),o6.status),o5.status),o4.status),o3.status),o2.status),o1.status) org_status,
COALESCE(o8.SITECODE,o7.SITECODE,o6.SITECODE,o5.SITECODE) SITE_CODE
FROM
ods_lms.tb_sys_org o1
LEFT JOIN ods_lms.tb_sys_org o2 ON o1.id = o2.pid
LEFT JOIN ods_lms.tb_sys_org o3 ON o2.id = o3.pid
LEFT JOIN ods_lms.tb_sys_org o4 ON o3.id = o4.pid
LEFT JOIN ods_lms.tb_sys_org o5 ON o4.id = o5.pid
LEFT JOIN ods_lms.tb_sys_org o6 ON o5.id = o6.pid
LEFT JOIN ods_lms.tb_sys_org o7 ON o6.id = o7.pid
LEFT JOIN ods_lms.tb_sys_org o8 ON o7.id = o8.pid
where o1.PID=0 and o3.orgname in ('汽车金融袋吧')
and o1.status!=0
and o2.status!=0
and o3.status!=0
and o4.status!=0
and o5.status!=0
and o6.status!=0
union all
SELECT
o1.id top_org_id,
o1.orgname top_org_name,
o1.orgleaderid top_org_leader_id,
o1.orgleader top_org_leader,
o2.id second_org_id,
o2.orgname second_org_name,
o2.orgleaderid second_org_leader_id,
o2.orgleader second_org_leader,
o3.id BU_id,
o3.orgname BU_name,
o3.orgleaderid BU_leader_id,
o3.orgleader BU_leader,
o4.id bigarea_id,
o4.orgname bigarea_name,
o4.orgleaderid bigarea_leader_id,
o4.orgleader bigarea_leader,
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o4.id else
case when o5.orgname like '%服务商%' then null else o5.id end end area_id,
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o4.orgname else
case when o5.orgname like '%服务商%' then null else o5.orgname end end area_name,
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o4.orgleaderid else
case when o5.orgname like '%服务商%' then null else o5.orgleaderid end end area_leader_id,
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o4.orgleader else
case when o5.orgname like '%服务商%' then null else o5.orgleader end end area_leader,
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o4.id else
case when o5.orgname = '廖庆福区域' then o6.id else
case when o5.orgname like '%服务商%' then null else o5.id end end end province_id,
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o4.orgname else
case when o5.orgname = '廖庆福区域' then o6.orgname else
case when o5.orgname like '%服务商%' then null else o5.orgname end end end province_name,
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o4.orgleaderid else
case when o5.orgname = '廖庆福区域' then o6.ORGLEADERID else
case when o5.orgname like '%服务商%' then null else o5.orgleaderid end end end province_leader_id,
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o4.orgleader else
case when o5.orgname = '廖庆福区域' then o6.ORGLEADER else
case when o5.orgname like '%服务商%' then null else o5.orgleader end end end province_leader,
case when o5.orgname like '%服务商%' then o5.id else
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o4.id else
case when o5.orgname = '廖庆福区域' then o7.id else
o6.id end end end site_id,
case when o5.orgname like '%服务商%' then o5.orgname else
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o4.orgname else
case when o5.orgname = '廖庆福区域' then o7.orgname else
o6.orgname end end end site_name,
case when o5.orgname like '%服务商%' then o5.orgleaderid else
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o4.orgleaderid else
case when o5.orgname = '廖庆福区域' then o7.orgleaderid else
o6.orgleaderid end end end site_leader_id,
case when o5.orgname like '%服务商%' then o5.orgleader else
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o4.orgleader else
case when o5.orgname = '廖庆福区域' then o7.orgleader else
o6.orgleader end end end site_leader,
case when o5.orgname like '%服务商%' then o6.id else
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o5.id else
case when o5.orgname = '廖庆福区域' then o8.id else
o7.id end end end group_id,
case when o5.orgname like '%服务商%' then o6.orgname else
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o5.orgname else
case when o5.orgname = '廖庆福区域' then o8.orgname else
o7.orgname end end end group_name,
case when o5.orgname like '%服务商%' then o6.orgleaderid else
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o5.orgleaderid else
case when o5.orgname = '廖庆福区域' then o8.orgleaderid else
o7.orgleaderid end end end group_leader_id,
case when o5.orgname like '%服务商%' then o6.orgleader else
case when o4.orgname like '%渠道%' or o4.orgname like '客服%' or o4.orgname like '呼叫%'  then o5.orgleader else
case when o5.orgname = '廖庆福区域' then o8.orgleader else
o7.orgleader end end end group_leader,
COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(o8.id,o7.id),o6.id),o5.id),o4.id),o3.id),o2.id),o1.id) org_id,
COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(o8.orgname,o7.orgname),o6.orgname),o5.orgname),o4.orgname),o3.orgname),o2.orgname),o1.orgname) org_name,
COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(o8.orgleaderid,o7.orgleaderid),o6.orgleaderid),o5.orgleaderid),o4.orgleaderid),o3.orgleaderid),o2.orgleaderid),o1.orgleaderid) org_leader_id,
COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(o8.orgleader,o7.orgleader),o6.orgleader),o5.orgleader),o4.orgleader),o3.orgleader),o2.orgleader),o1.orgleader) org_leader,
COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(COALESCE(o8.status,o7.status),o6.status),o5.status),o4.status),o3.status),o2.status),o1.status) org_status,
COALESCE(o8.SITECODE,o7.SITECODE,o6.SITECODE,o5.SITECODE) SITE_CODE
FROM
ods_lms.tb_sys_org o1
LEFT JOIN ods_lms.tb_sys_org o2 ON o1.id = o2.pid
LEFT JOIN ods_lms.tb_sys_org o3 ON o2.id = o3.pid
LEFT JOIN ods_lms.tb_sys_org o4 ON o3.id = o4.pid
LEFT JOIN ods_lms.tb_sys_org o5 ON o4.id = o5.pid
LEFT JOIN ods_lms.tb_sys_org o6 ON o5.id = o6.pid
LEFT JOIN ods_lms.tb_sys_org o7 ON o6.id = o7.pid
LEFT JOIN ods_lms.tb_sys_org o8 ON o7.id = o8.pid
where o1.PID=0 and o3.orgname in ('汽车金融畅快')
and o1.status!=0
and o2.status!=0
and o3.status!=0
and o4.status!=0
and o5.status!=0
) org
left join
ods_lms.tb_sys_site site on org.SITE_CODE = site.SITECODE
left join ods_lms.tb_sys_province prov on site.PROVINCE=prov.PROVINCEID
where org.org_status!='0'

;
DROP TABLE IF EXISTS atmp.dw_car_cust_age_sex_info

;
CREATE TABLE atmp.dw_car_cust_age_sex_info AS
SELECT id
, credentials_no_enc
, CASE WHEN LENGTH(credentials_no) = 18
THEN CONCAT_WS('-',SUBSTR(credentials_no,7,4),SUBSTR(credentials_no,11,2),SUBSTR(credentials_no,13,2))
WHEN LENGTH(credentials_no) = 15
THEN CONCAT('19',SUBSTR(credentials_no,7,2),
'-', SUBSTR(credentials_no,9,2),
'-', SUBSTR(credentials_no,11,2))
ELSE NULL
END AS credentials_birth
, CASE WHEN LENGTH(credentials_no) = 18
THEN CASE WHEN SUBSTR(credentials_no,17,1)%2 = 0 THEN '女'
WHEN SUBSTR(credentials_no,17,1)%2 <> 0 THEN '男'
ELSE NULL
END
WHEN LENGTH(credentials_no) = 15
THEN CASE WHEN SUBSTR(credentials_no,15)%2 = 0 THEN '女'
WHEN SUBSTR(credentials_no,15)%2 <> 0 THEN '男'
ELSE NULL
END
ELSE NULL
END AS credentials_sex
FROM(
SELECT id
, docno_md5 AS credentials_no_enc
, tbd_dec(docno_md5) AS credentials_no
FROM ods_lms.tb_lb_custinfo
)A

;
DROP TABLE IF EXISTS atmp.dw_car_cust_loan_apply_info

;
CREATE TABLE atmp.dw_car_cust_loan_apply_info AS
SELECT app.id        AS apply_id
, anti.score    AS antifraud_score
, repay.is_early_clear
, py.paymentid  AS payment_id
, py.loanstatus AS pay_status
, py.loandate   AS pay_date
, from_unixtime(unix_timestamp(py.confirmdate, 'yyyy-MM-dd HH:mm:ss')) AS first_pay_date
, py.firstpayamt AS first_pay_amt
, py.payamt      AS total_pay_amt
, py.actualpayamt AS actual_pay_amt
, py.full_scale_time AS full_scale_time
, py.tn_userid
, repay.cur_repay_phase AS cur_repay_phase
, CASE WHEN pplan.ext_phases >0 THEN '1' ELSE '0' END AS ext_status
, pplan.ext_phases AS ext_phases
, sp_repay.last_pay_date AS sp_last_pay_date
, repay.last_pay_date AS xd_last_pay_date
, tel.tel_verify_flag
FROM ods_lms.tb_lb_applyinfo app
LEFT JOIN (
SELECT apply_id
, score
, MAX(id) AS max_id
FROM ods_lms.tb_risk_antifraud_score
GROUP BY apply_id,score
)anti ON app.id=anti.apply_id
LEFT JOIN (
SELECT re.applyid
, MIN(CASE WHEN re.`status` IN (0,-1) THEN re.payphases ELSE -1 END) AS cur_repay_phase
, MAX(red.paydate) AS last_pay_date
, MAX(CASE WHEN sc.loanid IS NULL THEN 0 ELSE 1 END) AS is_early_clear
FROM ods_lms.tb_lf_return re
LEFT JOIN ods_lms.tb_lf_returndetail red on re.id=red.returnid
LEFT JOIN ods_lms.tb_lf_specialclear sc on re.loanid=sc.loanid and sc.`status`='4'
GROUP BY re.applyid
)repay ON app.id=repay.applyid
LEFT JOIN (
SELECT p.APPLYID
, p.id AS paymentid
, p.amt
, 1 LOANSTATUS
, p.loandate
, pd.confirmdate
, pd.firstpayamt
, pd.payamt
, pd.actualpayamt
, pd.full_scale_time
, pd.tn_userid
FROM ods_lms.tb_lm_payment p
LEFT JOIN(
SELECT T1.paymentid
, T1.applyid
, T1.confirmdate
, T1.firstpayamt
, T1.payamt
, T1.actualpayamt
, T2.full_scale_time
, T2.tn_userid
FROM (
SELECT pd.paymentid
, pd.applyid
, MAX(CASE WHEN pd.paytype=1 THEN pd.confirmdate ELSE '1990-01-01 00:00:00' END) AS confirmdate
, SUM(CASE WHEN pd.paytype=1 THEN pd.payamt ELSE 0 END) AS firstpayamt
, SUM(pd.payamt) payamt
, SUM(pd.actualpayamt) actualpayamt
FROM ods_lms.tb_lm_paymentdetail pd
WHERE pd.STATUS=1
GROUP BY pd.paymentid , pd.applyid
)T1
LEFT JOIN (
SELECT pd.paymentid
, pd.applyid
, lend.tn_userid
, from_unixtime(MAX(CAST(bw.success_time AS BIGINT)),'yyyy-MM-dd HH:mm:ss') AS full_scale_time
FROM ods_lms.tb_lm_paymentdetail pd
LEFT JOIN ods_touna.tn_lend lend ON pd.paymentid = lend.paymentid AND NVL(lend.exhi_type,0) = 0
LEFT JOIN ods_touna.dw_borrow bw ON lend.borrowid = bw.id AND bw.status IN(3,73)
WHERE pd.STATUS=1
GROUP BY pd.paymentid,pd.applyid,lend.tn_userid
)T2 ON T1.paymentid = T2.paymentid AND T1.applyid = T2.applyid
)pd ON p.id=pd.PAYMENTID
WHERE loanstatus=1
)py ON app.id=py.applyid
LEFT JOIN (
SELECT applyid,COUNT(1) AS ext_phases FROM ods_lms.tb_lm_payplan WHERE isextension=1 GROUP BY applyid
)pplan ON app.id=pplan.applyid
LEFT JOIN (
SELECT h.apply_id, MAX(i.repay_act_time) AS last_pay_date
FROM ods_credit_loan.tn_sp_repay_plan h
LEFT JOIN ods_credit_loan.tn_sp_repay_return i ON h.id = i.repay_id
GROUP BY h.apply_id
)sp_repay ON app.id=sp_repay.apply_id
LEFT JOIN (
SELECT applyid, MAX(CASE WHEN LENGTH(dhnr) > 25 THEN 1 ELSE 0 END) AS tel_verify_flag
FROM ods_lms.tb_lb_dhmessage
GROUP BY applyid
)tel ON app.id = tel.applyid

;
select 'ods_bi','tb_return_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_return_rpt

;
drop table if exists tmp.tb_data_count_tbl_basic_info_rpt

;
CREATE TABLE tmp.tb_data_count_tbl_basic_info_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
alter table tmp.tb_org_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_org_rpt/2019/07/23'

;
INSERT OVERWRITE TABLE ods_bi.tb_org_rpt select id id,orgno orgno,orgname orgname,orgleader orgleader,pid pid,issite issite,isaudit isaudit,orgleaderid orgleaderid,sitecode sitecode,modifyby modifyby,modifytime modifytime,status status,micro_store_flag micro_store_flag from tmp.tb_org_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
drop table IF EXISTS  tmp.tb_return_rpt

;
INSERT OVERWRITE TABLE stg_bi.tb_org_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,orgno orgno,orgname orgname,orgleader orgleader,pid pid,issite issite,isaudit isaudit,orgleaderid orgleaderid,sitecode sitecode,modifyby modifyby,modifytime modifytime,status status,micro_store_flag micro_store_flag from tmp.tb_org_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
insert overwrite table dw_car.dw_car_cust_basic_info
SELECT
c.id cust_id,
c.applyid,
c.custname_md5 custname,
c.docno docno,
c.docno_md5 docno_md5,
c.pinyin ,
tc.nation,
c.gender,
T.credentials_sex,
c.education,
c.marry,
c.birthday,
T.credentials_birth,
c.birthplace,
coalesce(c.birthplacetype,case tc.nature_type when 'bd' then 1 when 'ydsn' then 2 when 'ydsw' then 3 else null end) nature_type,
tc.nature_state,
tc.nature_city,
tc.nature_cityzone,
tc.nature_street,
tc.local_city,
tc.local_state,
c.mobile,
c.mobile_md5,
bank bank_name,
bankno,
bankno_md5,
tc.comp_name,
tc.comp_type,
tc.education AS contact_education,
tc.pay_amt  AS income,
a.CREATETIME src_update_time,
from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') update_date,
'1' status
FROM
ods_lms.tb_lb_custinfo c
join ods_lms.tb_lb_applyinfo a on c.applyid = a.id
left join(
select t1.id_code_md5
, t1.nature_state
, t1.nation
, t1.nature_city
, t1.nature_cityzone
, t1.nature_street
, t1.nature_type
, t1.local_city
, t1.local_state
, t1.create_date
, t1.education
, t2.comp_name
, t2.comp_type
, t2.pay_amt
, t2.last_upd_date
, row_number() over(partition BY t1.id_code_md5 ORDER BY t1.create_date DESC,t2.last_upd_date DESC) rank_id
FROM ods_lms.tb_contact t1
left join ods_lms.tb_con_comp t2
on t1.row_id=t2.contact_id
where id_code_md5 is not null ) tc
on c.docno_md5=tc.id_code_md5 and tc.rank_id=1
left join
(select distinct applyid,bank,bankno,bankno_md5 FROM ods_lms.tb_lm_custaccount) count
on c.applyid=count.applyid
left join atmp.dw_car_cust_age_sex_info T
on c.id = T.id

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='warehouse' AND table_name='tbl_return_detail_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
alter table tmp.tbl_basic_info_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tbl_basic_info_rpt/2019/07/23'

;
insert overwrite table dw_org.dw_org_site_info
select
s.id,
s.sitecode,
s.sitename,
big.pid  as bu_id,
bu.orgname as bu_name,
big.id as bigarea_id,
big.bigareaname as bigarea_name,
area.id as prov_area_id,
area.areaname as prov_area_name,
p.PROVINCENAME,
s.city AS city_id,
c.CITYNAME,
cz.CITYZONENAME,
coalesce(oo.status,s.status) status,
s.siteaddr,
s.opendate,
loan.min_loan_date,
s.yongyou_code,
e.empno,
case when e.duties in ('分公司经理','分公司总经理','分总') then 0 else 1 end is_cum,
from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') update_date
from ods_lms.tb_sys_site s
left join ods_lms.tb_sys_province p on s.province=p.PROVINCEID
left join ods_lms.tb_sys_city c on s.city=c.CITYID
left join ods_lms.tb_sys_cityzone cz on s.cityzone=cz.CITYZONEID
left join ods_lms.tb_sys_org o on s.orgid=o.id
left join ods_lms.tb_sys_org oo on o.pid=oo.id
left join ods_lms.tb_sys_emp e on oo.orgleaderid=e.id
left join (
select siteno,min(loandate) min_loan_date from ods_lms.tb_lm_payment group by siteno
) loan on s.sitecode= loan.siteno
LEFT JOIN ods_bi.tb_site_rpt a ON s.sitecode = a.sitecode
left join ods_bi.tb_area area on a.areaid = area.id
left join ods_bi.tb_bigarea big on area.pid = big.id
left join ods_bi.tb_org_rpt bu on big.pid = bu.id

;
drop table IF EXISTS  tmp.tb_org_rpt

;
INSERT OVERWRITE TABLE ods_bi.tbl_basic_info_rpt select id id,stadate stadate,applycode applycode,applyid applyid,org_contractno org_contractno,applydate applydate,passdate passdate,amount amount,loantime loantime,lastauditresult lastauditresult,creditlimit creditlimit,loandate loandate,withdrawdate withdrawdate,contractno contractno,loanamt loanamt,totalphases totalphases,hkfs hkfs,dkfs dkfs,producttype producttype,producttype2 producttype2,producttype3 producttype3,orgname orgname,orgproduct orgproduct,busi_license busi_license,qybzj qybzj,buymode buymode,sitename sitename,cityname cityname,provincename provincename,custname custname,age age,industry industry,salary salary,pgj pgj,purpose purpose,education education,marry marry,newcustflag newcustflag,update_time update_time,credit_id credit_id,credit_code credit_code from tmp.tbl_basic_info_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='cognosdb' AND table_name='tb_applyinfo_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
drop table if exists tmp.tb_data_count_tbl_return_detail_rpt

;
CREATE TABLE tmp.tb_data_count_tbl_return_detail_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-hadoop/20190723/155287/7916596534625536//data' select apply_code,Vehicle_BuyDate,Apt_ReLoan_Type,data_date,App_CallPoint from ods_sensitive.car_decision_input_dec where data_date >='2019-07-01' and length(Vehicle_BuyDate)=0  and Apt_ReLoan_Type='0' limit 100

;
select 'ods_bi','tbl_basic_info_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tbl_basic_info_rpt

;
SELECT host,port,username,password,database_name,concat('select ','"cognosdb",','"v_bd_tb_applyinfo_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','cognosdb','.','v_bd_tb_applyinfo_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='cognosdb'

;
INSERT overwrite TABLE dw_car.dw_car_cust_loan_apply_info
SELECT cust.docno_md5    AS dw_cust_id
, cust.id           AS cust_id
, cust.custname_md5 AS cust_name
, cust.mobile       AS cust_mobile
, cust.mobile_md5   AS cust_mobile_enc
, cust.docno        AS credentials_no
, cust.docno_md5    AS credentials_no_enc
, T.tn_userid       AS tn_userid
, app.id            AS apply_id
, app.applycode     AS apply_code
, app.applydate     AS apply_date
, app.audittime     AS accept_date
, app.createtime    AS create_record_date
, COALESCE(con.auditloantime,app.LOANTIME) AS apply_phases
, app.loantimetype  AS apply_phase_type
, prod.productno    AS product_no
, prod.productname  AS product_name
, app.amount        AS apply_amount
, app.purpose       AS loan_purpose
, app.loantype      AS loan_type
, app.reloan_flag   AS reloan_flag
, app.reloan_type   AS reloan_type
, app.dkfs          AS loan_mode
, pawn.pawntype     AS pawn_type
, pawn.carsituation AS carsituation
, app.hkfs          AS repay_mode_name
, prod.producttype  AS product_type_code
, dist.datavalue    AS product_type
, CASE app.mutual_Loan_model
WHEN NULL THEN '1'
ELSE app.mutual_Loan_model
END AS mutual_loan_model
, app.single_premiums    AS is_single_premiums
, app.`status`           AS apply_status
, T.tel_verify_flag
, dr.suggest_loan_amt    AS suggest_loan_amt
, dr.apro_max_credit_amt AS suggest_max_credit_amt
, dr.loan_to_vaule       AS suggest_percent
, dr.evaluate_price      AS evaluate_price
, app.pgj                AS apply_pgj
, dr.sum_score           AS sum_score
, dr.risk_grade          AS risk_grade
, T.antifraud_score
, aud.lastaudittime      AS last_audit_time
, aud.denytime           AS deny_time
, aud.denyreason         AS deny_reason
, aud.canceltime         AS cancel_time
, aud.cancelreason       AS cancel_reason
, aud.invalidtime        AS invalid_time
, aud.invalidreason      AS invalid_reason
, aud.lastauditresult    AS audit_result
, aud.lastauditamt       AS last_audit_amt
, aud.lastaduitphases    AS last_aduit_phases
, aud.lastrate           AS last_rate
, aud.lastmanagefees     AS last_manage_fee_rate
, aud.lastfee            AS last_fee_rate
, aud.payratio           AS down_pay_ratio
, aud.margin_rate        AS margin_ratio
, aud.balance_rate       AS balance_ratio
, aud.balance            AS balance
, aud.firstpayed         AS down_pay
, aud.totalrate          AS total_rate
, aud.last_audit_loan_amt AS last_audit_loan_amt
, con.contractno         AS contract_no
, con.status             AS contract_status
, con.amt                AS contract_amt
, con.loan_amt           AS contract_loan_amt
, con.contractdate       AS contract_date
, con.rate               AS rate
, con.feerate            AS fee_rate
, con.fees               AS fees
, con.managefeerate      AS manage_fee_rate
, con.managefees         AS managefees
, con.delayfeerate       AS delay_fee_rate
, con.payfee             AS pay_fee
, con.delayrate          AS delay_rate
, T.is_early_clear
, con.clearrate          AS clear_rate
, T.payment_id
, T.pay_status
, T.pay_date
, T.first_pay_date
, T.first_pay_amt
, T.total_pay_amt
, T.actual_pay_amt
, T.full_scale_time
, T.cur_repay_phase
, T.ext_status
, T.ext_phases
, CASE WHEN app.status='8' AND dist.DATAVALUE = '蚂蚁贷' THEN T.sp_last_pay_date
WHEN app.status='8' THEN T.xd_last_pay_date
ELSE NULL
END settle_date
, app.createbyid         AS create_user_id
, app.direct_empid       AS direct_emp_id
, app.siteno             AS site_no
, ''                     AS pre_salesman
, emp.empno              AS salesman
, CASE WHEN prod.producttype = 'P020' THEN '360'
ELSE loan_org.loan_org_code
END AS loan_org_code
, CASE WHEN prod.producttype = 'P020' THEN '360车贷为机构放款'
ELSE loan_org.coopname
END AS loan_org_name
, CURRENT_TIMESTAMP      AS update_date
FROM ods_lms.tb_lb_applyinfo app
LEFT JOIN ods_lms.tb_lb_custinfo cust ON app.id=cust.applyid
LEFT JOIN ods_lms.tb_sys_product prod ON app.products=prod.id
LEFT JOIN (
SELECT datacode,datavalue FROM ods_lms.tb_sys_dist d WHERE d.datatype ='PT001' AND d.`status` = '1'
) dist ON prod.producttype=dist.datacode
LEFT JOIN ods_lms.tb_lb_applyaudit_last aud ON app.id=aud.applyid
LEFT JOIN ods_lms.tb_lm_contract con ON app.id=con.applyid
LEFT JOIN ods_lms.tb_sys_emp emp ON app.salesman=emp.id
LEFT JOIN (
SELECT apply_code
, suggest_loan_amt
, apro_max_credit_amt
, loan_to_vaule
, evaluate_price
, sum_score
, risk_grade
, last_update_time
, ROW_NUMBER() over (PARTITION BY apply_code ORDER BY last_update_time DESC) rn
FROM ods_lms.tb_lb_decision_result
) dr ON app.applycode=dr.apply_code AND dr.rn=1
LEFT JOIN (
SELECT DISTINCT applyid,pawntype,carsituation FROM ods_lms.tb_lb_pawncarsituation
)pawn ON app.id=pawn.applyid
LEFT JOIN atmp.dw_car_cust_loan_apply_info T ON app.id=T.apply_id
LEFT JOIN (
SELECT a.apply_id
, a.loan_org_code
, b.coopname
FROM ods_lms.tb_order_loan_org a
LEFT JOIN ods_lms.tb_sys_cooperation b
ON a.loan_org_code = b.coopcode
)loan_org ON app.id=loan_org.apply_id

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tbl_return_detail_rpt

;
select 'dw_org','dw_org_employee_info',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dw_org.dw_org_employee_info

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_applyinfo_rpt

;
drop table if exists tmp.tb_data_count_tb_applyinfo_rpt

;
alter table tmp.tb_applyinfo_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_applyinfo_rpt/2019/07/23'

;
DROP TABLE IF EXISTS atmp.tb_lb_evaluatereport

;
CREATE TABLE atmp.tb_lb_evaluatereport AS
SELECT DISTINCT *
FROM (
SELECT app.id AS applyid
, rep.id AS reportid
, rep.modelid
, rep.buyprice
, rep.buymode
, rep.monthpay
, rep.qzbxd
, rep.csx
, rep.dqx
, rep.dszzrx
, rep.bjmp
, rep.otherc
, rep.regdate
, rep.evaluateprice
, rep.evaluatedate
, rep.color
, rep.interior
, rep.surface
, rep.work_state
, rep.drivingdistance
, rep.registdate
, rep.`zone`
, rep.province
, rep.carno_md5
FROM ods_lms.tb_lb_applyinfo app
INNER JOIN ods_lms.tb_lb_evaluatereport rep
ON app.id = rep.applyid
UNION ALL
SELECT app.id AS applyid
, rep.id AS reportid
, rep.modelid
, rep.buyprice
, rep.buymode
, rep.monthpay
, rep.qzbxd
, rep.csx
, rep.dqx
, rep.dszzrx
, rep.bjmp
, rep.otherc
, rep.regdate
, rep.evaluateprice
, rep.evaluatedate
, rep.color
, rep.interior
, rep.surface
, rep.work_state
, rep.drivingdistance
, rep.registdate
, rep.`zone`
, rep.province
, rep.carno_md5
FROM ods_lms.tb_lb_applyinfo app
INNER JOIN ods_lms.tb_lb_evaluatereport rep
ON app.reportid = rep.id
)T

;
select 'ods_bi','tb_applyinfo_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_applyinfo_rpt

;
insert overwrite table dw_car.dw_car_cust_loan_car_info
select
cust.docno_md5 dw_cust_id,
cust.id cust_id,
cust.custname cust_name,
cust.mobile cust_phone,
cust.mobile_md5 cust_phone_md5,
cust.docno cust_idcard,
cust.docno_md5 cust_idcard_md5,
app.id apply_id,
dy.carbrand,
COALESCE(dy.carmodel,car.carmodel) car_model,
COALESCE(dy.carno_md5_nosalt,car.carno_md5_nosalt,rep.carno_md5) carno,
COALESCE(dy.FDJH_md5,car.fdjhm_md5) fdjh,
COALESCE(dy.CJH_md5,car.cjh_md5) cjh,
COALESCE(car.modelid,rep.MODELID) MODELID,
COALESCE(car.buydate,op.car_obtain_date) car_obtain_date,
COALESCE(car.price,rep.buyprice) buyprice,
buy_type,
COALESCE(cust.carbuymode,rep.buymode),
COALESCE(car.yuegong,rep.monthpay)  ,
COALESCE(cast(car.qzbxd as int),rep.qzbxd)  ,
COALESCE(cast(car.csx as int),rep.csx)  ,
COALESCE(cast(car.dqx as int),rep.dqx)  ,
COALESCE(cast(car.dszzrx as int),rep.dszzrx),
COALESCE(cast(car.bjmp as int),rep.bjmp)    ,
COALESCE(cast(car.other as int),rep.otherc),
COALESCE(cast(car.regdate as date),rep.regdate),
m.first_regist_date,
car.ajyh    ,
car.ajye,
car.khjbqk,
COALESCE(rep.evaluateprice,car.pgj) ,
rep.evaluatedate,
car.nakedcar,
car.offerlanding,
COALESCE(car.colour,rep.color),
rep.interior,
rep.surface,
rep.work_state,
COALESCE(car.mileage,rep.drivingdistance),
car.carmsg,
COALESCE(car.transfer_times,m.car_transfer_times),
car.carnoafter carnoafter,
car.car_seats,
car.pre_auth_limit,
rep.registdate AS regist_date,
rep.`zone` AS city_id,
rep.province AS province_id,
car.car_belong,
from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') update_date
FROM
ods_lms.tb_lb_applyinfo app
left join ods_lms.tb_lb_custinfo cust on app.id=cust.APPLYID
LEFT JOIN ods_lms.tb_grade_other_params op ON app.id=op.apply_id
left join ods_lms.tb_lm_dzyw dy on app.id=dy.applyid
left join ods_lms.tb_lb_carmessage car on cust.id=car.custid
LEFT JOIN ods_lms.tb_lb_card_message m ON cust.id=m.CUSTID
left join atmp.tb_lb_evaluatereport rep on app.id=rep.applyid

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='cognosdb' AND table_name='tb_payment_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
DROP TABLE IF EXISTS tmp.tb_payment_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tb_payment_rpt(id int comment "主键ID",paymentid int comment "放款ID",applyid bigint comment "申请ID",amt double comment "",payamt double comment "",payamt1 double comment "放款金额(直接抽取)",actualpayamt double comment "?",confirmdate date comment "提现时间",status int comment "paymentdetai",paytype int comment "paymentdetai'",extstatus int comment "tb_lf_jextapplyinfo ??",exhpaytype int comment "tb_lf_jextapplyinfo",feerate double comment "",fees double comment "",managefeerate double comment "",managefees double comment "",ysxf int comment "?",ysxfamt double comment "?",loandate date comment "",paymentconfirmtime timestamp comment "放款确认时间",loanno varchar(50) comment "",remark varchar(1024) comment "",leftamt double comment "?",qybzj double comment "tb_lm_payment",rate double comment "",paymode int comment "paymentdetail",fkapplydate date comment "paymentdetail",auditstatus int comment "",auditby varchar(50) comment "",auditdate date comment "",confirmman varchar(50) comment "确认人，中文",confirmuser varchar(50) comment "确认用户，登录名",companybankaccount varchar(50) comment "公司账户",companybankname varchar(50) comment "公司账户开户行",exhbegin bigint comment "",risk_doc_upload_date timestamp comment "风控审批资料上传状态时间",paymentdetailid int comment "放款详情ID",withdrawdate date comment "满标时间") comment "VIEW" partitioned by (fq_year string, fq_month string,fq_day string)

;
drop table if exists tmp.tb_data_count_tb_payment_rpt

;
CREATE TABLE tmp.tb_data_count_tb_payment_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
insert overwrite table dw_car.dw_car_cust_black_info
SELECT
blk.docno_md5 dw_cust_id,
blk.custname_md5,
blk.mobile,
blk.mobile_md5,
blk.docno,
blk.docno_md5,
blk.custtype,
blk.status,
blkd.datatype,
blkd.datasource,
coalesce(d.datavalue,'其它') data_source_value,
blkd.risklevel,
blkd.addtime,
blkd.adduser,
blkd.remark,
from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') update_date
FROM
ods_lms.tb_sys_black blk
left join ods_lms.tb_sys_blackdetail blkd on blk.id=blkd.blackid
left join ods_lms.tb_sys_dist d on blkd.datasource=d.datacode and d.DATATYPE='DataSource'

;
alter table tmp.tb_payment_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_payment_rpt/2019/07/23'

;
INSERT OVERWRITE TABLE ods_bi.tb_payment_rpt select id id,paymentid paymentid,applyid applyid,amt amt,payamt payamt,payamt1 payamt1,actualpayamt actualpayamt,confirmdate confirmdate,status status,paytype paytype,extstatus extstatus,exhpaytype exhpaytype,feerate feerate,fees fees,managefeerate managefeerate,managefees managefees,ysxf ysxf,ysxfamt ysxfamt,loandate loandate,paymentconfirmtime paymentconfirmtime,loanno loanno,remark remark,leftamt leftamt,qybzj qybzj,rate rate,paymode paymode,fkapplydate fkapplydate,auditstatus auditstatus,auditby auditby,auditdate auditdate,confirmman confirmman,confirmuser confirmuser,companybankaccount companybankaccount,companybankname companybankname,exhbegin exhbegin,risk_doc_upload_date risk_doc_upload_date,paymentdetailid paymentdetailid,withdrawdate withdrawdate from tmp.tb_payment_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
INSERT OVERWRITE TABLE stg_bi.tb_payment_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,paymentid paymentid,applyid applyid,amt amt,payamt payamt,payamt1 payamt1,actualpayamt actualpayamt,confirmdate confirmdate,status status,paytype paytype,extstatus extstatus,exhpaytype exhpaytype,feerate feerate,fees fees,managefeerate managefeerate,managefees managefees,ysxf ysxf,ysxfamt ysxfamt,loandate loandate,paymentconfirmtime paymentconfirmtime,loanno loanno,remark remark,leftamt leftamt,qybzj qybzj,rate rate,paymode paymode,fkapplydate fkapplydate,auditstatus auditstatus,auditby auditby,auditdate auditdate,confirmman confirmman,confirmuser confirmuser,companybankaccount companybankaccount,companybankname companybankname,exhbegin exhbegin,risk_doc_upload_date risk_doc_upload_date,paymentdetailid paymentdetailid,withdrawdate withdrawdate from tmp.tb_payment_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
select 'ods_bi','tb_payment_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_payment_rpt

;
drop table IF EXISTS  tmp.tb_payment_rpt

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='cognosdb' AND table_name='tb_urge_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
DROP TABLE IF EXISTS tmp.tb_urge_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tb_urge_rpt(id int comment "",paymentid int comment "",linkman varchar(50) comment "",urgemode varchar(50) comment "",content string comment "",spendtime varchar(50) comment "",urgedate timestamp comment "",urgeman varchar(50) comment "",status int comment "?? 1",createby varchar(50) comment "",createtime timestamp comment "",promisepay int comment "",promisepaydate timestamp comment "",urgephases varchar(50) comment "",situation int comment "",custstatus int comment "",instatus int comment "在库情况1在库 2不在库 3已核销坏账") comment "VIEW" partitioned by (fq_year string, fq_month string,fq_day string)

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-limaoxing/20190723/155288/7917206802748944//data' SELECT * FROM atmp.ck_loan_app_report_data_pre WHERE event_type ="event_click_psdlogin"

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_urge_rpt

;
drop table if exists tmp.tb_data_count_tb_urge_rpt

;
select 'dw_car','dw_car_cust_loan_withdraw_info',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dw_car.dw_car_cust_loan_withdraw_info

;
select 'ods_bi','tb_urge_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_urge_rpt

;
drop table IF EXISTS  tmp.tb_urge_rpt

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='warehouse' AND table_name='tbl_currentprog_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
SELECT host,port,username,password,database_name,concat('select ','"warehouse",','"" table_name',', count(1) data_cnt, ','"" year,','"" month,','"" day,','now() update_time ','from ','warehouse','.','') FROM tb_get_conn_info where host='172.30.17.245' and database_name='warehouse'

;
SELECT host,port,username,password,database_name,concat('select ','"warehouse",','"tbl_currentprog_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','warehouse','.','tbl_currentprog_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='warehouse'

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tbl_currentprog_rpt

;
drop table if exists tmp.tb_data_count_tbl_currentprog_rpt

;
select 'ods_bi','tbl_currentprog_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tbl_currentprog_rpt

;
SELECT con.contractno, co.co_corp_code from tb_lm_contract con left join tb_lm_co_corp_contract co on con.ID = co.contract_id

;
select 'dw_car','dw_car_repay_status_risk',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dw_car.dw_car_repay_status_risk

;
INSERT OVERWRITE TABLE ods_bi.tbl_return_detail_rpt select id id,stadate stadate,applycode applycode,applyid applyid,contractno contractno,beforephases beforephases,hkfs hkfs,returnstatus returnstatus,totalphases totalphases,loanamt loanamt,payphases payphases,shouldpaydate shouldpaydate,paydate paydate,totalshould totalshould,shouldcapital shouldcapital,shouldint shouldint,shouldmanage shouldmanage,shoulddelayint shoulddelayint,shouldotherfee shouldotherfee,totalact totalact,actcapital actcapital,actint actint,actmanage actmanage,actdelayint actdelayint,actotherfee actotherfee,update_time update_time,credit_id credit_id,credit_code credit_code from tmp.tbl_return_detail_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
insert overwrite table dm_mdcs.dw_car_mdcs_orglevel_info
SELECT distinct site_code,site_name,
site_prov_area_id,site_prov_area,
site_bigarea_id,site_bigarea,
site_bu_id,
case site_bu_name when 'gd' then '车金融'
when 'db' then '袋吧' else site_bu_name end site_bu_name,
from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') update_date
FROM dw_org.dw_org_site_info  where site_bigarea like '%区%'

;
DROP TABLE IF EXISTS dm_mdcs.dw_car_mdcs_repayflow_info_tmp

;
CREATE TABLE dm_mdcs.dw_car_mdcs_repayflow_info_tmp AS
SELECT rep_min.apply_id
, rep_min.return_detail_id
, rep_min.pay_phase
, rep_min.actrepay_interest
, rep_min.repay_date
, rep_min.is_overdue
, rep_min.shrepay_date
, rep_min.shrepay_capital
, rep_min.shrepay_interest
, rep_min.shrepay_manage
, rep_min.shrepay_tcf
, rep_min.shrepay_gpsf
, rep_min.shrepay_scf
, rep_min.shrepay_car_cost
, rep_min.actrepay_capital
, rep_min.repay_status
, rep_min.actrepay_manage
, rep_min.loan_type
, rep_min.apply_status
, rep_min.ext_status
, rep_min.first_re_int_phase
, rep_min.phase_repay_num
, FIRST_VALUE(rep_min.return_detail_id) OVER(PARTITION BY rep_min.apply_id,rep_min.pay_phase ORDER BY rep_min.repay_date DESC) AS  phase_last_repay
, FIRST_VALUE(rep_min.repay_status) OVER(PARTITION BY rep_min.apply_id,rep_min.pay_phase ORDER BY rep_min.repay_date DESC) AS  phase_repay_status
, rep_min.phase_is_overdue
, rep_min.apply_phases
, dunjiao.shrepay_manage AS shrepay_manage_ling
, dunjiao.per_phase_manage
, CASE WHEN dunjiao.apply_id IS NOT NULL THEN 'dunjiao' ELSE 'feidunjiao' END AS product_type
FROM(
SELECT r.apply_id
, r.return_detail_id
, r.pay_phase
, r.actrepay_interest
, r.repay_date
, r.is_overdue
, r.shrepay_date
, r.shrepay_capital
, r.shrepay_interest
, r.shrepay_manage
, r.shrepay_tcf
, r.shrepay_gpsf
, r.shrepay_scf
, r.shrepay_car_cost
, r.actrepay_capital
, r.repay_status
, CASE WHEN pay_phase > 0
AND r.shrepay_capital+r.shrepay_interest+r.shrepay_manage+r.shrepay_tcf+r.shrepay_gpsf+r.shrepay_scf+r.shrepay_car_cost -(r.totalredcapital+r.totalredint+r.totalredmanage+r.totalredextfees+r.totalredcomint+r.totalredcarcost) = 0
THEN 1
WHEN pay_phase = 0
THEN 2
ELSE 0
END AS special_settle_flag
, r.actrepay_manage
, a.loan_type
, a.apply_status
, a.ext_status
, a.apply_phases
, MIN(CASE WHEN r.actrepay_interest>0 THEN r.pay_phase ELSE NULL END) over (PARTITION BY r.apply_id ORDER BY r.repay_date) AS first_re_int_phase
, ROW_NUMBER() over (PARTITION BY r.apply_id,r.pay_phase ORDER BY r.repay_date) AS  phase_repay_num
, MAX(r.is_overdue) OVER(PARTITION BY r.apply_id,r.pay_phase) AS phase_is_overdue
FROM dw_car.dw_car_cust_loan_repay_info r
LEFT JOIN dw_car.dw_car_cust_loan_apply_info a
ON r.apply_id=a.apply_id
WHERE r.return_detail_id IS NOT NULL
)rep_min
LEFT JOIN (
SELECT re.apply_id
, app.apply_phases
, MAX(re.shrepay_manage) AS shrepay_manage
, MAX(re.shrepay_manage)/MAX(app.apply_phases) AS per_phase_manage
FROM dw_car.dw_car_cust_loan_repay_info re
LEFT JOIN dw_car.dw_car_cust_loan_apply_info app
ON re.apply_id=app.apply_id
WHERE COALESCE(app.full_scale_time,app.pay_date) >= TO_DATE('2018-07-01')
AND re.pay_phase = 0
AND re.shrepay_manage > 0
AND re.return_detail_id IS NOT NULL
GROUP BY re.apply_id,app.apply_phases
)dunjiao
ON rep_min.apply_id = dunjiao.apply_id
WHERE rep_min.special_settle_flag IN(0,2)

;
INSERT OVERWRITE TABLE stg_bi.tbl_return_detail_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,stadate stadate,applycode applycode,applyid applyid,contractno contractno,beforephases beforephases,hkfs hkfs,returnstatus returnstatus,totalphases totalphases,loanamt loanamt,payphases payphases,shouldpaydate shouldpaydate,paydate paydate,totalshould totalshould,shouldcapital shouldcapital,shouldint shouldint,shouldmanage shouldmanage,shoulddelayint shoulddelayint,shouldotherfee shouldotherfee,totalact totalact,actcapital actcapital,actint actint,actmanage actmanage,actdelayint actdelayint,actotherfee actotherfee,update_time update_time,credit_id credit_id,credit_code credit_code from tmp.tbl_return_detail_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
drop table IF EXISTS  tmp.tbl_return_detail_rpt

;
select 'dm_mdcs','dw_car_mdcs_payflow_info',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dm_mdcs.dw_car_mdcs_payflow_info

;
INSERT overwrite TABLE dm_mdcs.dw_car_mdcs_repayflow_info
SELECT app.apply_id
, r.return_detail_id
, profit.is_single_premiums
, app.salesman
, emp.emp_group_id
, site.site_code
, site.site_prov_area_id
, site.site_bigarea_id
, site.site_BU_id
, app.product_type
, app.apply_phases
, emp_s.special_site_flag
, CASE app.repay_mode_name
WHEN '1' THEN '先息后本'
WHEN '2' THEN '等本等息'
WHEN '3' THEN '一次性还款'
WHEN '4' THEN '等额本息'
WHEN '5' THEN '利随本清'
END repay_mode_name
, app.loan_type
, app.apply_status
, app.apply_date
, app.accept_date
, app.last_audit_time
, app.audit_result
, app.contract_date
, app.contract_status
, profit.repay_status
, COALESCE(repay.overdue_status,0) overdue_status
, profit.shrepay_date
, profit.shrepay_capital
, profit.last_repay_date
, profit.repay_date
, profit.actrepay_capital
, profit.pay_phase
, profit.is_first_phase_pro
, repay.is_first_phase_ovd
, COALESCE(profit.remain_repay_amt,0)
, COALESCE(profit.new_pay_amt,0)
, COALESCE(profit.remain_profit_amt,0)
, COALESCE(repay.first_overdue_amt,0)
, COALESCE(repay.first_overdue_days,0)
, COALESCE(repay.overdue_amt,0)
, COALESCE(repay.overdue_days,0)
, from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss')
FROM dw_car.dw_car_cust_loan_apply_info app
LEFT JOIN dw_org.dw_org_employee_info emp_s ON app.direct_emp_id=emp_s.emp_id
LEFT JOIN dw_org.dw_org_employee_info emp ON app.salesman=emp.emp_no
LEFT JOIN dw_org.dw_org_site_info site ON app.site_no=site.site_code
LEFT JOIN dw_car.dw_car_cust_loan_repay_info r ON app.apply_id = r.apply_id
LEFT JOIN (
SELECT *
FROM (
SELECT apply_id
, 1 AS is_single_premiums
, shrepay_date
, repay_date
, shrepay_capital
, actrepay_capital
, pay_phase
, return_detail_id
, repay_status
, CASE WHEN pay_phase = first_re_int_phase THEN '1' ELSE '0' END AS is_first_phase_pro
, CASE WHEN repay_status != 2 THEN shrepay_capital ELSE 0 END AS remain_repay_amt
, CASE WHEN loan_type=1
AND first_re_int_phase = pay_phase
AND return_detail_id = phase_last_repay
AND phase_repay_status = 2
AND pay_phase <> 0
AND pay_phase-apply_phases <= 0
THEN actrepay_interest+actrepay_manage + per_phase_manage
WHEN loan_type=1
AND pay_phase = 0
AND first_re_int_phase = pay_phase
THEN actrepay_interest
WHEN loan_type=1
AND first_re_int_phase = pay_phase
THEN actrepay_interest+actrepay_manage
ELSE 0
END AS new_pay_amt
, CASE WHEN (loan_type!=1 OR first_re_int_phase <> pay_phase OR first_re_int_phase IS NULL)
AND phase_repay_status = 2
AND return_detail_id = phase_last_repay
AND pay_phase <> 0
AND pay_phase-apply_phases <= 0
THEN actrepay_interest+actrepay_manage + per_phase_manage
WHEN (loan_type!=1 OR first_re_int_phase <> pay_phase OR first_re_int_phase IS NULL)
AND pay_phase = 0
THEN actrepay_interest
WHEN (loan_type!=1 OR first_re_int_phase <> pay_phase OR first_re_int_phase IS NULL)
THEN actrepay_interest+actrepay_manage
ELSE 0
END AS remain_profit_amt
, CASE WHEN repay_status = '2' THEN LAG(repay_date,1) over(PARTITION BY apply_id ORDER BY repay_date) ELSE shrepay_date END  AS last_repay_date
FROM dm_mdcs.dw_car_mdcs_repayflow_info_tmp
WHERE product_type = 'dunjiao'
UNION ALL
SELECT apply_id
, 0 AS is_single_premiums
, shrepay_date
, repay_date
, shrepay_capital
, actrepay_capital
, pay_phase
, return_detail_id
, repay_status
, CASE WHEN pay_phase = first_re_int_phase THEN '1' ELSE '0' END AS is_first_phase_pro
, CASE WHEN repay_status != 2 THEN shrepay_capital ELSE 0 END AS remain_repay_amt
, CASE WHEN loan_type=1
AND first_re_int_phase = pay_phase
THEN actrepay_interest+actrepay_manage
ELSE 0
END AS new_pay_amt
, CASE WHEN (loan_type!=1 OR first_re_int_phase <> pay_phase OR first_re_int_phase IS NULL)
THEN actrepay_interest+actrepay_manage
ELSE 0
END AS remain_profit_amt
, CASE WHEN repay_status = '2' THEN LAG(repay_date,1) over(PARTITION BY apply_id ORDER BY repay_date) ELSE shrepay_date END  AS last_repay_date
FROM dm_mdcs.dw_car_mdcs_repayflow_info_tmp
WHERE product_type = 'feidunjiao'
)A
) profit
ON r.return_detail_id=profit.return_detail_id
LEFT JOIN (
SELECT rep_s.apply_id
, rep_s.return_detail_id
, rep_s.pay_phase
, rep_dd.o_status overdue_status
, rep_min.ovd_num num
, MAX(CASE WHEN phase_num=1 THEN '1' ELSE '0' END) is_first_phase_ovd
, MAX(CASE WHEN phase_num=1 THEN rep_s.shrepay_capital ELSE 0 END) first_overdue_amt
, MAX(CASE WHEN phase_num=1 THEN DATEDIFF(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),TO_DATE(rep_s.shrepay_date)) ELSE 0 END) first_overdue_days
, MAX(rep_s.shrepay_capital) overdue_amt
, MAX(DATEDIFF(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),TO_DATE(rep_s.shrepay_date))) overdue_days
FROM dw_car.dw_car_cust_loan_repay_info rep_s
LEFT JOIN (
SELECT r.apply_id
, r.return_detail_id
, pay_phase
, ROW_NUMBER() over (PARTITION BY r.apply_id ORDER BY apply_id,pay_phase) phase_num
, ROW_NUMBER() over (PARTITION BY r.apply_id,r.pay_phase ORDER BY r.return_detail_id) ovd_num
FROM dw_car.dw_car_cust_loan_repay_info r
WHERE r.shrepay_capital>0 OR r.shrepay_interest>0
) rep_min
ON rep_s.apply_id=rep_min.apply_id AND rep_s.pay_phase=rep_min.pay_phase AND rep_s.return_detail_id=rep_min.return_detail_id
LEFT JOIN dw_car.dw_car_cust_loan_apply_info app_s ON rep_s.apply_id=app_s.apply_id
LEFT JOIN (
SELECT DISTINCT apply_id
, 1 o_status
FROM dw_car.dw_car_cust_loan_repay_info rep_d
WHERE rep_d.repay_status!=-1
HAVING SUM(rep_d.shrepay_capital+rep_d.shrepay_interest+rep_d.shrepay_manage+rep_d.shrepay_gpsf+rep_d.shrepay_tcf+rep_d.shrepay_scf-rep_d.actrepay_capital-rep_d.actrepay_interest-rep_d.actrepay_manage-rep_d.actrepay_gpsf-rep_d.actrepay_tcf-rep_d.actrepay_scf) >0
) rep_dd
ON rep_s.apply_id = rep_dd.apply_id
WHERE (rep_s.repay_status != 2)
GROUP BY rep_s.apply_id,rep_s.pay_phase, rep_dd.o_status, rep_min.ovd_num,rep_s.return_detail_id
) repay
ON r.return_detail_id=repay.return_detail_id
WHERE ((emp_s.special_site_flag='1' AND site.site_BU_id IN('1985','1488'))
OR (emp_s.special_site_flag='2' and site.site_BU_id IN('1985','1488'))
OR (emp_s.special_site_flag NOT IN ('1','2','3') OR (emp_s.special_site_flag IS NULL)))
AND (app.product_no!='000001' OR app.product_no IS NULL)
AND (emp_s.emp_name <> '江宗桂'OR emp_s.emp_name IS NULL)
AND app.product_type NOT IN('蚂蚁贷','360车贷')

;
select * from ods_lms.tb_lb_pawncarsituation_history

;
INSERT OVERWRITE TABLE dm_mdcs.dm_mdcs_payment_hours
SELECT ROW_NUMBER()OVER() id,payment_hours.*
FROM (
SELECT T1.bsns_unit_code
, T2.site_bu_name       AS bsns_unit_name
, T1.bigarea_code
, T2.site_bigarea       AS bigarea_name
, T1.prov_area_code
, T2.site_prov_area     AS prov_area_name
, T1.site_code
, T2.site_name
, T1.data_month
, 'Site'                AS org_level
, T1.full_loan_new_amt
, T1.full_loan_new_count
, T1.pending_loan_new_amt
, CURRENT_TIMESTAMP     AS update_time
FROM (
SELECT COALESCE(A.bsns_unit_code,B.bsns_unit_code) AS bsns_unit_code
, COALESCE(A.bigarea_code,B.bigarea_code)     AS bigarea_code
, COALESCE(A.prov_area_code,B.prov_area_code) AS prov_area_code
, COALESCE(A.site_code,B.site_code)           AS site_code
, COALESCE(A.data_month,B.data_month)         AS data_month
, NVL(A.full_loan_new_amt,0)                  AS full_loan_new_amt
, NVL(A.full_loan_new_count,0)                AS full_loan_new_count
, NVL(B.pending_loan_new_amt,0)               AS pending_loan_new_amt
FROM (
SELECT bsns_unit_code
, bigarea_code
, prov_area_code
, site_code
, SUBSTR(full_scale_date,1,7) AS data_month
, SUM(re_amt)                 AS full_loan_new_amt
, COUNT(DISTINCT apply_id)    AS full_loan_new_count
FROM dm_mdcs.dw_car_mdcs_payflow_info
WHERE full_scale_date IS NOT NULL
AND full_scale_date >= TRUNC(CURRENT_DATE,'MM')
AND loan_type = '1'
AND (special_site_flag NOT IN('1','2','3') OR special_site_flag IS NULL)
GROUP BY bsns_unit_code
, bigarea_code
, prov_area_code
, site_code
, SUBSTR(full_scale_date,1,7)
)A
FULL JOIN(
SELECT bsns_unit_code
, bigarea_code
, prov_area_code
, site_code
, SUBSTR(contract_date,1,7)   AS data_month
, SUM(re_amt)                 AS pending_loan_new_amt
FROM dm_mdcs.dw_car_mdcs_payflow_info
WHERE contract_date IS NOT NULL
AND contract_date >= TRUNC(CURRENT_DATE,'MM')
AND apply_status ='5'
AND full_scale_date IS NULL
AND loan_type = '1'
AND (special_site_flag NOT IN('1','2','3') OR special_site_flag IS NULL)
GROUP BY bsns_unit_code
, bigarea_code
, prov_area_code
, site_code
, SUBSTR(contract_date,1,7)
)B
ON A.data_month = B.data_month
AND A.bsns_unit_code = B.bsns_unit_code
AND A.bigarea_code = B.bigarea_code
AND A.prov_area_code = B.prov_area_code
AND A.site_code = B.site_code
)T1
LEFT JOIN (
SELECT DISTINCT site_prov_area_id
, site_prov_area
, site_bigarea_id
, site_bigarea
, site_bu_id
, site_bu_name
, site_name
, site_code
FROM dw_org.dw_org_site_info
)T2
ON T1.bsns_unit_code = T2.site_bu_id
AND T1.bigarea_code = T2.site_bigarea_id
AND T1.prov_area_code = T2.site_prov_area_id
AND T1.site_code = T2.site_code
UNION ALL
SELECT T1.bsns_unit_code
, T2.site_bu_name       AS bsns_unit_name
, T1.bigarea_code
, T2.site_bigarea       AS bigarea_name
, T1.prov_area_code
, T2.site_prov_area     AS prov_area_name
, NULL                  AS site_code
, NULL                  AS site_name
, T1.data_month
, 'ProvinceArea'        AS org_level
, T1.full_loan_new_amt
, T1.full_loan_new_count
, T1.pending_loan_new_amt
, CURRENT_TIMESTAMP     AS update_time
FROM (
SELECT COALESCE(A.bsns_unit_code,B.bsns_unit_code) AS bsns_unit_code
, COALESCE(A.bigarea_code,B.bigarea_code)     AS bigarea_code
, COALESCE(A.prov_area_code,B.prov_area_code) AS prov_area_code
, COALESCE(A.data_month,B.data_month)         AS data_month
, NVL(A.full_loan_new_amt,0)                  AS full_loan_new_amt
, NVL(A.full_loan_new_count,0)                AS full_loan_new_count
, NVL(B.pending_loan_new_amt,0)               AS pending_loan_new_amt
FROM (
SELECT bsns_unit_code
, bigarea_code
, prov_area_code
, SUBSTR(full_scale_date,1,7) AS data_month
, SUM(re_amt)                 AS full_loan_new_amt
, COUNT(DISTINCT apply_id)    AS full_loan_new_count
FROM dm_mdcs.dw_car_mdcs_payflow_info
WHERE full_scale_date IS NOT NULL
AND full_scale_date >= TRUNC(CURRENT_DATE,'MM')
AND loan_type = '1'
AND (special_site_flag NOT IN('1','2','3') OR special_site_flag IS NULL)
GROUP BY bsns_unit_code
, bigarea_code
, prov_area_code
, SUBSTR(full_scale_date,1,7)
)A
FULL JOIN(
SELECT bsns_unit_code
, bigarea_code
, prov_area_code
, SUBSTR(contract_date,1,7)   AS data_month
, SUM(re_amt)                 AS pending_loan_new_amt
FROM dm_mdcs.dw_car_mdcs_payflow_info
WHERE contract_date IS NOT NULL
AND contract_date >= TRUNC(CURRENT_DATE,'MM')
AND apply_status ='5'
AND full_scale_date IS NULL
AND loan_type = '1'
AND (special_site_flag NOT IN('1','2','3') OR special_site_flag IS NULL)
GROUP BY bsns_unit_code
, bigarea_code
, prov_area_code
, SUBSTR(contract_date,1,7)
)B
ON A.data_month = B.data_month
AND A.bsns_unit_code = B.bsns_unit_code
AND A.bigarea_code = B.bigarea_code
AND A.prov_area_code = B.prov_area_code
)T1
LEFT JOIN (
SELECT DISTINCT site_prov_area_id
, site_prov_area
, site_bigarea_id
, site_bigarea
, site_bu_id
, site_bu_name
FROM dw_org.dw_org_site_info
)T2
ON T1.bsns_unit_code = T2.site_bu_id
AND T1.bigarea_code = T2.site_bigarea_id
AND T1.prov_area_code = T2.site_prov_area_id
)payment_hours

;
select 'dm_mdcs','dm_mdcs_payment_hours',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dm_mdcs.dm_mdcs_payment_hours

;
SELECT host,port,username,password,database_name,concat('select ','"mdcs",','"" table_name',', count(1) data_cnt, ','"" year,','"" month,','"" day,','now() update_time ','from ','mdcs','.','') FROM tb_get_conn_info where host='192.168.52.248' and database_name='mdcs'

;
INSERT OVERWRITE TABLE ods_bi.tb_currentprog_rpt select id id,contractno contractno,custname custname,sitecode sitecode,sitename sitename,loancode loancode,loantype loantype,dkfs dkfs,hkfs hkfs,carno_fcdz carno_fcdz,assprice assprice,bank bank,bankno bankno,gender gender,docno docno,phoneno phoneno,loanamt loanamt,shouldcapital shouldcapital,qybzj qybzj,totalphases totalphases,loandate loandate,returnday returnday,firstreturndate firstreturndate,lastreturndate lastreturndate,compositefees compositefees,returntotal returntotal,currentamt currentamt,currentactint currentactint,phase0 phase0,phase1 phase1,phase2 phase2,phase3 phase3,phase4 phase4,phase5 phase5,phase6 phase6,phase7 phase7,phase8 phase8,phase9 phase9,phase10 phase10,phase11 phase11,phase12 phase12,phase12l phase12l,returnphases returnphases,noreturnphases noreturnphases,returnamt returnamt,noreturnamt noreturnamt,returnint returnint,noreturnint noreturnint,returncapital returncapital,noreturncapital noreturncapital,currentduedays currentduedays,totalduedays totalduedays,returnstatus returnstatus,remark remark,stadate stadate,settledate settledate,isdirect isdirect,sources sources,orgleader orgleader,salesman salesman,gpsamt gpsamt,baddebt baddebt,directseller directseller,applyid applyid,waitloanamt waitloanamt,auditamt auditamt,yearmonth yearmonth,unifiedcustname unifiedcustname,unifiedcontractno unifiedcontractno,orgid orgid,usertype usertype,productid productid,productname productname,coopname coopname,orgname orgname,microstoreflag microstoreflag,contractbody contractbody,loanchannel loanchannel,returncoopname returncoopname,applyaudittime applyaudittime,counselingfees counselingfees,returncarcostfees returncarcostfees,noreturncarcostfees noreturncarcostfees,single_premiums single_premiums,actfxbzf actfxbzf,withdrawdate withdrawdate,cursitename cursitename,noreturnmanage noreturnmanage,returnmanage returnmanage,returnmanage0 returnmanage0,fileno fileno,directorgid directorgid,directorgname directorgname,rerate rerate,corpname corpname,leavestatus leavestatus,empno empno,agentid agentid,agentcode agentcode,agentname agentname,inviterduties inviterduties,update_time update_time,actdbfwf actdbfwf,departmentid departmentid,departmentname departmentname,dklx dklx,cyssitename cyssitename from tmp.tb_currentprog_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
USE `ods_credit_loan`

;
select contractno ,rate ,feerate ,managefeerate ,delayfeerate ,payfee ,delayrate ,clearrate from ods_lms.tb_lm_contract

;
INSERT OVERWRITE TABLE stg_bi.tb_currentprog_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,contractno contractno,custname custname,sitecode sitecode,sitename sitename,loancode loancode,loantype loantype,dkfs dkfs,hkfs hkfs,carno_fcdz carno_fcdz,assprice assprice,bank bank,bankno bankno,gender gender,docno docno,phoneno phoneno,loanamt loanamt,shouldcapital shouldcapital,qybzj qybzj,totalphases totalphases,loandate loandate,returnday returnday,firstreturndate firstreturndate,lastreturndate lastreturndate,compositefees compositefees,returntotal returntotal,currentamt currentamt,currentactint currentactint,phase0 phase0,phase1 phase1,phase2 phase2,phase3 phase3,phase4 phase4,phase5 phase5,phase6 phase6,phase7 phase7,phase8 phase8,phase9 phase9,phase10 phase10,phase11 phase11,phase12 phase12,phase12l phase12l,returnphases returnphases,noreturnphases noreturnphases,returnamt returnamt,noreturnamt noreturnamt,returnint returnint,noreturnint noreturnint,returncapital returncapital,noreturncapital noreturncapital,currentduedays currentduedays,totalduedays totalduedays,returnstatus returnstatus,remark remark,stadate stadate,settledate settledate,isdirect isdirect,sources sources,orgleader orgleader,salesman salesman,gpsamt gpsamt,baddebt baddebt,directseller directseller,applyid applyid,waitloanamt waitloanamt,auditamt auditamt,yearmonth yearmonth,unifiedcustname unifiedcustname,unifiedcontractno unifiedcontractno,orgid orgid,usertype usertype,productid productid,productname productname,coopname coopname,orgname orgname,microstoreflag microstoreflag,contractbody contractbody,loanchannel loanchannel,returncoopname returncoopname,applyaudittime applyaudittime,counselingfees counselingfees,returncarcostfees returncarcostfees,noreturncarcostfees noreturncarcostfees,single_premiums single_premiums,actfxbzf actfxbzf,withdrawdate withdrawdate,cursitename cursitename,noreturnmanage noreturnmanage,returnmanage returnmanage,returnmanage0 returnmanage0,fileno fileno,directorgid directorgid,directorgname directorgname,rerate rerate,corpname corpname,leavestatus leavestatus,empno empno,agentid agentid,agentcode agentcode,agentname agentname,inviterduties inviterduties,update_time update_time,actdbfwf actdbfwf,departmentid departmentid,departmentname departmentname,dklx dklx,cyssitename cyssitename from tmp.tb_currentprog_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
select contractno,returnstatus from ods_lms.tb_lm_contract

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='cognosdb' AND table_name='tb_applyflow_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
drop table if exists tmp.tb_data_count_tb_applyflow_rpt

;
CREATE TABLE tmp.tb_data_count_tb_applyflow_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
SELECT host,port,username,password,database_name,concat('select ','"cognosdb",','"v_bd_tb_applyflow_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','cognosdb','.','v_bd_tb_applyflow_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='cognosdb'

;
INSERT OVERWRITE TABLE ods_bi.tb_applyflow_rpt select id id,applyid applyid,signcode signcode,flowsign flowsign,flowname flowname,actiondate actiondate,actionby actionby,result result,status status,siteno siteno,sitename sitename,contractno contractno from tmp.tb_applyflow_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
select 'ods_bi','tb_applyflow_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_applyflow_rpt

;
select a.*,a.clear_mode as clear_mode1,c.contractno,b.applyid from ods_lms.tb_lf_specialclear as a left join ods_lms.tb_lm_payment as b on a.loanid=b.id left join ods_lms.tb_lm_contract as c on b.applyid=c.applyid

;
drop table IF EXISTS  tmp.tb_applyflow_rpt

;
DROP TABLE IF EXISTS tmp.tb_fee_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tb_fee_rpt(id int comment "",applyid int comment "",sfitem varchar(100) comment "",sfamt double comment "",sftype int comment "1",paymentdetailid int comment "") comment "VIEW" partitioned by (fq_year string, fq_month string,fq_day string)

;
SELECT host,port,username,password,database_name,concat('select ','"cognosdb",','"v_bd_tb_fee_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','cognosdb','.','v_bd_tb_fee_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='cognosdb'

;
INSERT OVERWRITE TABLE ods_bi.tb_fee_rpt select id id,applyid applyid,sfitem sfitem,sfamt sfamt,sftype sftype,paymentdetailid paymentdetailid from tmp.tb_fee_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
drop table if exists tmp.tb_data_count_tb_fee_rpt

;
INSERT OVERWRITE TABLE stg_bi.tb_fee_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,applyid applyid,sfitem sfitem,sfamt sfamt,sftype sftype,paymentdetailid paymentdetailid from tmp.tb_fee_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
load data local inpath '/data/data_parser/decision_json_parse/data_file/mysqljson/credit_json_2019-07-22.txt' overwrite into table provider_api_db.tio_decision_credit_json PARTITION (data_date='2019-07-22')

;
load data local inpath '/data/data_parser/decision_json_parse/data_file/mysqljson/credit_json_2019-07-23.txt' overwrite into table provider_api_db.tio_decision_credit_json PARTITION (data_date='2019-07-23')

;
select db_table,del_table_par FROM app_db.partition_table_info_del

;
DROP TABLE if exists app_db.tn_smart_next_repay_detail

;
select seq,type,name,value,statdate from dm_cert.emergency_center_report_day where statdate>= date_sub(current_date,1) order by statdate,cast(seq as int)  limit 1000

;
CREATE TABLE app_db.tn_smart_next_repay_detail as
SELECT borrow_id, sum(repay_amt) repay_amt, sum(next_reapy_amt) next_reapy_amt,
max(last_repaytime) last_repaydate, max(next_repaytime) next_repaydate
FROM(
select
borrow_id, tender_id,
sum(repay_account) repay_amt,
from_unixtime(cast(max(repay_time) as int), 'yyyy-MM-dd') last_repaytime,
from_unixtime(cast(min(repay_time) as int), 'yyyy-MM-dd') next_repaytime,
max(if(next_flag=1, repay_account, 0)) next_reapy_amt
from
(SELECT id, wait_account FROM ods_touna.dw_borrow_tender WHERE tender_type=3 and wait_account>0) tender
left join
(
SELECT borrow_id, tender_id, repay_time, repay_account,
ROW_NUMBER() over(partition by borrow_id, tender_id order BY repay_time) as next_flag
from ods_touna.dw_borrow_collection WHERE status=0
) coll
on tender.id=coll.tender_id
group by borrow_id, tender_id
) tmp
group by borrow_id

;
ALTER TABLE stg_bi.tb_area drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_bi.tb_bigarea drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
load data local inpath '/data/data_parser/decision_json_parse/car_decison_log/tio_decision_log_2019-07-23.txt' overwrite into table provider_api_db.tio_car_decision_log PARTITION (data_date='2019-07-23')

;
ALTER TABLE stg_bi.tb_emp_rpt drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_bi.tb_loancount_rpt drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_bi.tb_org_rpt drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='lms' AND table_name='tb_contact' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='riskmgmt' AND table_name='credit_param' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
ALTER TABLE stg_bi.tb_site_rpt drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_bi.tio_finance_profit_import drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_collappdev.tb_app_versions drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_collappdev.tb_callsys_callerstatus drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_collappdev.tb_callsys_contactor drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_collappdev.tb_callsys_loginout drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_callsys_priv drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_collappdev.tb_callsys_record drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=14)

;
ALTER TABLE stg_collappdev.tb_car_bondlog drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_car_sysaddprice drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_collappdev.tb_case_applicant drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=14)

;
ALTER TABLE stg_collappdev.tb_case_info drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_col_appendix drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_collappdev.tb_col_auth drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=14)

;
ALTER TABLE stg_collappdev.tb_col_baddebts_month drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_collappdev.tb_col_baddebts_month drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_col_coller drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_col_collercity drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_collappdev.tb_col_collersite drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_collappdev.tb_col_collgps drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_collappdev.tb_col_deferredrate drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_collappdev.tb_col_deferredrate drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=06)

;
ALTER TABLE stg_collappdev.tb_col_deferredrate drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_collappdev.tb_col_diffresult drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_col_importoffine drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_collappdev.tb_col_msgnum drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_collappdev.tb_col_notes drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_collappdev.tb_col_notes drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_col_orderdetail drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_col_ordermoney_day drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_collappdev.tb_col_ordermoney_day drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=06)

;
DROP TABLE IF EXISTS tmp.tb_lb_applyaudit_last

;
CREATE TABLE IF NOT EXISTS tmp.tb_lb_applyaudit_last(applyid int comment "贷款申请记录ID",lastauditby varchar(50) comment "最后审批人",lastauditby_md5 varchar(200) comment "脱敏最后审批人",lastauditbyname varchar(200) comment "最后审批人名称",lastauditbyname_md5 varchar(200) comment "脱敏最后审批人名称",lastaudittime timestamp comment "最后审批时间",lastauditamt decimal(15,2) comment "最后审批金额",lastaduitphases int comment "最后审批期数",lastrate decimal(22,6) comment "",lastmanagefees decimal(22,6) comment "",lastfee decimal(22,6) comment "",lastauditresult int comment "最后审批结果1：通过，2：拒绝，4：取消，",denyby varchar(50) comment "拒绝人",denyby_md5 varchar(200) comment "拒绝人",denybyname varchar(200) comment "拒绝人姓名",denybyname_md5 varchar(200) comment "拒绝人姓名",denytime timestamp comment "拒绝时间",denyreason varchar(1024) comment "拒绝原因",cancelby varchar(50) comment "取消人",cancelby_md5 varchar(200) comment "脱敏取消人",cancelbyname varchar(200) comment "取消人姓名",cancelbyname_md5 varchar(200) comment "脱敏取消人姓名",canceltime timestamp comment "取消时间",cancelreason varchar(200) comment "取消原因",invalidby varchar(50) comment "作废人",invalidby_md5 varchar(200) comment "脱敏作废人",invalidbyname varchar(200) comment "作废人姓名",invalidbyname_md5 varchar(200) comment "脱敏作废人姓名",invalidtime timestamp comment "作废时间",invalidreason varchar(1024) comment "作废原因",lastaduitphasest varchar(3) comment "最后审批期限单位,1月2日,默认为月",payratio decimal(15,4) comment "首付比例",margin_rate decimal(15,4) comment "保证金比例",balance_rate decimal(15,4) comment "尾款比例",balance decimal(15,4) comment "尾款",firstpayed decimal(15,2) comment "首付金额",totalrate decimal(22,6) comment "",last_audit_loan_amt decimal(15,2) comment "终审借款金额",is_tongdun_passed varchar(3) comment "同盾校验是否通过,1，通过，0，不通过",gps_flag varchar(5) comment "是否安装GPS：1是2否,非水畔的默认为空") comment "审批终审信息表" partitioned by (fq_year string, fq_month string,fq_day string)

;
DROP TABLE IF EXISTS tmp.tb_lb_custinfo

;
ALTER TABLE stg_collappdev.tb_col_ordermoney_day drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
CREATE TABLE IF NOT EXISTS tmp.tb_lb_custinfo(id int comment "记录ID",applyid int comment "贷款申请ID",custtype int comment "贷款人类型1主贷人、0次贷人",custrelation varchar(100) comment "主/次贷人关系",custname varchar(50) comment "姓名",custname_md5 varchar(200) comment "姓名UDF脱敏",age int comment "年龄",gender varchar(4) comment "性别",marry varchar(4) comment "婚姻状况",doctype varchar(50) comment "证件类型",docno varchar(20) comment "证件号码",docno_md5 varchar(200) comment "证件号码UDF脱敏",socialsecurity varchar(20) comment "社保卡号",socialsecurity_md5 varchar(200) comment "社保卡号UDF脱敏",tempdocno varchar(50) comment "暂住证号",birthday varchar(20) comment "出生日期",birthplace varchar(20) comment "籍贯",household varchar(400) comment "户口所在地",education varchar(20) comment "教育程度",mobile varchar(50) comment "移动电话",mobile_md5 varchar(200) comment "移动电话UDF脱敏",email varchar(1024) comment "Email",email_md5 varchar(1024) comment "Email加密",mailtype int comment "邮寄地址",know int comment "家庭知悉此贷款1是,0否",insider varchar(50) comment "知悉人姓名",insider_md5 varchar(200) comment "知悉人姓名UDF脱敏",relation varchar(20) comment "知悉人关系",spousename varchar(50) comment "配偶姓名",spousename_md5 varchar(200) comment "配偶姓名UDF脱敏",spouseage int comment "配偶年龄",spousetel varchar(50) comment "配偶电话",spousetel_md5 varchar(200) comment "配偶电话UDF脱敏",spousecorp varchar(100) comment "配偶单位",spouseduties varchar(50) comment "配偶职位",spouseaddr varchar(100) comment "配偶单位地址",spousecorptel varchar(50) comment "配偶单位电话",spousesalary decimal(15,2) comment "配偶月收入",estateaddr varchar(100) comment "房产地址",estatebuymode int comment "购买方式1一次性支付2按揭购买",estatebuydate timestamp comment "购买日期",estateyearbuilt varchar(10) comment "建筑年份",estatearea int comment "销售面积",estatemorbank varchar(50) comment "按揭银行",estateprice decimal(15,2) comment "贷款总额",estateloanperiod varchar(10) comment "贷款年限",estaterepayamt decimal(15,2) comment "月付贷款",estateamount decimal(15,2) comment "贷款总额",estateresum decimal(15,2) comment "尚欠余额",comeheredate varchar(200) comment "来深时间",zipcode varchar(200) comment "邮政编码",livetime varchar(200) comment "起始居住时间",qqno_md5 varchar(200) comment "QQ号码加密",spousedocno varchar(50) comment "配偶身份证号码",spousedepartment varchar(100) comment "配偶所在部门",carbuymode int comment "车辆购买方式1一次性2按揭",carprice decimal(15,2) comment "车辆购买贷款总额",carpayamt decimal(15,2) comment "车辆月付贷款",creditcardnum int comment "信用卡张数",creditmaxamt decimal(15,2) comment "信用卡总信用额度",onebankname varchar(50) comment "其中一张信用卡的银行名称",onebankmaxamt decimal(15,2) comment "其中一张银行信用卡额度",investmentpro varchar(1024) comment "投资项目",mobile2 varchar(50) comment "移动号码2",mobile2_md5 varchar(200) comment "移动号码2UDF脱敏",mobile3 varchar(50) comment "移动号码3",mobile3_md5 varchar(200) comment "移动号码3UDF脱敏",province varchar(20) comment "省份",city varchar(50) comment "城市",cityzone varchar(50) comment "区县",mobilecode varchar(20) comment "移动电话1的区号",mobilecode2 varchar(20) comment "移动电话2的区号",mobilecode3 varchar(20) comment "移动电话3的区号",spousetelcode varchar(20) comment "配偶电话的区号",spousecorptelcode varchar(20) comment "配偶单位电话的区号",spousecorpsubtel varchar(50) comment "配偶单位电话的分机号",spousecorpsubtel_md5 varchar(200) comment "配偶单位电话的分机号UDF脱敏",pinyin varchar(100) comment "拼音",birthplacetype int comment "户口类型,1本地，2省内，3省外",childnum int comment "子女数",qq_md5 varchar(200) comment "QQ加密",microletter_md5 varchar(200) comment "微信",knowdk varchar(10) comment "是否知晓贷款",edutype varchar(20) comment "学制类型",eduyear varchar(20) comment "学年",entertear varchar(20) comment "入学年份",graduatetime date comment "毕业时间",facultyname varchar(50) comment "学院名称",stuno varchar(50) comment "学生证号",dln varchar(50) comment "电核意愿，1愿意电核主贷人，0不愿意电核。默认为1愿意电核主贷人",channel_user varchar(50) comment "渠道",sources varchar(50) comment "来源",chsi varchar(50) comment "学信网帐号",home_addr varchar(50) comment "家庭地址",graduate varchar(50) comment "毕业年份",bank_phone varchar(50) comment "银行预留手机号",bank_phone_md5 varchar(200) comment "银行预留手机号UDF脱敏",receive_addr varchar(100) comment "收货地址",touna_user_id int comment "投哪网客户id",childreninfo varchar(20) comment "子女情况：1.参加工作，2.读书（高中及以上），3.读书（中专，初中及以下），4.其他.多个使用逗号分隔",job_type int comment "工作类型：1自雇人士2授薪人士",person_liability varchar(50) comment "个人负债情况：在数据字典中配置",mobileemail varchar(22) comment "电话邮箱",residence int comment "是否有居住证",spousejobtype int comment "配偶工作类型:1:自雇人士,2:授薪人士,3:无",city_id int comment "城市id",cityzone_id int comment "区县id",province_id int comment "省份id",spousedocno_md5 varchar(416) comment "",tempdocno_md5 varchar(416) comment "",email_md5_nosalt string comment "",doc_end_date timestamp comment "身份证开始日期",doc_start_date timestamp comment "身份证开始日期") comment "客户信息表" partitioned by (fq_year string, fq_month string,fq_day string)

;
ALTER TABLE stg_collappdev.tb_col_ordermoney_month drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
DROP TABLE IF EXISTS tmp.credit_param

;
CREATE TABLE IF NOT EXISTS tmp.credit_param(id bigint comment "记录ID",code varchar(64) comment "授权码",request_param string comment "请求参数",create_time timestamp comment "创建时间") comment "风控授信请求参数信息表" partitioned by (fq_year string, fq_month string,fq_day string)

;
ALTER TABLE stg_collappdev.tb_col_ordermoney_month drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=06)

;
ALTER TABLE stg_collappdev.tb_col_ordermoney_month drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_col_ordernum_day drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_collappdev.tb_col_ordernum_day drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=06)

;
ALTER TABLE stg_collappdev.tb_col_ordernum_day drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_collappdev.tb_col_ordernum_month drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_collappdev.tb_col_ordernum_month drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_collappdev.tb_col_payconfirm drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_collappdev.tb_col_payconfirm drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=06)

;
ALTER TABLE stg_collappdev.tb_col_payconfirm drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_collappdev.tb_col_payconfirmplan drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
drop table if exists tmp.tb_data_count_tb_lb_applyaudit_last

;
CREATE TABLE tmp.tb_data_count_tb_lb_applyaudit_last(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
ALTER TABLE stg_collappdev.tb_col_region drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_collappdev.tb_col_role drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
drop table if exists tmp.tb_data_count_tb_contact

;
CREATE TABLE tmp.tb_data_count_tb_contact(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
ALTER TABLE stg_collappdev.tb_col_role_priv drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_collappdev.tb_col_urgemanfee drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_collappdev.tb_col_urgemanfee drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_collappdev.tb_col_workorder drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_collappdev.tb_col_workorder drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=06)

;
ALTER TABLE stg_collappdev.tb_col_workorder drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_col_workorder_credit drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
drop table if exists tmp.tb_data_count_credit_param

;
CREATE TABLE tmp.tb_data_count_credit_param(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
ALTER TABLE stg_collappdev.tb_defendant_plaintiff drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_lawsuit_progress drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_collappdev.tb_lb_workorder_supplement drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_collappdev.tb_litigation_costs drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
SELECT host,port,username,password,database_name,concat('select ','"lms",','"v_bd_tb_lb_applyaudit_last" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','lms','.','v_bd_tb_lb_applyaudit_last') FROM tb_get_conn_info where host='172.30.16.250' and database_name='lms'

;
ALTER TABLE stg_collappdev.tb_lm_contract drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_collappdev.tb_mortgage_syn_record drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_mt_mortgage drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_collappdev.tb_order_history drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_collappdev.tb_order_history drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_org_type drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_overdue_day_report drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_collappdev.tb_overdue_report drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_collappdev.tb_overdue_report drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=06)

;
ALTER TABLE stg_collappdev.tb_overdue_report drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
SELECT host,port,username,password,database_name,concat('select ','"riskmgmt",','"v_bd_credit_param" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','riskmgmt','.','v_bd_credit_param') FROM tb_get_conn_info where host='172.30.17.247' and database_name='riskmgmt'

;
ALTER TABLE stg_collappdev.tb_pawn_notify_record drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_region_site drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_collappdev.tb_region_site drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_collappdev.tb_return drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_collappdev.tb_return_detail drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_collappdev.tb_sys_datapriv drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_sys_dist drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_collappdev.tb_sys_dist drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_collappdev.tb_sys_org drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
SELECT host,port,username,password,database_name,concat('select ','"lms",','"v_bd_tb_lb_custinfo" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','lms','.','v_bd_tb_lb_custinfo') FROM tb_get_conn_info where host='172.30.16.250' and database_name='lms'

;
ALTER TABLE stg_collappdev.tb_sys_org drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_collappdev.tb_sys_priv drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_collappdev.tb_sys_site drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_collappdev.tb_sys_target drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_collappdev.tb_sys_user_site drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_collappdev.tb_user_org drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_credit_loan.antifraud_result drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.attachments drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.audit_distribute drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.audit_user drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.audit_user_call drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.audit_user_task drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.bidding drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.contract drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.contract_attachment drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.cr_query_history drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_credit_loan.credit_record drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.decision_result drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.idempotence_control drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.loan_term drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=14)

;
ALTER TABLE stg_credit_loan.order drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.order_extra drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.order_fee drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.order_idempotence_control drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.package drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_credit_loan.phone_check_info drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.process_history_taskinstance drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.process_running_task drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.process_task drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.product drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_credit_loan.product_type drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_credit_loan.tb_credit_contract_record drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.tb_credit_event_message drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.tb_credit_limit drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.tb_credit_limit_change_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.tb_credit_limit_freeze_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.tb_credit_limit_operate_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_lb_applyaudit_last

;
ALTER TABLE stg_credit_loan.tb_credit_loan_user drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.tb_credit_user_auth drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_credit_param

;
ALTER TABLE stg_credit_loan.tb_credit_user_operate drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.tb_credit_user_operate_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.tb_jxl_auth drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.tb_loan_user drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.tb_user_behavior_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.tn_crm_borrow_user drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.tn_crm_order_record drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.tn_fms_loan drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=24)

;
ALTER TABLE stg_credit_loan.tn_fms_loan_audit_allot drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.tn_fms_loan_audit_rule drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.tn_fms_loan_config drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.tn_fms_loan_extra drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.tn_fms_loan_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.tn_fms_loan_opt_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.tn_fms_loan_switch drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.tn_fms_mq_record drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.tn_fms_released_mortgage_fee drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.tn_fms_repay_back_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_credit_loan.tn_fms_repay_detail drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.tn_fms_repay_fee drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_credit_loan.tn_fms_repay_plan drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.tn_fms_repay_return drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_credit_loan.tn_fms_withhold_record drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.tn_sp_loan drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.tn_sp_repay_detail drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.tn_sp_repay_fee drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.tn_sp_repay_plan drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.tn_sp_repay_return drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.tn_sp_repay_return_detail drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_credit_loan.whitelist_batch drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_credit_loan.whitelist_detail drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_custos.cgb_pa0016_trade_trans drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=12)

;
ALTER TABLE stg_custos.cgb_pa0023_account drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=10)

;
select 'ods_lms','tb_lb_applyaudit_last',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_lms.tb_lb_applyaudit_last

;
ALTER TABLE stg_custos.cgb_pa0031_cash_result_b drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=12)

;
ALTER TABLE stg_custos.cgb_pa0039_borrower_charge drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=14)

;
INSERT OVERWRITE TABLE stg_lms.tb_lb_applyaudit_last PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select applyid applyid,lastauditby lastauditby,lastauditby_md5 lastauditby_md5,lastauditbyname lastauditbyname,lastauditbyname_md5 lastauditbyname_md5,lastaudittime lastaudittime,lastauditamt lastauditamt,lastaduitphases lastaduitphases,lastrate lastrate,lastmanagefees lastmanagefees,lastfee lastfee,lastauditresult lastauditresult,denyby denyby,denyby_md5 denyby_md5,denybyname denybyname,denybyname_md5 denybyname_md5,denytime denytime,denyreason denyreason,cancelby cancelby,cancelby_md5 cancelby_md5,cancelbyname cancelbyname,cancelbyname_md5 cancelbyname_md5,canceltime canceltime,cancelreason cancelreason,invalidby invalidby,invalidby_md5 invalidby_md5,invalidbyname invalidbyname,invalidbyname_md5 invalidbyname_md5,invalidtime invalidtime,invalidreason invalidreason,lastaduitphasest lastaduitphasest,payratio payratio,margin_rate margin_rate,balance_rate balance_rate,balance balance,firstpayed firstpayed,totalrate totalrate,last_audit_loan_amt last_audit_loan_amt,is_tongdun_passed is_tongdun_passed,gps_flag gps_flag from tmp.tb_lb_applyaudit_last WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
ALTER TABLE stg_custos.cgb_pa0052_recharge drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=12)

;
ALTER TABLE stg_custos.cgb_pb0002_customer drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_custos.cgb_pb0030_cash_result_c drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=13)

;
ALTER TABLE stg_custos.cgb_pb0039_investor_charge drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_custos.tn_cgb_award_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_custos.tn_cgb_debit_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_custos.tn_cgb_loan_fee_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
alter table tmp.tb_contact add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_contact/2019/07/23'

;
ALTER TABLE stg_custos.tn_cgb_repay_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_custos.tn_cgb_repay_sum_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_custos.tn_cgb_trans_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_custos.tn_fms_deduct_sublog drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_custos.tn_fms_repay_notify drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_custos.tn_fms_transin_sublog drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=14)

;
ALTER TABLE stg_custos.tn_gf_recharge drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=09)

;
ALTER TABLE stg_custos.tn_gf_withhold drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=12)

;
INSERT OVERWRITE TABLE ods_lms.tb_contact select row_id row_id,last_name last_name,last_name_md5 last_name_md5,last_py_md5 last_py_md5,sex sex,married married,childrens childrens,childinfo childinfo,pri_phone pri_phone,pri_phone_md5 pri_phone_md5,sec_phone sec_phone,sec_phone_md5 sec_phone_md5,home_phone home_phone,home_phone_md5 home_phone_md5,home_address home_address,only_house only_house,house_type house_type,birth_dt birth_dt,id_type id_type,id_code id_code,id_code_md5 id_code_md5,id_expire_dt id_expire_dt,nature_type nature_type,nature_state nature_state,nature_city nature_city,nature_cityzone nature_cityzone,nature_street nature_street,e_address e_address,e_address_md5 e_address_md5,qq_code_md5 qq_code_md5,wx_code_md5 wx_code_md5,local_state local_state,local_city local_city,local_cityzone local_cityzone,local_street local_street,local_street_md local_street_md,to_local_dt to_local_dt,education education,pay_dt pay_dt,installment_amt installment_amt,ex_start_time ex_start_time,ex_end_time ex_end_time,ex_addr_type ex_addr_type,ex_address ex_address,gps_address gps_address,manager_id manager_id,org_id org_id,src_channel src_channel,db_upd_sys db_upd_sys,create_by create_by,create_date create_date,last_upd_by last_upd_by,last_upd_date last_upd_date,valid valid,con_status con_status,houses houses,bz bz,operate_status operate_status,is_ccreditcard is_ccreditcard,creditcard_quota creditcard_quota,is_social is_social,sesame_points sesame_points,cohabit cohabit,cohabitdj cohabitdj,cohabitfm cohabitfm,cohabitxd cohabitxd,cohabitts cohabitts,cohabitpo cohabitpo,cohabitzn cohabitzn,cohabitqt cohabitqt,now_living_year now_living_year,local_living_year local_living_year,managerno managerno,service_code service_code,jxl_auth_id jxl_auth_id,nation nation,idcardvalid idcardvalid,liability_info liability_info,fddid fddid,is_agree_call is_agree_call,loan_use loan_use,naturefulladdress naturefulladdress,biz_channel biz_channel,drive_license drive_license,issuing_authority issuing_authority,e_address_md5_nosalt e_address_md5_nosalt,credit_card_email credit_card_email,id_code_end id_code_end,id_code_start id_code_start,liability liability from tmp.tb_contact WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
ALTER TABLE stg_custos.tn_pay_order drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=11)

;
ALTER TABLE stg_custos_s.cgb_pa0031_cash_result_b_s drop if exists PARTITION  (  fq_year= 2018,fq_month= 06 , fq_day=18)

;
ALTER TABLE stg_custos_s.cgb_pa0039_borrower_charge_s drop if exists PARTITION  (  fq_year= 2018,fq_month= 06 , fq_day=17)

;
ALTER TABLE stg_custos_s.cgb_pa0052_recharge_s drop if exists PARTITION  (  fq_year= 2018,fq_month= 06 , fq_day=17)

;
ALTER TABLE stg_custos_s.cgb_pb0002_customer_s drop if exists PARTITION  (  fq_year= 2018,fq_month= 06 , fq_day=18)

;
ALTER TABLE stg_custos_s.cgb_pb0030_cash_result_c_s drop if exists PARTITION  (  fq_year= 2018,fq_month= 06 , fq_day=19)

;
ALTER TABLE stg_custos_s.cgb_pb0039_investor_charge_s drop if exists PARTITION  (  fq_year= 2018,fq_month= 06 , fq_day=18)

;
ALTER TABLE stg_custos_s.tn_fms_transin_sublog_s drop if exists PARTITION  (  fq_year= 2018,fq_month= 06 , fq_day=24)

;
ALTER TABLE stg_custos_s.tn_gf_recharge_s drop if exists PARTITION  (  fq_year= 2018,fq_month= 06 , fq_day=15)

;
select 'ods_sensitive','credit_param',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_sensitive.credit_param

;
ALTER TABLE stg_custos_s.tn_gf_withhold_s drop if exists PARTITION  (  fq_year= 2018,fq_month= 06 , fq_day=15)

;
ALTER TABLE stg_lms.tb_car300_carbrand drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_car300_carmodel drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
drop table if exists app_db.tn_capital_asset_interest

;
CREATE TABLE if not exists app_db.tn_capital_asset_interest(
id int comment "主键ID",
day varchar(30) comment "统计日期",
plan_kind varchar(30) comment "产品",
money decimal(30,2) comment "资金到期本金",
money_interest decimal(30,2) comment "资金到期本息",
asset decimal(30,2) comment "资产到期本金",
asset_interest decimal(30,2) comment "资产到期本息",
update_time timestamp comment "更新时间")
COMMENT "资金资产到期数据"
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS textfile

;
insert overwrite table app_db.tn_capital_asset_interest
select
row_number()over() id,
day,
plan_kind,
money, money_interest,
asset, asset_interest,
from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') update_time
from (
SELECT COALESCE(tmp1.lockendtime, tmp2.repay_time) day,
COALESCE(tmp1.money,0) money, COALESCE(tmp1.money_interest,0) money_interest,
COALESCE(tmp2.asset,0) asset, COALESCE(tmp2.asset_interest,0) asset_interest,
'安心X' as plan_kind
FROM
(
SELECT FROM_UNIXTIME(cast(lockendtime as int),'yyyy-MM-dd') lockendtime, sum(account_yes) money, sum(account_yes*(1+rate/100)) money_interest
FROM ods_touna.dw_smart_plan
WHERE account_yes>0
and type NOT IN(30,40)
group by FROM_UNIXTIME(cast(lockendtime as int),'yyyy-MM-dd')
) tmp1
full JOIN
(
SELECT from_unixtime(cast(coll.repay_time as int), 'yyyy-MM-dd') repay_time, sum(coll.capital) asset, sum(coll.capital+coll.interest) asset_interest
FROM (select id from ods_touna.dw_smart_plan where account_yes>0 and type NOT IN(30,40)) plan
left join ods_touna.dw_smart_tender_log match on plan.id=match.planid
left join ods_touna.dw_borrow_collection coll ON match.tenderid=coll.tender_id
where coll.status=0
group by from_unixtime(cast(coll.repay_time as int), 'yyyy-MM-dd')
) tmp2
on tmp1.lockendtime=tmp2.repay_time
UNION ALL
SELECT COALESCE(tmp1.lockendtime, tmp2.repay_time) day,
COALESCE(tmp1.money,0) money, COALESCE(tmp1.money_interest,0) money_interest,
COALESCE(tmp2.asset,0) asset, COALESCE(tmp2.asset_interest,0) asset_interest,
'安心plus' as plan_kind
FROM
(
select FROM_UNIXTIME(cast(lock_end_time as int),'yyyy-MM-dd') lockendtime, sum(invested_amount) money,
sum(invested_amount*(1+rate/100)) money_interest
FROM ods_touna.tn_plus_plan_join where bondid=0 and status=2
group by FROM_UNIXTIME(cast(lock_end_time as int),'yyyy-MM-dd')
) tmp1
full join
(
SELECT from_unixtime(cast(coll.repay_time as int), 'yyyy-MM-dd') repay_time, sum(coll.capital) asset, sum(coll.capital+coll.interest) asset_interest
FROM (SELECT id as planid from ods_touna.tn_plus_plan WHERE amount_yes>0) plan
left join ods_touna.tn_plus_account plus_acc on plan.planid=plus_acc.planid
left join (select * from ods_touna.tn_plus_match_tender WHERE status!=2
) match on plus_acc.id=match.accountid
left join ods_touna.dw_borrow_collection coll on match.tenderid=coll.tender_id
where coll.status=0
group by from_unixtime(cast(coll.repay_time as int), 'yyyy-MM-dd')
) tmp2
on tmp1.lockendtime= tmp2.repay_time
UNION ALL
SELECT COALESCE(tmp1.lockendtime, tmp2.repay_time) day,
COALESCE(tmp1.money,0) money, COALESCE(tmp1.money_interest,0) money_interest,
COALESCE(tmp2.asset,0) asset, COALESCE(tmp2.asset_interest,0) asset_interest,
'自动投plus' as plan_kind
FROM
(
SELECT date_add(code, allow_transfer_day) lockendtime, sum(amount_yes) money, sum(amount_yes*(1+max_rate/100)) money_interest
FROM ods_touna.tn_lyra_plan group BY date_add(code, allow_transfer_day)
) tmp1
full JOIN
(
SELECT from_unixtime(cast(coll.repay_time as int), 'yyyy-MM-dd') repay_time, sum(coll.capital) asset, sum(coll.capital+coll.interest) asset_interest
FROM (SELECT date_add(code, allow_transfer_day) lockendtime, id as planid FROM ods_touna.tn_lyra_plan WHERE amount_yes>0) plan
left join ods_touna.tn_lyra_account lyra_acc on plan.planid=lyra_acc.planid
left join ods_touna.tn_lyra_match_tender match on lyra_acc.id=match.accountid
left join ods_touna.dw_borrow_collection coll on match.tenderid=coll.tender_id
where coll.status=0
group by from_unixtime(cast(coll.repay_time as int), 'yyyy-MM-dd')
) tmp2
on tmp1.lockendtime= tmp2.repay_time
) ma_data
where ma_data.day>=current_date

;
ALTER TABLE stg_lms.tb_car300_carseries drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
INSERT OVERWRITE TABLE ods_lms.tb_lb_custinfo select id id,applyid applyid,custtype custtype,custrelation custrelation,custname custname,custname_md5 custname_md5,age age,gender gender,marry marry,doctype doctype,docno docno,docno_md5 docno_md5,socialsecurity socialsecurity,socialsecurity_md5 socialsecurity_md5,tempdocno tempdocno,birthday birthday,birthplace birthplace,household household,education education,mobile mobile,mobile_md5 mobile_md5,email email,email_md5 email_md5,mailtype mailtype,know know,insider insider,insider_md5 insider_md5,relation relation,spousename spousename,spousename_md5 spousename_md5,spouseage spouseage,spousetel spousetel,spousetel_md5 spousetel_md5,spousecorp spousecorp,spouseduties spouseduties,spouseaddr spouseaddr,spousecorptel spousecorptel,spousesalary spousesalary,estateaddr estateaddr,estatebuymode estatebuymode,estatebuydate estatebuydate,estateyearbuilt estateyearbuilt,estatearea estatearea,estatemorbank estatemorbank,estateprice estateprice,estateloanperiod estateloanperiod,estaterepayamt estaterepayamt,estateamount estateamount,estateresum estateresum,comeheredate comeheredate,zipcode zipcode,livetime livetime,qqno_md5 qqno_md5,spousedocno spousedocno,spousedepartment spousedepartment,carbuymode carbuymode,carprice carprice,carpayamt carpayamt,creditcardnum creditcardnum,creditmaxamt creditmaxamt,onebankname onebankname,onebankmaxamt onebankmaxamt,investmentpro investmentpro,mobile2 mobile2,mobile2_md5 mobile2_md5,mobile3 mobile3,mobile3_md5 mobile3_md5,province province,city city,cityzone cityzone,mobilecode mobilecode,mobilecode2 mobilecode2,mobilecode3 mobilecode3,spousetelcode spousetelcode,spousecorptelcode spousecorptelcode,spousecorpsubtel spousecorpsubtel,spousecorpsubtel_md5 spousecorpsubtel_md5,pinyin pinyin,birthplacetype birthplacetype,childnum childnum,qq_md5 qq_md5,microletter_md5 microletter_md5,knowdk knowdk,edutype edutype,eduyear eduyear,entertear entertear,graduatetime graduatetime,facultyname facultyname,stuno stuno,dln dln,channel_user channel_user,sources sources,chsi chsi,home_addr home_addr,graduate graduate,bank_phone bank_phone,bank_phone_md5 bank_phone_md5,receive_addr receive_addr,touna_user_id touna_user_id,childreninfo childreninfo,job_type job_type,person_liability person_liability,mobileemail mobileemail,residence residence,spousejobtype spousejobtype,city_id city_id,cityzone_id cityzone_id,province_id province_id,spousedocno_md5 spousedocno_md5,tempdocno_md5 tempdocno_md5,email_md5_nosalt email_md5_nosalt,doc_end_date doc_end_date,doc_start_date doc_start_date from tmp.tb_lb_custinfo WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
ALTER TABLE stg_lms.tb_car_300info drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_lms.tb_car_brand drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_lms.tb_car_evaluate drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_lms.tb_car_lcyconnct drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_car_model drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_lms.tb_car_service_record drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_car_type drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_con_comp drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_con_comp drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_con_id drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_con_id drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_con_linkman drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_con_linkman drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_contact drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_contact drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_lms.tb_contact_car drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_contact_car drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_contact_card drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_contact_houseproperty drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='lms' AND table_name='tb_lm_paymentdetail' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
ALTER TABLE stg_lms.tb_contact_houseproperty drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
select 'ods_lms','tb_contact',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_lms.tb_contact

;
ALTER TABLE stg_lms.tb_cr_record_black drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_gps_custinfo drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
INSERT OVERWRITE TABLE stg_lms.tb_lb_applyinfo PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select loan_sources loan_sources,last_apply_id last_apply_id,reloan_type reloan_type,reloan_flag reloan_flag,dealer_name dealer_name,orgno orgno,hklx hklx,ratedisplay ratedisplay,createbyid createbyid,mtqksm mtqksm,qq_md5 qq_md5,guar_amt guar_amt,childnum childnum,modifytime modifytime,yhknl yhknl,purchase_tax_amt purchase_tax_amt,gifts_amt gifts_amt,audittime audittime,mfeedisplay mfeedisplay,totalrate totalrate,productname productname,first_payment_amt first_payment_amt,assprice assprice,loantype loantype,sources sources,postal_addr postal_addr,feedisplay feedisplay,applycode applycode,loantime loantime,single_premiums single_premiums,exitstatus exitstatus,payment payment,license_plate_amt license_plate_amt,sfcs sfcs,dkfs dkfs,parmrate2 parmrate2,interviews interviews,reportid reportid,directseller directseller,otherstatus otherstatus,id id,region region,createtime createtime,mutual_loan_model mutual_loan_model,rate rate,hkfs hkfs,createby createby,monthpay monthpay,purpose purpose,gps_amt gps_amt,car_price_amt car_price_amt,modifyby modifyby,weixin_md5 weixin_md5,products products,first_pay_target first_pay_target,auditby auditby,managefeerate managefeerate,status status,productarea productarea,feerate feerate,applydate applydate,loantimetype loantimetype,siteno siteno,exitto exitto,pgj pgj,loanmode loanmode,shoppingchannel shoppingchannel,amount amount,dln_md5 dln_md5,parmrate3 parmrate3,isout isout,salesman salesman,direct_empid direct_empid,parmrate1 parmrate1,insure_fee_amt insure_fee_amt,rent_capital_total rent_capital_total,additional_process_type additional_process_type,manage_fee_flag manage_fee_flag from tmp.tb_lb_applyinfo WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
ALTER TABLE stg_lms.tb_gps_info drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_gps_info_old drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_gps_installation drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_grade_dimension drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_grade_dimension_level drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_grade_other_params drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_lms.tb_grade_profile_index drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_grade_profile_index_detail drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_grade_strategy drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_la_urge drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_lms.tb_la_urge drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=06)

;
ALTER TABLE stg_lms.tb_lb_alipay_information drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_lms.tb_lb_apply_audit_suggest drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_apply_grade_detail drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_apply_grade_sum drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_applyaudit drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_applyaudit_last drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=24)

;
ALTER TABLE stg_lms.tb_lb_applycodeinfo drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_lb_applycodeinfo drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lb_applyflow drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lb_applyflow drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_lms.tb_lb_applyinfoadditional drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_lb_applyinfoadditional drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_basicinfo_maintenance drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_lb_basicinfo_maintenance drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lb_card_message drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_lb_carmessage drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_lms.tb_lb_contactor drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_lb_continueloan drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_creditmsg drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_creditsurveyreport drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_custinfo drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=24)

;
ALTER TABLE stg_lms.tb_lb_datacompar drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_decision_result drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_lb_decisionresult drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lb_dhmessage drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_dkls drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lb_estateinfo drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lb_evaluate_operaterecord drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_evaluatereport drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_lms.tb_lb_fqzinfo drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_lb_fqzinfo drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
INSERT overwrite TABLE provider_api_db.rt_model_invoke_format
SELECT id
, get_json_object(regexp_replace(regexp_replace(regexp_replace(result,'""','"'),'^"',""),'"$',""),'$.score') AS score
, issuccess
, err_msg
, requestid
, producttype
, eventtype
, date_created
, modelname
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.applyCode') AS applyCode
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.applyId') AS applyId
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.loan_flag') AS loan_flag
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.plate_number') AS plate_number
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.loan_time') AS loan_time
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.yx_otherorgan_times') AS yx_otherorgan_times
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.app_samecontactnamehitnum') AS app_samecontactnamehitnum
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_currentaddrresideyears') AS apt_currentaddrresideyears
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_telecom_phoneuserduration') AS apt_telecom_phoneuserduration
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_telecom_interconnectedcallsnum') AS apt_telecom_interconnectedcallsnum
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_localresidemonths') AS apt_localresidemonths
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.loan_amount') AS loan_amount
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_illegal_num') AS vehicle_illegal_num
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_evtrpt_mileage') AS vehicle_evtrpt_mileage
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_evtrpt_evaluateprice') AS vehicle_evtrpt_evaluateprice
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.jxl_nocturnal_ratio') AS jxl_nocturnal_ratio
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.jxl_call_num_aver_6months') AS jxl_call_num_aver_6months
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.yx_underly_record_num') AS yx_underly_record_num
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.jxl_turnoff_length') AS jxl_turnoff_length
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_minput_lastreleasedate') AS vehicle_minput_lastreleasedate
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_minput_firstregistdate') AS vehicle_minput_firstregistdate
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_minput_obtaindate') AS vehicle_minput_obtaindate
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_buydate') AS vehicle_buydate
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_minput_registcertflag') AS vehicle_minput_registcertflag
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.jxl_id_comb_othertel_num') AS jxl_id_comb_othertel_num
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.jxl_tel_length') AS jxl_tel_length
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.jxl_black_dir_cont_num') AS jxl_black_dir_cont_num
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_ec_historyloantimes') AS apt_ec_historyloantimes
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_ec_overduedaystotallastyear') AS apt_ec_overduedaystotallastyear
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_age') AS apt_age
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_evtrpt_evalprice3') AS vehicle_evtrpt_evalprice3
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_evtrpt_evalprice2') AS vehicle_evtrpt_evalprice2
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.jxl_tel_loan_call_sumnum') AS jxl_tel_loan_call_sumnum
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.td_dishonest_list_check') AS td_dishonest_list_check
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_minput_lastmortgagerinfo') AS vehicle_minput_lastmortgagerinfo
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_minput_chargetimes') AS vehicle_minput_chargetimes
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_facetrial_housetype') AS apt_facetrial_housetype
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_ec_lastloansettleddate') AS apt_ec_lastloansettleddate
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_minput_ownerway') AS vehicle_minput_ownerway
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.jxl_contact2_times') AS jxl_contact2_times
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.jxl_black_interme_score') AS jxl_black_interme_score
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_comp_monthlysalary') AS apt_comp_monthlysalary
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.jxl_contact1_times') AS jxl_contact1_times
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.app_applydate') AS app_applydate
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.jxl_eachphone_num') AS jxl_eachphone_num
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_evtrpt_b2bprice') AS vehicle_evtrpt_b2bprice
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_evtrpt_c2bprice') AS vehicle_evtrpt_c2bprice
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_minput_drivinglicensevaliditydate') AS vehicle_minput_drivinglicensevaliditydate
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_facetrial_creditcardfalg') AS apt_facetrial_creditcardfalg
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_gender') AS apt_gender
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_telecom_phoneattribution') AS apt_telecom_phoneattribution
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_ec_longestoverduedaystotallastyear') AS apt_ec_longestoverduedaystotallastyear
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_evtrpt_brand') AS vehicle_evtrpt_brand
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.yx_overdue_num_90days') AS yx_overdue_num_90days
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_facetrial_residertogether') AS apt_facetrial_residertogether
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.vehicle_minput_attribution') AS vehicle_minput_attribution
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.pgj') AS pgj
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.f_pgj') AS f_pgj
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.f_dkfs') AS f_dkfs
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.f_loandate') AS f_loandate
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.jxl_110_called_length') AS jxl_110_called_length
, get_json_object(regexp_replace(regexp_replace(regexp_replace(requestparam,'""','"'),'^"',""),'"$',""),'$.apt_comp_businesslicenseflag') AS apt_comp_businesslicenseflag
, CURRENT_TIMESTAMP AS  parsing_time
FROM  provider_api_db.rt_model_invoke

;
insert overwrite table provider_api_db.credit_param_info
select row_number() over() id,code, get_json_object(t.request_param,'$.orderId') orderId,create_time
from ods_sensitive.credit_param t

;
ALTER TABLE stg_lms.tb_lb_houseinfo drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lb_illegal_act drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_illegal_status drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_investigatela drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lb_lpmessage drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lb_msqkinfo drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lb_oper_info drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lb_pawnhousesituation drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_lms.tb_lb_pawnhousesituation drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=06)

;
ALTER TABLE stg_lms.tb_lb_pawnhousesituation drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_lb_profession drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_pyzx drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_lb_pyzx drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_reason drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_lb_reason drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
DROP TABLE IF EXISTS tmp.tb_lm_paymentdetail

;
CREATE TABLE IF NOT EXISTS tmp.tb_lm_paymentdetail(id int comment "记录ID,由序列seq_paymentdetail_id生成",paymentid int comment "付款申请单信息表的记录ID",bankaccount varchar(200) comment "收款人",bankaccount_md5 varchar(200) comment "脱敏收款人",bank varchar(100) comment "银行",bankno varchar(50) comment "账号",bankno_md5 varchar(200) comment "脱敏账号",payamt decimal(15,2) comment "付款金额",fees decimal(15,2) comment "手续费",actualpayamt decimal(15,2) comment "实际付款金额",confirmman varchar(50) comment "确认人",confirmdate varchar(20) comment "确认日期",confirmuser varchar(50) comment "确认用户",status int comment "状态,0未确认放款，1已确认放款，2已作废",banktype varchar(50) comment "银行类别",checkstatus int comment "复核状态,0未复核,1已复核",checkby varchar(50) comment "复核人",checkdate varchar(20) comment "复核时间",payment int comment "交易方式，1现金，2银行转账，3自动代扣",bankbranch varchar(150) comment "支行",paybankaccount int comment "公司放款账号记录ID",auditstatus int comment "审批状态，0未审批，1已审批",auditby varchar(50) comment "审批人",auditdate varchar(20) comment "审批人",jclearamt decimal(15,2) comment "上一笔贷款余额",jloanid int comment "上一笔贷款记录ID",checkmark varchar(1024) comment "放款复核意见",auditremark varchar(1024) comment "审批意见",comfirmremark varchar(1024) comment "放款确认意见",fkkjfees decimal(15,2) comment "放款扣减费用",ysxf int comment "预收息费，几个月",fkapplyby varchar(50) comment "放款申请人",fkapplydate date comment "放款提交日期",fkremark varchar(1024) comment "放款其他说明",ysxfamt decimal(15,2) comment "预收息费金额",createby varchar(50) comment "建档人",createdate varchar(20) comment "建档时间",fkapplystatus int comment "放款申请状态，0未提交，1审批中，2已放款,3再放款",paytype int comment "放款类别，0转预收，1首次放款，2再次放款",applyid int comment "贷款申请记录ID",contractid int comment "合同记录ID",isfullscale int comment "标状态，未处理：0，发标成功：1，满标：3,流标：5",fincheckstatus int comment "财务复核状态：0未复核,1已复核,2退回",fincheckby varchar(50) comment "财务复核人",fincheckdate timestamp comment "财务复核时间",fincheckdes varchar(1024) comment "财务复核意见",finauditstatus int comment "财务审批状态，0未审批，1已审批,2退回",finauditby varchar(50) comment "财务审批人",finauditdate varchar(20) comment "财务审批时间",finauditdes varchar(1024) comment "财务审批意见",returnremark varchar(200) comment "退回原因",channel varchar(20) comment "渠道",risk_doc_status int comment "风控审批资料上传状态，0或者空为未上传，1为已上传",risk_doc_upload_by varchar(50) comment "风控审批资料上传状态人",risk_doc_upload_date varchar(20) comment "风控审批资料上传状态时间",ismortafterloan int comment "是否放款后抵押,0或null：否,1：是",djzstatus int comment "对于放款后抵押情况，登记证提交状态,0：未分配,1：未提交,2：已提交,3：已复核,4：退回",mort_distribute_by varchar(50) comment "抵押登记分配人",mort_distribute_time varchar(20) comment "抵押登记分配时间",mort_do_by varchar(50) comment "抵押登记处理人",mort_do_time varchar(20) comment "抵押登记处理时间",mort_check_time varchar(20) comment "抵押登记复核时间") comment "放款详情表" partitioned by (fq_year string, fq_month string,fq_day string)

;
ALTER TABLE stg_lms.tb_lb_survey drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lb_tongdun drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lb_wcdc drop if exists PARTITION  (  fq_year= 2018,fq_month= 04 , fq_day=25)

;
ALTER TABLE stg_lms.tb_lf_baddebt drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lf_baddebt drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lf_exhibition drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_lms.tb_lf_jextapply_interview drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lf_jextapplyinfo drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lf_reconsider drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lf_recpayinfo drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lf_recpayinfo drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_lf_recpayinfouse drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lf_recpayinfouse drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_lf_return drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lf_return drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=24)

;
ALTER TABLE stg_lms.tb_lf_returndetail drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
SELECT host,port,username,password,database_name,concat('select ','"lms",','"v_bd_tb_lm_paymentdetail" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','lms','.','v_bd_tb_lm_paymentdetail') FROM tb_get_conn_info where host='172.30.16.250' and database_name='lms'

;
ALTER TABLE stg_lms.tb_lf_returndetail drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=24)

;
ALTER TABLE stg_lms.tb_lf_returndetail_red drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lf_returndetail_red drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_lf_specialclear drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=24)

;
ALTER TABLE stg_lms.tb_lf_specialfeesfree drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_lms.tb_lf_specialfeesfreesub drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_lms.tb_lf_specialgrace drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_lms.tb_lf_specialotherfees drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
drop table IF EXISTS  tmp.tb_lb_applyinfo

;
ALTER TABLE stg_lms.tb_lf_specialratechange drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lf_specialrepaydate drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lf_specialrepayplan drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_lf_specialrepayplansub drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lm_bidrecord drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lm_bidrecord drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lm_contract drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lm_contract drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=24)

;
ALTER TABLE stg_lms.tb_lm_cust_extra drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lm_cust_extra drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lm_custaccount drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='decision' AND table_name='tb_lb_decision_result' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
ALTER TABLE stg_lms.tb_lm_custaccount drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lm_dsmessage drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_lm_dzyw drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lm_dzyw drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_lm_loancocorp drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lm_loancocorp drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lm_otherfee drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lm_otherfee drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_lm_pawnhandle drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_lms.tb_lm_pawnhandle drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_lm_pawnhandle_new drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_lms.tb_lm_pawnhandledetail drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_lms.tb_lm_pawnhandledetail drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=06)

;
ALTER TABLE stg_lms.tb_lm_pawnhandledetail drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_lm_pawntaskplan drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_lms.tb_lm_pawntaskplan drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=06)

;
ALTER TABLE stg_lms.tb_lm_pawntaskplan drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_lm_payment drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lm_payment drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=24)

;
ALTER TABLE stg_lms.tb_lm_paymentdetail drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lm_paymentdetail drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=24)

;
ALTER TABLE stg_lms.tb_lm_payplan drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
DROP TABLE IF EXISTS tmp.tb_lm_payment

;
CREATE TABLE IF NOT EXISTS tmp.tb_lm_payment(id int comment "记录ID,唯一,由序列Seq_Payment_ID产生",applyid int comment "贷款申请单记录ID,贷款申请单信息表的记录ID",contractid int comment "合同记录ID",loanno varchar(50) comment "合同号",amt decimal(15,2) comment "贷款金额",payment int comment "还款方式，1先息后本，2等本等息,3一次性还款",usefor varchar(50) comment "贷款用途",rate decimal(22,6) comment "利率",feerate decimal(22,6) comment "费率",loanfees decimal(15,2) comment "贷款手续费",managefeerate decimal(22,6) comment "管理费率",managefees decimal(15,2) comment "行政管理费",delayfeerate decimal(22,4) comment "逾期费率",payfee decimal(15,2) comment "预收所有服务费金额",delayrate decimal(22,4) comment "逾期利率",clearrate decimal(22,4) comment "提前结清利率",loandate timestamp comment "放款日期",startdate timestamp comment "起息日期",enddate timestamp comment "到期日期",balanceday int comment "结算日",iscompound int comment "收复利,0否,1是，默认为0",isfees int comment "是否预收手续费,0否,1是,默认为0",fees decimal(15,2) comment "手续费,",isdeduct int comment "是否从放款中扣除,0否,1是,默认为0",isdelayfees decimal(15,2) comment "延迟第一期还款手续费",loanstatus int comment "放款状态,0未放款1已放款,默认为0",returnstatus int comment "回款状态,0未结清1已结清,默认为0,2手续结清",remark varchar(1024) comment "备注",createby varchar(50) comment "建档人",createtime timestamp comment "建档时间",modifyby varchar(50) comment "修改人",modifytime timestamp comment "修改时间",applyman varchar(50) comment "申请人",status int comment "0保存,1提交",chkidcard varchar(200) comment "身份证核对",chkdh varchar(200) comment "电话核对",jloanid int comment "上一笔贷款记录ID",jclearamt decimal(15,2) comment "上一笔贷款余额",qybzj decimal(15,2) comment "签约保证金",fkkjfees decimal(15,2) comment "放款扣减手续费",ysxf int comment "预收息费",ysxfamt decimal(15,2) comment "预收息费金额",isautocreate int comment "是否预收息剩余服务费，0否，1是",actualamt decimal(15,2) comment "实际付款金额",custname varchar(200) comment "客户名称",custname_md5 varchar(200) comment "脱敏客户名称",custno varchar(50) comment "证件号码",custno_md5 varchar(200) comment "脱敏证件号码",payamt decimal(15,2) comment "已放款金额",leftamt decimal(15,2) comment "剩余未放款金额",siteno varchar(50) comment "网点编号",contractno varchar(50) comment "合同编号",fkapplydate timestamp comment "首次放款申请提交日期",fkapplyby varchar(50) comment "最后一次放款申请人",fkapplystatus int comment "最后一次放款申请状态",fktimes int comment "放款次数",minpdid int comment "首次放款记录ID",canpay int comment "是否可再放款，0否，1是",usdelayint decimal(15,2) comment "挂账金额",fksubmitdate timestamp comment "提交日期",final_amt decimal(15,2) comment "尾款金额",down_amt decimal(15,2) comment "首付金额",deposit_amt decimal(15,2) comment "保证金额",touna_bid int comment "发标后投哪返回的标ID",issueremark varchar(1024) comment "审标意见",issueby varchar(50) comment "审标人",issuedate timestamp comment "审标时间",issueresult int comment "审单结果",is_money_custody int comment "是否资金托管0:否1：是",belong_to_ratio decimal(10,0) comment "",mort_status int comment "解押状态",pay_for_touna int comment "秒贷通知投哪放款，1：已通知，-1：待通知",buckle_confirmed_status int comment "扣保状态，1：扣保成功，0，扣保失败",buckle_confirmed_remark varchar(128) comment "扣保备注",buckle_confirmed_time timestamp comment "扣保通知时间") comment "放款记录表" partitioned by (fq_year string, fq_month string,fq_day string)

;
ALTER TABLE stg_lms.tb_lm_payplan drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_lms.tb_lm_payplan_plan drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lm_payplan_plan drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_lms.tb_lm_surcharge drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_lm_surcharge drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_loan_actual_loan_fee drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_loan_actual_loan_fee drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
alter table tmp.tb_lm_paymentdetail add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_lm_paymentdetail/2019/07/23'

;
ALTER TABLE stg_lms.tb_loanentry_info_summary drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_loanentry_info_summary drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_overdue_stat_new drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
drop table if exists tmp.tb_data_count_tb_lm_payment

;
CREATE TABLE tmp.tb_data_count_tb_lm_payment(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
ALTER TABLE stg_lms.tb_overdue_stat_new drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_recharge_log drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_recharge_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_lms.tb_risk_antifraud_score drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=24)

;
ALTER TABLE stg_lms.tb_risk_interview_assign drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_lms.tb_risk_interview_signed drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_lms.tb_risk_zmcredit_score drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_risk_zmcredit_score drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
DROP TABLE IF EXISTS tmp.tb_lm_contract

;
CREATE TABLE IF NOT EXISTS tmp.tb_lm_contract(id int comment "记录ID,唯一,由序列Seq_Contract_ID产生",applyid int comment "贷款申请单记录ID,贷款申请单信息表的记录ID",contractno varchar(50) comment "合同编号,自动带贷款申请号",contractname varchar(200) comment "合同名称",custname varchar(200) comment "客户名称",custname_md5 varchar(200) comment "脱敏客户名称",custno varchar(50) comment "客户证件号",custno_md5 varchar(200) comment "脱敏客户证件号",addr varchar(300) comment "住所",amt decimal(15,2) comment "贷款金额",payment int comment "还款方式",usefor varchar(50) comment "贷款用途",rate decimal(22,6) comment "利率",feerate decimal(22,6) comment "费率",fees decimal(15,2) comment "费用",managefeerate decimal(22,6) comment "管理费率",managefees decimal(15,2) comment "管理费",delayfeerate decimal(22,4) comment "逾期费率",payfee decimal(15,2) comment "扣款失败每笔每次费用",delayrate decimal(22,4) comment "逾期利率",clearrate decimal(22,4) comment "提前结清利率",loanstatus int comment "放款状态,0未放款1已放款,默认为0",returnstatus int comment "回款状态,0未结清1已结清,默认为0，2手续结清",remark varchar(1024) comment "备注",createby varchar(50) comment "建档人",createtime timestamp comment "建档时间",modifyby varchar(50) comment "修改人",modifytime timestamp comment "修改时间",loantime int comment "贷款时间",contractdate timestamp comment "合同日期",applyno varchar(50) comment "贷款申请单编号",signman varchar(50) comment "确认人",signman_md5 varchar(200) comment "脱敏确认人",status int comment "合同状态,0未签订,1已申请,2已复核,3已审核,4已打印,5已作废,6确认签订",checkdate timestamp comment "复核日期",checkman varchar(50) comment "复核人",confirmman varchar(50) comment "审核人",confirmdate timestamp comment "审核日期",checkcode varchar(50) comment "条形码",printman varchar(50) comment "打印人",printdate timestamp comment "打印日期",chksigndate timestamp comment "确认签订日期",chksignman varchar(50) comment "确认签订人",chksignman_md5 varchar(200) comment "脱敏确认签订人",contractnumber int comment "合同流水号，生成合同时需要。",auditamt decimal(15,2) comment "批核金额",auditloantime int comment "批核期限",contracttemptype varchar(50) comment "合同模板类型",zqr varchar(50) comment "债权人",zqr_md5 varchar(200) comment "脱敏债权人",dkfs varchar(50) comment "贷款方式",hkfs int comment "还款方式,1先息后本，2等本等息，3一次性还款",backflag int comment "退回标识默认0无退回1：退回2：投哪审批退回，退回时间和原因操作人等放在CANCELAPYREASON，CANCELPAYDATE，CANCELPAYBY三个字段",zqrid int comment "债权人ID",cancelapyreason string comment "撤销放款原因",cancelpaydate timestamp comment "撤销放款日期",cancelpayby varchar(20) comment "撤销放款人",stockaccount varchar(50) comment "股票帐号",stockaccount_md5 varchar(200) comment "脱敏股票帐号",customertype int comment "客户类型:1：A类、2：B类、3：C类、4：D类、5：E类",cjr varchar(50) comment "",cjrid int comment "",logisticsno varchar(50) comment "物流单号",companyno varchar(50) comment "物流公司编号,数据字典：LogisticsCompany",logisticsstatus varchar(2) comment "物流单号发送状态:默认0，0：未发送或发送失败、1：发送成功/车贷状态：0：首月不减息，1：首月减息",firstpayed decimal(15,2) comment "首付金额",firstpayed_status int comment "0表示未支付1表示已支付",paymentfailreason varchar(1024) comment "放款扣款失败原因",charge_package_id int comment "合同套餐ID",appendix_status int comment "合同附件推送状态：老流程为空或为10，资料已经推送为1，资料待推送为0，投哪审批退回待修改为-1，投哪审批通过为2",fuyou_signed int comment "富友是否已签约",loan_amt decimal(15,2) comment "借款金额",mortgage_dealing_time_flag tinyint comment "办理抵押登记时间，0:T+0,1:T+1",fee_calculate_flow_flag int comment "费用计算中心流程标志：0原流程,1新流程",rerate decimal(10,6) comment "RE费率",borrower_sign_flag int comment "借款方签署标识 0：未签署 1：已签署",cancel_node int comment "作废合同操作节点：1-合同； 2-放款",gf_bindingaccount_flag int comment "广发绑定账户标识 空或0：未绑定或老数据 1：已绑定",gps_install_fee_flag int comment "GPS安装费标志：0未收取，1收取",platform_sign_flag int comment "表示平台方签署合同是否成功，1表示成功，0表示不成功",policy_activity_id int comment "政策活动id",whether_online int comment "线上签约标志 1表示线上签约，0或者null表示线下签约") comment "合同表" partitioned by (fq_year string, fq_month string,fq_day string)

;
ALTER TABLE stg_lms.tb_risk_zmcredit_submit_data drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_risk_zmcredit_submit_data drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
SELECT host,port,username,password,database_name,concat('select ','"lms",','"v_bd_tb_lm_payment" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','lms','.','v_bd_tb_lm_payment') FROM tb_get_conn_info where host='172.30.16.250' and database_name='lms'

;
ALTER TABLE stg_lms.tb_shuipan_collateral drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
DROP TABLE IF EXISTS tmp.tb_lb_decision_result

;
CREATE TABLE IF NOT EXISTS tmp.tb_lb_decision_result(id int comment "数据序号",apply_code string comment "申请编号",next_opr_step string comment "决策结果.下一操作节点",loan_to_vaule string comment "决策结果.LoantoVaule贷款成数",ext_bureau_list string comment "决策结果.外部征信查询清单",ext_bureau_complete string comment "决策结果.外部第三方数据的完整程度",delegation string comment "决策结果.审批级别",random_num string comment "申请随机码,10组,以逗号分隔",evaluate_price string comment "评估价",base_score string comment "基础分",decision_text string comment "决策建议",reason_code string comment "风险提示编号,最大50组,以逗号分隔",sum_score string comment "评分总分",risk_grade string comment "风险等级",risk_tips string comment "风险提示，最大50组，以分隔",status string comment "调用结果,0为正常，其他为异常",last_update_time string comment "最后更新时间",call_point string comment "调用点(ADC0.进件后BFI0.面审前AFI0面审后BPV0电核前APV0电核后BUW1一审前AUW1一审后BUW2二审前AUW2二审后)",annual_pay decimal(12,2) comment "辅助决策.年审扣款",violation_pay decimal(12,2) comment "辅助决策.违章扣款",insurance_deductions decimal(12,2) comment "辅助决策.保险扣款",total_deductions decimal(12,2) comment "辅助决策.扣款合计",site_category varchar(5) comment "辅助决策.网点分类",approval_category varchar(20) comment "审批类型:人工/自动",suggest_loan_amt decimal(12,2) comment "建议RE金额",apro_max_credit_amt decimal(15,2) comment "决策结果.建议最大金额",j_insurance_deductions decimal(10,2) comment "辅助决策.交强险扣押款",s_insurance_deductions decimal(10,2) comment "辅助决策.商业险扣押款",hot_tips varchar(300) comment "决策结果.特别提示",model_ltv decimal(5,2) comment "决策结果.模型成数",model_pro varchar(60) comment "决策结果.模型建议",admittance_flag varchar(5) comment "自主进件是否准入：1是2否",repayment_mode varchar(10) comment "还款方式：1.先息后本2.等本等息4.等额本息,可能存在多个",pro_credit_amt varchar(30) comment "自主进件预授信金额,多种方式对应多个金额",res_loan_mode varchar(10) comment "贷款方式:1.押证、2.押车、3.押证押车 4 押车押证",res_antifraud_score decimal(10,4) comment "反欺诈分",res_high_value_consume varchar(5) comment "是否优质客户：1是2否",res_version varchar(20) comment "版本号",res_loan_time varchar(100) comment "还款期数，多个逗号分割",res_evapzis varchar(5) comment "辅助决策.是否满足牌照上浮,1.是2否",res_flashloanis int comment "是否主动申请闪贷,1是0否",res_reltv decimal(10,2) comment "RE成数",gps_flag varchar(5) comment "是否安装GPS：1是2否") comment "决策引擎结果表" partitioned by (fq_year string, fq_month string,fq_day string)

;
ALTER TABLE stg_lms.tb_sj_sell_result drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_lms.tb_sj_sellstatus_config drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_sj_work_order drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_lms.tb_sj_work_order_type drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_lms.tb_sj_xd_whitelist drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_lms.tb_sys_black drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_sys_black drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_sys_blackdetail drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_sys_blackdetail drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-limaoxing/20190723/155266/7914046729335879//data' SELECT * FROM atmp.ck_loan_app_report_data_pre

;
ALTER TABLE stg_lms.tb_sys_brokencheck drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_sys_brokencheck drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_sys_carbuying drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
CREATE TABLE tmp.tb_data_count_tb_lb_decision_result(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
ALTER TABLE stg_lms.tb_sys_carbuying drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_lms.tb_sys_cardealer drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_sys_channelsetting drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_sys_city drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_sys_cityzone drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_lms.tb_sys_country_car_map drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_sys_creditrating drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_lms.tb_sys_dist drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=24)

;
ALTER TABLE stg_lms.tb_sys_emp drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=24)

;
ALTER TABLE stg_lms.tb_sys_emp_his drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_sys_fqzpz drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_sys_lender drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_lms.tb_sys_org drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_lms.tb_sys_org drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_lms.tb_sys_org_his drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_sys_org_mapping drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_lms.tb_sys_org_mapping drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_sys_pawnhandle_operate drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_sys_pawnhandle_operate drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_lms.tb_sys_period drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_lms.tb_sys_period drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=06)

;
ALTER TABLE stg_lms.tb_sys_period drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_sys_pgjaudit drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_sys_pram drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_lms.tb_sys_pram drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_sys_pre_credit_line drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=10)

;
ALTER TABLE stg_lms.tb_sys_pre_credit_line drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=06)

;
ALTER TABLE stg_lms.tb_sys_pre_credit_line drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_lms.tb_sys_product drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=24)

;
ALTER TABLE stg_lms.tb_sys_province drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_sys_province drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_lms.tb_sys_province_city_map drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_sys_province_city_map drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_lms.tb_sys_riskpricing drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_sys_riskpricing drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_lms.tb_sys_site drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_lm_payment

;
ALTER TABLE stg_lms.tb_sys_site drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=23)

;
ALTER TABLE stg_lms.tb_sys_user drop if exists PARTITION  (  fq_year= 2017,fq_month= 08 , fq_day=04)

;
ALTER TABLE stg_lms.tb_sys_user drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_lms.tb_telemarketing_orderinfo drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=21)

;
ALTER TABLE stg_lms.tb_unified_dependent drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_unified_dependent drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_unified_dh_message drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_unified_dh_message drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_unified_guarantor drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
select 'ods_lms','tb_lm_paymentdetail',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_lms.tb_lm_paymentdetail

;
ALTER TABLE stg_lms.tb_unified_guarantor drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_unified_inform_disclosure drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_unified_inform_disclosure drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_zx_jxl drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_zx_jxl drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=18)

;
ALTER TABLE stg_lms.tb_zx_jxlreport drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_zx_jxlreport drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_lms.tb_zx_zzchmd drop if exists PARTITION  (  fq_year= 2017,fq_month= 07 , fq_day=17)

;
ALTER TABLE stg_lms.tb_zx_zzchmd drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_sensitive.credit_param drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=22)

;
ALTER TABLE stg_sensitive.tb_contact_s drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_touna.app_index_module drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-hadoop/20190723/155268/7914138182263045//data' select sum(account)account_q12 from ods_touna.dw_borrow WHERE  status  IN(3,73) and  FROM_UNIXTIME(cast(a.verify_time as int ),'yyyy-MM-dd') <= '2019-06-30' and  FROM_UNIXTIME(cast(a.verify_time as int ),'yyyy-MM-dd') >= '2019-01-01'

;
ALTER TABLE stg_touna.app_user_address_info drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.asa_register_user drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.borrow_company drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.borrow_user drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.borrow_user drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_account drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_lb_decision_result

;
ALTER TABLE stg_touna.dw_account drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_account_bank drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.dw_account_cash drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_account_cash drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_account_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_account_log drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_account_recharge drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_account_recharge drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_ads_follow drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_ads_follow drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_area drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_area_position drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_bbs_posts drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-hadoop/20190723/155270/7914166719038307//data' select sum(account)account_q12 from ods_touna.dw_borrow a WHERE  status  IN(3,73) and  FROM_UNIXTIME(cast(a.verify_time as int ),'yyyy-MM-dd') <= '2019-06-30' and  FROM_UNIXTIME(cast(a.verify_time as int ),'yyyy-MM-dd') >= '2019-01-01'

;
ALTER TABLE stg_touna.dw_bbs_topics drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.dw_bbs_user_info drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.dw_bbs_yessign drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.dw_bind_third_user drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_bind_third_user drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_bond drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_bond drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_bond_tflog drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_bond_tflog drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_borrow drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_borrow drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_borrow_auto_log drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_borrow_collection drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=01)

;
ALTER TABLE stg_touna.dw_borrow_collection drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_borrow_extend drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_borrow_extend drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_borrow_partner drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_borrow_repayment drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_borrow_repayment drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_borrow_tender drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_borrow_tender drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_integral_log drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.dw_linkage drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_partner_borrow drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_smart_account drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_smart_account drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_smart_account_log drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_smart_account_log drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.dw_smart_join_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_smart_join_log drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_smart_plan drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_smart_plan drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_smart_plan_ex drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_smart_plan_ex drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
INSERT OVERWRITE TABLE stg_lms.tb_lm_payment PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,applyid applyid,contractid contractid,loanno loanno,amt amt,payment payment,usefor usefor,rate rate,feerate feerate,loanfees loanfees,managefeerate managefeerate,managefees managefees,delayfeerate delayfeerate,payfee payfee,delayrate delayrate,clearrate clearrate,loandate loandate,startdate startdate,enddate enddate,balanceday balanceday,iscompound iscompound,isfees isfees,fees fees,isdeduct isdeduct,isdelayfees isdelayfees,loanstatus loanstatus,returnstatus returnstatus,remark remark,createby createby,createtime createtime,modifyby modifyby,modifytime modifytime,applyman applyman,status status,chkidcard chkidcard,chkdh chkdh,jloanid jloanid,jclearamt jclearamt,qybzj qybzj,fkkjfees fkkjfees,ysxf ysxf,ysxfamt ysxfamt,isautocreate isautocreate,actualamt actualamt,custname custname,custname_md5 custname_md5,custno custno,custno_md5 custno_md5,payamt payamt,leftamt leftamt,siteno siteno,contractno contractno,fkapplydate fkapplydate,fkapplyby fkapplyby,fkapplystatus fkapplystatus,fktimes fktimes,minpdid minpdid,canpay canpay,usdelayint usdelayint,fksubmitdate fksubmitdate,final_amt final_amt,down_amt down_amt,deposit_amt deposit_amt,touna_bid touna_bid,issueremark issueremark,issueby issueby,issuedate issuedate,issueresult issueresult,is_money_custody is_money_custody,belong_to_ratio belong_to_ratio,mort_status mort_status,pay_for_touna pay_for_touna,buckle_confirmed_status buckle_confirmed_status,buckle_confirmed_remark buckle_confirmed_remark,buckle_confirmed_time buckle_confirmed_time from tmp.tb_lm_payment WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
ALTER TABLE stg_touna.dw_smart_tender_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_smart_tender_log drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_user drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_user drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-hadoop/20190723/155273/7914226014901153//data' select apply_code,Vehicle_BuyDate,Apt_ReLoan_Type from ods_sensitive.car_decision_input_dec where data_date in  ('2019-07-18','2019-07-19','2019-07-20','2019-07-21','2019-07-22') and length(Vehicle_BuyDate)=0  and Apt_ReLoan_Type='0' limit 10

;
ALTER TABLE stg_touna.dw_user_extend drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.dw_user_extend drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.dw_user_login drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.dw_userinfo drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.fwh_user drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
alter table tmp.tb_lb_decision_result add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_lb_decision_result/2019/07/23'

;
ALTER TABLE stg_touna.phone_model drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.tn_app_burying_point drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_auto_plan drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.tn_auto_plan drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_auto_plan_investment drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
INSERT OVERWRITE TABLE stg_lms.tb_lm_contract PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,applyid applyid,contractno contractno,contractname contractname,custname custname,custname_md5 custname_md5,custno custno,custno_md5 custno_md5,addr addr,amt amt,payment payment,usefor usefor,rate rate,feerate feerate,fees fees,managefeerate managefeerate,managefees managefees,delayfeerate delayfeerate,payfee payfee,delayrate delayrate,clearrate clearrate,loanstatus loanstatus,returnstatus returnstatus,remark remark,createby createby,createtime createtime,modifyby modifyby,modifytime modifytime,loantime loantime,contractdate contractdate,applyno applyno,signman signman,signman_md5 signman_md5,status status,checkdate checkdate,checkman checkman,confirmman confirmman,confirmdate confirmdate,checkcode checkcode,printman printman,printdate printdate,chksigndate chksigndate,chksignman chksignman,chksignman_md5 chksignman_md5,contractnumber contractnumber,auditamt auditamt,auditloantime auditloantime,contracttemptype contracttemptype,zqr zqr,zqr_md5 zqr_md5,dkfs dkfs,hkfs hkfs,backflag backflag,zqrid zqrid,cancelapyreason cancelapyreason,cancelpaydate cancelpaydate,cancelpayby cancelpayby,stockaccount stockaccount,stockaccount_md5 stockaccount_md5,customertype customertype,cjr cjr,cjrid cjrid,logisticsno logisticsno,companyno companyno,logisticsstatus logisticsstatus,firstpayed firstpayed,firstpayed_status firstpayed_status,paymentfailreason paymentfailreason,charge_package_id charge_package_id,appendix_status appendix_status,fuyou_signed fuyou_signed,loan_amt loan_amt,mortgage_dealing_time_flag mortgage_dealing_time_flag,fee_calculate_flow_flag fee_calculate_flow_flag,rerate rerate,borrower_sign_flag borrower_sign_flag,cancel_node cancel_node,gf_bindingaccount_flag gf_bindingaccount_flag,gps_install_fee_flag gps_install_fee_flag,platform_sign_flag platform_sign_flag,policy_activity_id policy_activity_id,whether_online whether_online from tmp.tb_lm_contract WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
ALTER TABLE stg_touna.tn_auto_plan_investment drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_bank_card drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.tn_broker drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.tn_broker_user drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.tn_cps_commission drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='lms' AND table_name='tb_lf_return' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
ALTER TABLE stg_touna.tn_guarantee_result drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_integral_exchange_log drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.tn_lend drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.tn_lend drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_lend_log drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_lyra_account drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_lyra_account_log drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_lyra_collection drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_lyra_match_tender drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_lyra_plan drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_lyra_plan_award drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_lyra_plan_investment_award_detail drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_lyra_plan_join drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_lyra_plan_join_extend drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_lyra_product_log drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_lyra_tender_repay drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_partner_lend drop if exists PARTITION  (  fq_year= 2018,fq_month= 08 , fq_day=14)

;
ALTER TABLE stg_touna.tn_partner_lend drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_partner_settlement drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_phone_location drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.tn_plus_account drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_plus_account_log drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.tn_plus_account_log drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_plus_assets drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_plus_bond_match drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_plus_bond_repay drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_plus_match_tender drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_plus_plan drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_plus_plan_join drop if exists PARTITION  (  fq_year= 2018,fq_month= 11 , fq_day=02)

;
ALTER TABLE stg_touna.tn_plus_plan_join drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_plus_plan_join_extend drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_plus_tender_repay drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_recharge_detail drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_signup_sub drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.tn_trust_user drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=30)

;
ALTER TABLE stg_touna.tn_trust_user drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_user_first_invest drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
drop table if exists tmp.tb_data_count_tb_lf_return

;
CREATE TABLE tmp.tb_data_count_tb_lf_return(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
ALTER TABLE stg_touna.tn_user_vip_assess_output drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_user_vip_member drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=30)

;
drop table IF EXISTS  tmp.tb_lm_payment

;
ALTER TABLE stg_touna.tn_user_vip_member drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.tn_utm_manage drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=16)

;
ALTER TABLE stg_touna.twc_open_user drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_touna.user_position_record drop if exists PARTITION  (  fq_year= 2019,fq_month= 07 , fq_day=15)

;
ALTER TABLE stg_webloan.tb_con_account drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_webloan.tb_cus_login drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_webloan.tb_loa_loans drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_webloan.tb_rep_payplan drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
ALTER TABLE stg_webloan.tb_rep_recorded drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=19)

;
ALTER TABLE stg_webloan.tb_rep_repayment drop if exists PARTITION  (  fq_year= 2018,fq_month= 07 , fq_day=20)

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='lms' AND table_name='tb_lf_returndetail' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
INSERT OVERWRITE TABLE stg_lms.tb_lb_decision_result PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,apply_code apply_code,next_opr_step next_opr_step,loan_to_vaule loan_to_vaule,ext_bureau_list ext_bureau_list,ext_bureau_complete ext_bureau_complete,delegation delegation,random_num random_num,evaluate_price evaluate_price,base_score base_score,decision_text decision_text,reason_code reason_code,sum_score sum_score,risk_grade risk_grade,risk_tips risk_tips,status status,last_update_time last_update_time,call_point call_point,annual_pay annual_pay,violation_pay violation_pay,insurance_deductions insurance_deductions,total_deductions total_deductions,site_category site_category,approval_category approval_category,suggest_loan_amt suggest_loan_amt,apro_max_credit_amt apro_max_credit_amt,j_insurance_deductions j_insurance_deductions,s_insurance_deductions s_insurance_deductions,hot_tips hot_tips,model_ltv model_ltv,model_pro model_pro,admittance_flag admittance_flag,repayment_mode repayment_mode,pro_credit_amt pro_credit_amt,res_loan_mode res_loan_mode,res_antifraud_score res_antifraud_score,res_high_value_consume res_high_value_consume,res_version res_version,res_loan_time res_loan_time,res_evapzis res_evapzis,res_flashloanis res_flashloanis,res_reltv res_reltv,gps_flag gps_flag from tmp.tb_lb_decision_result WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
select 'ods_lms','tb_lb_decision_result',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_lms.tb_lb_decision_result

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='lms' AND table_name='tb_sys_emp' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
DROP TABLE IF EXISTS tmp.tb_sys_emp

;
CREATE TABLE IF NOT EXISTS tmp.tb_sys_emp(id bigint comment "记录ID",empno varchar(50) comment "员工编号",empname varchar(50) comment "姓名",empname_md5 varchar(200) comment "姓名",idcard varchar(50) comment "身份证号",idcard_md5 varchar(200) comment "身份证号",gender varchar(2) comment "性别",birthday varchar(50) comment "出生日期",duties varchar(50) comment "职务",orgid bigint comment "所属部门",tel varchar(50) comment "固话",mobile varchar(50) comment "手机",mobile_md5 varchar(50) comment "手机",hometel varchar(50) comment "家庭电话",hometel_md5 varchar(200) comment "家庭电话",officetel varchar(50) comment "办公电话",officetel_md5 varchar(200) comment "办公电话",homeaddr varchar(50) comment "家庭住址",homeaddr_md5 varchar(200) comment "家庭住址",post varchar(10) comment "邮编",email varchar(50) comment "E-mail",email_md5 varchar(200) comment "E-mail加密",issalesman bigint comment "是否业务员",issuperviser bigint comment "是否业务主管",remark varchar(200) comment "备注",createby varchar(50) comment "创建人",createtime timestamp comment "创建时间",modifyby varchar(50) comment "修改人",modifytime timestamp comment "修改时间",jobdate varchar(20) comment "入职日期",leavestatus bigint comment "离职状态，0否，1是",leavedate varchar(20) comment "离职日期",vacation bigint comment "是否休假，0否，1是",isdirect int comment "是否直销",fullmembertime timestamp comment "转正时间",higherofficetime timestamp comment "晋升时间",movetime timestamp comment "调动时间",bankaccount varchar(200) comment "户名",bankaccount_md5 varchar(200) comment "户名",bank varchar(100) comment "开户行",bankbranch varchar(250) comment "支行",bankno varchar(50) comment "账号",bankno_md5 varchar(200) comment "账号",bankprovince bigint comment "卡号所属省",bankcity bigint comment "卡号所属市",distrsequence int comment "随机分配顺序标志0:无,1:有",daibachannel int comment "是否袋吧渠道,1:是,0否,默认否",tel_md5 varchar(416) comment "") comment "员工表" partitioned by (fq_year string, fq_month string,fq_day string)

;
drop table if exists tmp.tb_data_count_tb_sys_emp

;
CREATE TABLE tmp.tb_data_count_tb_sys_emp(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
SELECT host,port,username,password,database_name,concat('select ','"lms",','"v_bd_tb_sys_emp" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','lms','.','v_bd_tb_sys_emp') FROM tb_get_conn_info where host='172.30.16.250' and database_name='lms'

;
SELECT host,port,username,password,database_name,concat('select ','"db_user_profile",','"" table_name',', count(1) data_cnt, ','"" year,','"" month,','"" day,','now() update_time ','from ','db_user_profile','.','') FROM tb_get_conn_info where host='192.168.62.250' and database_name='db_user_profile'

;
INSERT OVERWRITE TABLE ods_lms.tb_sys_emp select id id,empno empno,empname empname,empname_md5 empname_md5,idcard idcard,idcard_md5 idcard_md5,gender gender,birthday birthday,duties duties,orgid orgid,tel tel,mobile mobile,mobile_md5 mobile_md5,hometel hometel,hometel_md5 hometel_md5,officetel officetel,officetel_md5 officetel_md5,homeaddr homeaddr,homeaddr_md5 homeaddr_md5,post post,email email,email_md5 email_md5,issalesman issalesman,issuperviser issuperviser,remark remark,createby createby,createtime createtime,modifyby modifyby,modifytime modifytime,jobdate jobdate,leavestatus leavestatus,leavedate leavedate,vacation vacation,isdirect isdirect,fullmembertime fullmembertime,higherofficetime higherofficetime,movetime movetime,bankaccount bankaccount,bankaccount_md5 bankaccount_md5,bank bank,bankbranch bankbranch,bankno bankno,bankno_md5 bankno_md5,bankprovince bankprovince,bankcity bankcity,distrsequence distrsequence,daibachannel daibachannel,tel_md5 tel_md5 from tmp.tb_sys_emp WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
DROP TABLE if exists app_db.tn_money_asset_interest_dwm

;
create table if not exists app_db.tn_money_asset_interest_dwm as
select regexp_replace(current_date,'-','') stat_date,
date_type,
date_value,
plan_kind,
money_value,
money_interest_value,
asset_value,
asset_interest_value,
avail_value,
avail_capint_value
from
(
select
plan_kind,
'日' date_type,
day date_value,
day yy,
day dd,
sum(money) money_value,
sum(money_interest) money_interest_value,
sum(asset) asset_value,
sum(asset_interest) asset_interest_value,
sum(asset) - sum(money) avail_value,
sum(asset_interest) - sum(money_interest) avail_capint_value,
row_number()over(partition by plan_kind order by day) rn
from app_db.tn_capital_asset_interest
where day>current_date() and day<date_add(current_date, 365)
group by plan_kind,day
union all
select
plan_kind,
'周' date_type,
concat(year(day),'W',weekofyear(day)) date_value,
year(day) yy,
weekofyear(day) dd,
sum(money) money_value,
sum(money_interest) money_interest_value,
sum(asset) asset_value,
sum(asset_interest) asset_interest_value,
sum(asset) - sum(money) avail_value,
sum(asset_interest) - sum(money_interest) avail_capint_value,
row_number()over(partition by plan_kind order by year(day),weekofyear(day)) rn
from app_db.tn_capital_asset_interest
where day>current_date() and day<date_add(current_date, 365)
group by plan_kind,concat(year(day),'W',weekofyear(day)),year(day),weekofyear(day)
union all
select
plan_kind,
'月' date_type,
concat(year(day),'M',month(day)) date_value,
year(day) yy,
month(day) dd,
sum(money) money_value,
sum(money_interest) money_interest_value,
sum(asset) asset_value,
sum(asset_interest) asset_interest_value,
sum(asset) - sum(money) avail_value,
sum(asset_interest) - sum(money_interest) avail_capint_value,
row_number()over(partition by plan_kind order by year(day),month(day)) rn
from app_db.tn_capital_asset_interest
where day>current_date()
group by plan_kind,concat(year(day),'M',month(day)),year(day),month(day)
) ma

;
select 'ods_lms','tb_sys_emp',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_lms.tb_sys_emp

;
drop table IF EXISTS  tmp.tb_sys_emp

;
drop TABLE if exists atmp.tn_repay_tmp

;
create table atmp.tn_repay_tmp as
SELECT borrow.*,
case
when from_unixtime(cast(repayplan.repayment_yestime as int), 'yyyy-MM-dd')<from_unixtime(cast(repayplan.repayment_time as int), 'yyyy-MM-dd')
then '提前还款'
when from_unixtime(cast(repayplan.repayment_yestime as int), 'yyyy-MM-dd')=from_unixtime(cast(repayplan.repayment_time as int), 'yyyy-MM-dd')
then '按时还款'
else '未还款'
end as repaystatus,
repayplan.capital,
repayplan.repayment_time,
repayplan.repayment_yestime,
from_unixtime(cast(repayplan.repayment_time as int), 'yyyy-MM-dd') repay_date,
from_unixtime(cast(repayplan.repayment_yestime as int), 'yyyy-MM-dd') repay_yesdate,
from_unixtime(cast(repayplan.repayment_time as int), 'yyyy-MM') repay_month,
from_unixtime(cast(repayplan.repayment_yestime as int), 'yyyy-MM') repay_yesmonth
FROM
(
SELECT id,time_limit,
case
when style=0 then '等额本息'
when style=5 then '先息后本'
end as repay_type
FROM ods_touna.dw_borrow WHERE style in (0, 5) and success_time is not null and status != 5
) borrow
inner join
(
select * from ods_touna.dw_borrow_repayment
WHERE from_unixtime(cast(repayment_time as int), 'yyyy-MM')>=substr(current_date,0,7)
) repayplan
on borrow.id=repayplan.borrow_id

;
alter table tmp.tb_lf_returndetail add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_lf_returndetail/2019/07/23'

;
select 'ods_lms','tb_lf_return',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_lms.tb_lf_return

;
drop table if exists app_db.tn_plan_repayment_company

;
create table app_db.tn_plan_repayment_company
AS
select a.*, COALESCE(b.repay_preamt,0) repay_preamt from(
SELECT '月' as data_type, repay_month repay_time, time_limit, repay_type,
sum(capital) should_repay,
sum(if(repaystatus='未还款', capital, 0)) repay_amt,
sum(if(repaystatus='按时还款', capital, 0)) repay_actamt,
sum(if(repaystatus='提前还款', capital, 0)) repay_yesamt
FROM atmp.tn_repay_tmp
group by repay_type, time_limit, repay_month
) a left join
(
SELECT repay_yesmonth, time_limit, repay_type,
sum(if(repaystatus='提前还款', capital, 0)) repay_preamt
FROM atmp.tn_repay_tmp
group by repay_type, time_limit, repay_yesmonth
) b
on a.repay_type=b.repay_type and a.time_limit=b.time_limit and a.repay_time=b.repay_yesmonth
where a.should_repay>0
UNION all
select a.*, COALESCE(b.repay_preamt,0) repay_preamt from(
SELECT '日' as data_type, repay_date repay_time, time_limit, repay_type,
sum(capital) should_repay,
sum(if(repaystatus='未还款', capital, 0)) repay_amt,
sum(if(repaystatus='按时还款', capital, 0)) repay_actamt,
sum(if(repaystatus='提前还款', capital, 0)) repay_yesamt
FROM atmp.tn_repay_tmp
group by repay_type, time_limit, repay_date
) a left join
(
SELECT repay_yesdate, time_limit, repay_type,
sum(if(repaystatus='提前还款', capital, 0)) repay_preamt
FROM atmp.tn_repay_tmp
group by repay_type, time_limit, repay_yesdate
) b
on a.repay_type=b.repay_type and a.time_limit=b.time_limit and a.repay_time=b.repay_yesdate
where a.should_repay>0

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-limaoxing/20190723/155275/7914882292999443//data' SELECT * FROM atmp.ck_loan_app_report_data_pre WHERE event_type ="event_click_phoneinput"

;
drop TABLE if exists atmp.tn_partner_repay_tmp

;
create table if not exists atmp.tn_partner_repay_tmp as
SELECT t2.applyid,t2.contract_no,t2.time_limit,
case when t2.repay_type=0 then '等额本息' when t2.repay_type=5 then '先息后本' else '其他' end repay_type,
d.SHOULDCAPITAL capital,
to_date(d.ENDDATE) repay_date, to_date(d.PAYDATE) repay_yesdate,
from_unixtime(cast(d.ENDDATE as int),'yyyy-MM') repay_month, from_unixtime(cast(d.PAYDATE as int),'yyyy-MM') repay_yesmonth,
case when to_date(d.ENDDATE)>to_date(d.PAYDATE) then '提前还款'
when to_date(d.ENDDATE)=to_date(d.PAYDATE) and to_date(d.ENDDATE)<current_date() then '按时还款'
else '未还款' end as repaystatus
from (select applyid from ods_touna.tn_partner_lend where partner_id>0 ) t1
INNER JOIN ods_touna.tn_lend t2 On t1.applyid=t2.applyid
inner join ods_lms.tb_lf_return r on t1.applyid=r.applyid
inner JOIN ods_lms.tb_lf_returndetail d on r.id=d.returnid
WHERE to_date(d.enddate)>=concat(substr(current_date,0,7),"-01")

;
INSERT OVERWRITE TABLE stg_lms.tb_lf_returndetail PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,returnid returnid,phases phases,paymode paymode,paydate paydate,interesttype interesttype,amt amt,startdate startdate,enddate enddate,shouldpaydate shouldpaydate,shouldcapital shouldcapital,shouldint shouldint,shouldmanage shouldmanage,shoulddelayint shoulddelayint,shouldfirstfees shouldfirstfees,shoulddelayamt shoulddelayamt,shouldextfees shouldextfees,shoulddonamt shoulddonamt,shouldchargefee shouldchargefee,shouldcomint shouldcomint,actcapital actcapital,actint actint,actmanage actmanage,actdelayint actdelayint,actfirstfees actfirstfees,actdelayamt actdelayamt,actextfees actextfees,actdonamt actdonamt,actchargefees actchargefees,actcomint actcomint,totalshould totalshould,totalact totalact,totalreduce totalreduce,loanid loanid,shouldpenaty shouldpenaty,actpenaty actpenaty,shouldforfeit shouldforfeit,actforfeit actforfeit,syscapital syscapital,sysint sysint,sysdelayint sysdelayint,sysfirstfees sysfirstfees,sysdelayamt sysdelayamt,sysextfees sysextfees,sysdonamt sysdonamt,syschargefees syschargefees,syscomint syscomint,syspenaty syspenaty,sysforfeit sysforfeit,totalsys totalsys,sysmanage sysmanage,isdelay isdelay,shouldbzj shouldbzj,actbzj actbzj,sysbzj sysbzj,shouldtcf shouldtcf,acttcf acttcf,systcf systcf,shouldsmcsf shouldsmcsf,actsmcsf actsmcsf,syssmcsf syssmcsf,shouldtchf shouldtchf,acttchf acttchf,systchf systchf,shouldqtf shouldqtf,actqtf actqtf,sysqtf sysqtf,shoulddyf shoulddyf,actdyf actdyf,sysdyf sysdyf,shouldgpsf shouldgpsf,actgpsf actgpsf,sysgpsf sysgpsf,shouldglf shouldglf,actglf actglf,sysglf sysglf,shouldkcf shouldkcf,actkcf actkcf,syskcf syskcf,shoulddqx shoulddqx,actdqx actdqx,sysdqx sysdqx,shouldpgf shouldpgf,actpgf actpgf,syspgf syspgf,shouldxzf shouldxzf,actxzf actxzf,sysxzf sysxzf,shouldjjf shouldjjf,actjjf actjjf,sysjjf sysjjf,shouldgzf shouldgzf,actgzf actgzf,sysgzf sysgzf,shouldfxj shouldfxj,actfxj actfxj,sysfxj sysfxj,shouldspf shouldspf,actspf actspf,sysspf sysspf,shouldlsf shouldlsf,actlsf actlsf,syslsf syslsf,shouldkdf shouldkdf,actkdf actkdf,syskdf syskdf,shouldscf shouldscf,actscf actscf,sysscf sysscf,shouldjsf shouldjsf,actjsf actjsf,sysjsf sysjsf,beoverdue beoverdue,update_time update_time,shouldcarcost shouldcarcost,actcarcost actcarcost,syscarcost syscarcost,max_ove_days max_ove_days from tmp.tb_lf_returndetail WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
drop table if exists app_db.tn_plan_repayment_partner

;
create table app_db.tn_plan_repayment_partner
AS
select a.*, COALESCE(b.repay_preamt,0) repay_preamt from(
SELECT '月' as data_type, repay_month repay_time, time_limit, repay_type,
sum(capital) should_repay,
sum(if(repaystatus='未还款', capital, 0)) repay_amt,
sum(if(repaystatus='按时还款', capital, 0)) repay_actamt,
sum(if(repaystatus='提前还款', capital, 0)) repay_yesamt
FROM atmp.tn_partner_repay_tmp
group by repay_type, time_limit, repay_month
) a left join
(
SELECT repay_yesmonth, time_limit, repay_type,
sum(if(repaystatus='提前还款', capital, 0)) repay_preamt
FROM atmp.tn_partner_repay_tmp
group by repay_type, time_limit, repay_yesmonth
) b
on a.repay_type=b.repay_type and a.time_limit=b.time_limit and a.repay_time=b.repay_yesmonth
where a.should_repay>0
UNION all
select a.*, COALESCE(b.repay_preamt,0) repay_preamt from(
SELECT '日' as data_type, repay_date repay_time, time_limit, repay_type,
sum(capital) should_repay,
sum(if(repaystatus='未还款', capital, 0)) repay_amt,
sum(if(repaystatus='按时还款', capital, 0)) repay_actamt,
sum(if(repaystatus='提前还款', capital, 0)) repay_yesamt
FROM atmp.tn_partner_repay_tmp
group by repay_type, time_limit, repay_date
) a left join
(
SELECT repay_yesdate, time_limit, repay_type,
sum(if(repaystatus='提前还款', capital, 0)) repay_preamt
FROM atmp.tn_partner_repay_tmp
group by repay_type, time_limit, repay_yesdate
) b
on a.repay_type=b.repay_type and a.time_limit=b.time_limit and a.repay_time=b.repay_yesdate
where a.should_repay>0

;
drop table IF EXISTS  tmp.tb_lf_returndetail

;
SELECT * FROM app_db.tn_plan_repayment_company where data_type='日' and repay_time>=current_date()

;
SELECT * FROM app_db.tn_plan_repayment_company where data_type='日' and repay_time<current_date()

;
SELECT * FROM app_db.tn_plan_repayment_partner where data_type='日' and repay_time>=current_date()

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-limaoxing/20190723/155278/7915140143717116//data' SELECT * FROM atmp.ck_loan_app_report_data_pre WHERE event_type ="event_pagestart"

;
DROP TABLE IF EXISTS atmp.ck_loan_app_report_data_pre

;
SELECT * FROM app_db.tn_money_asset_interest_dwm where date_type='日'

;
SELECT * FROM app_db.tn_money_asset_interest_dwm where date_type='月'

;
create EXTERNAL table atmp.ck_loan_app_report_data_pre( uuid string, distinct_id string, user_id string, phone_number string, event_type string, seqtns string, field_name string, field_value string) row format delimited fields terminated by '\t' stored as textfile LOCATION '/user/etl/ck_loan_app/test'

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='desens' AND table_name='tb_area' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='desens' AND table_name='tb_bigarea' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-hadoop/20190723/155280/7915324995234714//data' select * from atmp.ck_loan_app_report_data_pre limit 10

;
DROP TABLE IF EXISTS tmp.tb_site_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tb_site_rpt(id int comment "ID",sitecode varchar(50) comment "分公司编号",sitename varchar(100) comment "分公司名称",siteaddr string comment "分公司地址",sitetel varchar(50) comment "分公司电话",status int comment "状态",orgid int comment "组织",areacode varchar(2) comment "区域编号（小贷那边维护的）",areaname varchar(200) comment "区域名称（小贷那边维护的）",opendate date comment "开业时间",siteallname varchar(200) comment "分公司全称",province varchar(250) comment "(省份)",city varchar(250) comment "(省份)",cityzone varchar(250) comment "市区",yongyou_code varchar(10) comment "用友网点编码，用于放款凭证、还款凭证等Excel导出",cityno int comment "BI系统的城市编码，与此表的CITY对应",areaid int comment "所属区域ID",superiorid int comment "上级结构id（省级经理）",department varchar(10) comment "所属业务部门") comment "分公司表" partitioned by (fq_year string, fq_month string,fq_day string)

;
CREATE TABLE tmp.tb_data_count_tb_currentdue_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
CREATE TABLE tmp.tb_data_count_tb_area(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
drop table if exists tmp.tb_data_count_tb_bigarea

;
CREATE TABLE tmp.tb_data_count_tb_bigarea(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
SELECT host,port,username,password,database_name,concat('select ','"desens",','"tb_currentdue_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','desens','.','tb_currentdue_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='desens'

;
SELECT host,port,username,password,database_name,concat('select ','"desens",','"tb_bigarea" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','desens','.','tb_bigarea') FROM tb_get_conn_info where host='172.30.17.245' and database_name='desens'

;
alter table tmp.tb_area add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_area/2019/07/23'

;
alter table tmp.tb_site_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_site_rpt/2019/07/23'

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_area

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_bigarea

;
INSERT OVERWRITE TABLE ods_bi.tb_site_rpt select id id,sitecode sitecode,sitename sitename,siteaddr siteaddr,sitetel sitetel,status status,orgid orgid,areacode areacode,areaname areaname,opendate opendate,siteallname siteallname,province province,city city,cityzone cityzone,yongyou_code yongyou_code,cityno cityno,areaid areaid,superiorid superiorid,department department from tmp.tb_site_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
INSERT OVERWRITE TABLE stg_bi.tb_area PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,areano areano,areaname areaname,arealeader arealeader,pid pid,arealeaderid arealeaderid,arealeaderempno arealeaderempno,areatype areatype,create_user create_user,create_time create_time,update_user update_user,update_time update_time,data_status data_status,issite issite from tmp.tb_area WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
select 'ods_bi','tb_area',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_area

;
drop table IF EXISTS  tmp.tb_area

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_currentdue_rpt

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='desens' AND table_name='tb_loancount_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-hadoop/20190723/155281/7915491390294461//data' select * from atmp.ck_loan_app_report_data_pre limit 10

;
DROP TABLE IF EXISTS tmp.tb_emp_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tb_emp_rpt(id int comment "员工ID，主键",empno varchar(50) comment "员工工号",empname varchar(50) comment "员工姓名",idcard varchar(100) comment "身份证号",gender varchar(2) comment "些别",birthday varchar(50) comment "生日",duties varchar(50) comment "职位",orgid int comment "所在组织ID",tel varchar(100) comment "固话",mobile varchar(100) comment "电话号码",hometel varchar(100) comment "家庭电话",officetel varchar(100) comment "办公电话",homeaddr varchar(400) comment "家庭地址",post varchar(10) comment "邮编",email varchar(50) comment "邮箱",issalesman int comment "是否业务员",issuperviser int comment "是否业务主管",remark varchar(200) comment "备注",jobdate varchar(20) comment "入职日期",leavestatus int comment "离职状态，0否，1是",leavedate varchar(20) comment "离职日期",vacation int comment "是否休假，0否，1是",isdirect int comment "是否直销 0：否 1：直销 2：呼叫中心",fullmembertime date comment "转正时间",higherofficetime date comment "晋升时间",movetime date comment "调动时间",loginname varchar(50) comment "小贷系统登录帐号",auditlevel int comment "tb_lb_audituserset") comment "员工信息表" partitioned by (fq_year string, fq_month string,fq_day string)

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-limaoxing/20190723/155283/7915515443127212//data' SELECT * FROM atmp.ck_loan_app_report_data_pre WHERE event_type ="event_click_psdlogin"

;
CREATE TABLE tmp.tb_data_count_tb_emp_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
SELECT host,port,username,password,database_name,concat('select ','"desens",','"tb_loancount_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','desens','.','tb_loancount_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='desens'

;
INSERT OVERWRITE TABLE ods_bi.tb_emp_rpt select id id,empno empno,empname empname,idcard idcard,gender gender,birthday birthday,duties duties,orgid orgid,tel tel,mobile mobile,hometel hometel,officetel officetel,homeaddr homeaddr,post post,email email,issalesman issalesman,issuperviser issuperviser,remark remark,jobdate jobdate,leavestatus leavestatus,leavedate leavedate,vacation vacation,isdirect isdirect,fullmembertime fullmembertime,higherofficetime higherofficetime,movetime movetime,loginname loginname,auditlevel auditlevel from tmp.tb_emp_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_loancount_rpt

;
select 'ods_bi','tb_emp_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_emp_rpt

;
INSERT OVERWRITE TABLE ods_bi.tb_loancount_rpt select id id,confirmdate confirmdate,custname custname,contractno contractno,sitename sitename,productytpename productytpename,paymenttypename paymenttypename,auditamt auditamt,paytype paytype,payamt payamt,managefees managefees,interest interest,kcfees kcfees,gpsfees gpsfees,dydjfees dydjfees,tcfees tcfees,dqxfees dqxfees,xzfees xzfees,pgfees pgfees,lsjzfees lsjzfees,jjfees jjfees,kdfees kdfees,gzfees gzfees,nfwfees nfwfees,r360fees r360fees,zxsxfees zxsxfees,qtfees qtfees,dkwzfees dkwzfees,sxfees sxfees,pysfees pysfees,csbzjfees csbzjfees,lybzjfees lybzjfees,nsyjfees nsyjfees,dydjbzjfees dydjbzjfees,qtdsfees qtdsfees,actualpayamt actualpayamt,balance balance,loantype loantype,orgleader orgleader,empname empname,totalphases totalphases,bankno bankno,wfyk wfyk,isdirect isdirect,sources sources,directseller directseller,sfamt sfamt,bank_sk bank_sk,bankno_sk bankno_sk,siteno siteno,applyid applyid,shouldglf shouldglf,contracttemptype contracttemptype,loan_amt loan_amt,aseatfee aseatfee,unifiedcustname unifiedcustname,unifiedcontractno unifiedcontractno,rebatefee rebatefee,dkfs dkfs,orgid orgid,gpsfees_install gpsfees_install,gpsfees_rent gpsfees_rent,usertype usertype,productname productname,productid productid,coopname coopname,orgname orgname,microstoreflag microstoreflag,contractbody contractbody,loanchannel loanchannel,returncoopname returncoopname,returntime returntime,coopcheck coopcheck,applyaudittime applyaudittime,actdbfwf actdbfwf,actfxbzf actfxbzf,agentcode agentcode,agentid agentid,agentname agentname,compositefees compositefees,corpname corpname,cursitename cursitename,departmentid departmentid,departmentname departmentname,directorgid directorgid,directorgname directorgname,empno empno,inviterduties inviterduties,rerate rerate,update_time update_time,withdrawdate withdrawdate,cyssitename cyssitename from tmp.tb_loancount_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='cognosdb' AND table_name='tb_provincemanage' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
INSERT OVERWRITE TABLE stg_bi.tb_loancount_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,confirmdate confirmdate,custname custname,contractno contractno,sitename sitename,productytpename productytpename,paymenttypename paymenttypename,auditamt auditamt,paytype paytype,payamt payamt,managefees managefees,interest interest,kcfees kcfees,gpsfees gpsfees,dydjfees dydjfees,tcfees tcfees,dqxfees dqxfees,xzfees xzfees,pgfees pgfees,lsjzfees lsjzfees,jjfees jjfees,kdfees kdfees,gzfees gzfees,nfwfees nfwfees,r360fees r360fees,zxsxfees zxsxfees,qtfees qtfees,dkwzfees dkwzfees,sxfees sxfees,pysfees pysfees,csbzjfees csbzjfees,lybzjfees lybzjfees,nsyjfees nsyjfees,dydjbzjfees dydjbzjfees,qtdsfees qtdsfees,actualpayamt actualpayamt,balance balance,loantype loantype,orgleader orgleader,empname empname,totalphases totalphases,bankno bankno,wfyk wfyk,isdirect isdirect,sources sources,directseller directseller,sfamt sfamt,bank_sk bank_sk,bankno_sk bankno_sk,siteno siteno,applyid applyid,shouldglf shouldglf,contracttemptype contracttemptype,loan_amt loan_amt,aseatfee aseatfee,unifiedcustname unifiedcustname,unifiedcontractno unifiedcontractno,rebatefee rebatefee,dkfs dkfs,orgid orgid,gpsfees_install gpsfees_install,gpsfees_rent gpsfees_rent,usertype usertype,productname productname,productid productid,coopname coopname,orgname orgname,microstoreflag microstoreflag,contractbody contractbody,loanchannel loanchannel,returncoopname returncoopname,returntime returntime,coopcheck coopcheck,applyaudittime applyaudittime,actdbfwf actdbfwf,actfxbzf actfxbzf,agentcode agentcode,agentid agentid,agentname agentname,compositefees compositefees,corpname corpname,cursitename cursitename,departmentid departmentid,departmentname departmentname,directorgid directorgid,directorgname directorgname,empno empno,inviterduties inviterduties,rerate rerate,update_time update_time,withdrawdate withdrawdate,cyssitename cyssitename from tmp.tb_loancount_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
drop table if exists tmp.tb_data_count_tb_provincemanage

;
CREATE TABLE tmp.tb_data_count_tb_provincemanage(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
SELECT host,port,username,password,database_name,concat('select ','"cognosdb",','"v_bd_tb_provincemanage" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','cognosdb','.','v_bd_tb_provincemanage') FROM tb_get_conn_info where host='172.30.17.245' and database_name='cognosdb'

;
drop table IF EXISTS  tmp.tb_loancount_rpt

;
INSERT OVERWRITE TABLE ods_bi.tb_provincemanage select id id,promanano promanano,promana promana,promanaleader promanaleader,superiorid superiorid,promanaleaderid promanaleaderid,promanaleaderno promanaleaderno,type type,create_user create_user,create_time create_time,update_user update_user,update_time update_time,data_status data_status,areaid areaid,issite issite from tmp.tb_provincemanage WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
INSERT OVERWRITE TABLE stg_bi.tb_provincemanage PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,promanano promanano,promana promana,promanaleader promanaleader,superiorid superiorid,promanaleaderid promanaleaderid,promanaleaderno promanaleaderno,type type,create_user create_user,create_time create_time,update_user update_user,update_time update_time,data_status data_status,areaid areaid,issite issite from tmp.tb_provincemanage WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
SELECT host,port,username,password,database_name,concat('select ','"cognosdb",','"v_bd_tio_finance_profit_import" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','cognosdb','.','v_bd_tio_finance_profit_import') FROM tb_get_conn_info where host='172.30.17.245' and database_name='cognosdb'

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='cognosdb' AND table_name='tb_applyaudit_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tio_finance_profit_import

;
INSERT OVERWRITE TABLE ods_bi.tio_finance_profit_import select finabranchcode finabranchcode,status status,profits profits,finabranchname finabranchname,create_time create_time,update_time update_time,statdate statdate,id id from tmp.tio_finance_profit_import WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
SELECT host,port,username,password,database_name,concat('select ','"cognosdb",','"v_bd_tb_applyaudit_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','cognosdb','.','v_bd_tb_applyaudit_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='cognosdb'

;
INSERT OVERWRITE TABLE stg_bi.tio_finance_profit_import PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select finabranchcode finabranchcode,status status,profits profits,finabranchname finabranchname,create_time create_time,update_time update_time,statdate statdate,id id from tmp.tio_finance_profit_import WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='cognosdb' AND table_name='tb_contract_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
INSERT OVERWRITE TABLE ods_bi.tb_applyaudit_rpt select id id,applyid applyid,auditlevel auditlevel,serialnumber serialnumber,auditamt auditamt,recamt recamt,phases phases,rate rate,managefees managefees,fee fee,auditresult auditresult,suggestion suggestion,auditstatus auditstatus,auditby auditby,audittime audittime,backflow backflow,recid recid,backflowid backflowid,deratio deratio,drratio drratio,llratio llratio,contracttemptype contracttemptype,dkfs dkfs,hkfs hkfs,producttype producttype from tmp.tb_applyaudit_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
DROP TABLE IF EXISTS tmp.tb_contract_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tb_contract_rpt(id bigint comment "主键ID",applyid bigint comment "申请ID",loanstatus int comment "贷款申请ID",returnstatus int comment "放款状态,0 未放款 1 已放款,默认为0",status int comment "合同状态,0未签订,1已申请,2已复核,3已审核,4已打印,5已作废,6确认签订",chksigndate date comment "确认签订日期",contractno varchar(50) comment "合同编号",feerate double comment "未知",managefeerate double comment "管理费率",auditamt double comment "批核金额",rate double comment "贷款利率",chksignman varchar(50) comment "确认签订人",hkfs int comment "还款方式,1先息后本，2等本等息，3一次性还款",auditloantime int comment "批核期限",dkfs varchar(50) comment "贷款方式",amt decimal(15,2) comment "贷款金额",totalfee decimal(15,2) comment "其他费用总额",sfamt decimal(10,0) comment "tb_lm_otherfee--服务费",zqr varchar(50) comment "债权人",cjr varchar(20) comment "出借人",contractdate date comment "合同日期,合同取消保存的时间",loan_amt decimal(15,2) comment "借款金额",firstpayed_status int comment "0 表示未支付 1 表示已支付，针对车贷，1表示返点，0表示不返点",rerate decimal(10,6) comment "RE费率",servicerate decimal(10,6) comment "360贷信息服务费率") comment "VIEW" partitioned by (fq_year string, fq_month string,fq_day string)

;
CREATE TABLE tmp.tb_data_count_tb_contract_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
SELECT host,port,username,password,database_name,concat('select ','"cognosdb",','"v_bd_tb_contract_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','cognosdb','.','v_bd_tb_contract_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='cognosdb'

;
select 'ods_bi','tb_applyaudit_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_applyaudit_rpt

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_contract_rpt

;
drop table IF EXISTS  tmp.tb_applyaudit_rpt

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='cognosdb' AND table_name='tb_return_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
select 'ods_bi','tb_site_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_site_rpt

;
select 'ods_bi','tb_contract_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_contract_rpt

;
drop table IF EXISTS  tmp.tb_site_rpt

;
CREATE TABLE tmp.tb_data_count_tb_return_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='desens' AND table_name='tb_currentprog_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='cognosdb' AND table_name='tb_custinfo_rpt' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
drop table if exists tmp.tb_data_count_tb_currentprog_rpt

;
CREATE TABLE tmp.tb_data_count_tb_currentprog_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
drop table if exists tmp.tb_data_count_tb_custinfo_rpt

;
CREATE TABLE tmp.tb_data_count_tb_custinfo_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
SELECT ip_src,table_name_src,concat('select ',concat_ws(',',collect_set(concat(case when is_encrypt in (2,3) then '"***" ' else concat('t.',column_name_src) end,' `',column_name,'`'))),' from ',database_src,'.',table_name_src,' t where 1=1') select_sqoop,concat('DROP TABLE IF EXISTS tmp.',TABLE_NAME) sql_drop_tmp,concat('CREATE TABLE IF NOT EXISTS tmp.',TABLE_NAME,'(',concat_ws(',',collect_set(concat(COLUMN_NAME,' ',column_datatype,' comment "',column_comment,'"'))),') comment "',table_comment,'" partitioned by (fq_year string, fq_month string,fq_day string)') sql_create_tmp,concat('INSERT OVERWRITE TABLE ods_',database_des,'.',table_name,' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_ods,concat('INSERT OVERWRITE TABLE stg_',database_des,'.',table_name,' PARTITION (fq_year=$','{YEAR} , fq_month=$','{MONTH} ,fq_day= $','{DAY})',' select ',concat_ws(',',collect_set(concat(case when is_encrypt=4 then '"***"' when is_encrypt=5 then regexp_replace('tbd_enc(column_name)','column_name',COLUMN_NAME) else COLUMN_NAME end,' ',COLUMN_NAME))),' from tmp.',table_name,' WHERE fq_year=$','{YEAR} and fq_month=$','{MONTH} and fq_day=$','{DAY}') sql_insert_stg,concat('ods_',database_des) database_des FROM tb_comm_load_tables WHERE database_src='lms' AND table_name='tb_lb_pawncarsituation' GROUP BY ip_src,database_des,database_src,table_name,table_name_src,table_comment

;
alter table tmp.tb_currentdue_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_currentdue_rpt/2019/07/23'

;
INSERT OVERWRITE TABLE ods_bi.tb_currentdue_rpt select id id,contractno contractno,custname custname,sitecode sitecode,sitename sitename,loancode loancode,loantype loantype,loandate loandate,shouldcapital shouldcapital,recentpaydate recentpaydate,shouldamt shouldamt,currentduedays currentduedays,overduepayment overduepayment,compositefees compositefees,shoulddueamt shoulddueamt,returnamt returnamt,noreturnamt noreturnamt,qybzj qybzj,overduecapital overduecapital,phoneno phoneno,bank bank,bankno bankno,remark remark,stadate stadate,urgeman urgeman,situation situation,custstatus custstatus,carstatus carstatus,gpsstatus gpsstatus,status status,isdirect isdirect,sources sources,overdueint overdueint,idcard idcard,instatus instatus,totalphases totalphases,hkfs hkfs,payphases payphases,applyid applyid,carno carno,salesman salesman,teamleader teamleader,auditamt auditamt,unifiedcustname unifiedcustname,unifiedcontractno unifiedcontractno,orgid orgid,usertype usertype,productid productid,productname productname,coopname coopname,orgname orgname,microstoreflag microstoreflag,contractbody contractbody,loanchannel loanchannel,returncoopname returncoopname,applyaudittime applyaudittime,actfxbzf actfxbzf,withdrawdate withdrawdate,cursitename cursitename,fileno fileno,directorgid directorgid,directorgname directorgname,rerate rerate,corpname corpname,infoservicefee infoservicefee,empno empno,agentid agentid,agentcode agentcode,agentname agentname,inviterduties inviterduties,departmentid departmentid,departmentname departmentname,dkfs dkfs,update_time update_time,cyssitename cyssitename from tmp.tb_currentdue_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
CREATE TABLE tmp.tb_data_count_tb_lb_pawncarsituation(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_custinfo_rpt

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_currentprog_rpt

;
INSERT OVERWRITE TABLE stg_bi.tb_currentdue_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,contractno contractno,custname custname,sitecode sitecode,sitename sitename,loancode loancode,loantype loantype,loandate loandate,shouldcapital shouldcapital,recentpaydate recentpaydate,shouldamt shouldamt,currentduedays currentduedays,overduepayment overduepayment,compositefees compositefees,shoulddueamt shoulddueamt,returnamt returnamt,noreturnamt noreturnamt,qybzj qybzj,overduecapital overduecapital,phoneno phoneno,bank bank,bankno bankno,remark remark,stadate stadate,urgeman urgeman,situation situation,custstatus custstatus,carstatus carstatus,gpsstatus gpsstatus,status status,isdirect isdirect,sources sources,overdueint overdueint,idcard idcard,instatus instatus,totalphases totalphases,hkfs hkfs,payphases payphases,applyid applyid,carno carno,salesman salesman,teamleader teamleader,auditamt auditamt,unifiedcustname unifiedcustname,unifiedcontractno unifiedcontractno,orgid orgid,usertype usertype,productid productid,productname productname,coopname coopname,orgname orgname,microstoreflag microstoreflag,contractbody contractbody,loanchannel loanchannel,returncoopname returncoopname,applyaudittime applyaudittime,actfxbzf actfxbzf,withdrawdate withdrawdate,cursitename cursitename,fileno fileno,directorgid directorgid,directorgname directorgname,rerate rerate,corpname corpname,infoservicefee infoservicefee,empno empno,agentid agentid,agentcode agentcode,agentname agentname,inviterduties inviterduties,departmentid departmentid,departmentname departmentname,dkfs dkfs,update_time update_time,cyssitename cyssitename from tmp.tb_currentdue_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
alter table tmp.tb_lb_pawncarsituation add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_lb_pawncarsituation/2019/07/23'

;
INSERT OVERWRITE TABLE ods_lms.tb_lb_pawncarsituation select drivingdistance drivingdistance,pawn_car_in_time pawn_car_in_time,pawn_car_out_time pawn_car_out_time,follow_up_situation follow_up_situation,manager manager,managerpartner managerpartner,managergroup managergroup,garagetype garagetype,gpstype gpstype,remaincapital remaincapital,province province,carsituation carsituation,gpsinstall gpsinstall,id id,createby createby,handbystr_md5 handbystr_md5,scoverduedays scoverduedays,city city,pawntype pawntype,applyid applyid,drivflag drivflag,handletime handletime,contractno contractno,remark remark,carstatus carstatus,gpsstatus gpsstatus,pawnsituation pawnsituation,addressdetail addressdetail,createtime createtime,handleby handleby,sparekeynum sparekeynum,cityzone cityzone,createbystr createbystr,pawncargroup pawncargroup,protocolimgpath protocolimgpath,wwbaojia wwbaojia from tmp.tb_lb_pawncarsituation WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
select 'ods_bi','tb_custinfo_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_custinfo_rpt

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-ouyangke/20190723/155285/7916349011226633//data' select data FROM dm_charge.origin_charging_method_detail WHERE data_date >= '2019-06-01' and data_date <= '2019-06-31' and get_json_object(data,'$.method') in ("pengyuan.education") and get_json_object(data,'$.code')="200" and get_json_object(data,'$.src')=0 limit 1

;
INSERT OVERWRITE TABLE stg_lms.tb_lb_pawncarsituation PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select drivingdistance drivingdistance,pawn_car_in_time pawn_car_in_time,pawn_car_out_time pawn_car_out_time,follow_up_situation follow_up_situation,manager manager,managerpartner managerpartner,managergroup managergroup,garagetype garagetype,gpstype gpstype,remaincapital remaincapital,province province,carsituation carsituation,gpsinstall gpsinstall,id id,createby createby,handbystr_md5 handbystr_md5,scoverduedays scoverduedays,city city,pawntype pawntype,applyid applyid,drivflag drivflag,handletime handletime,contractno contractno,remark remark,carstatus carstatus,gpsstatus gpsstatus,pawnsituation pawnsituation,addressdetail addressdetail,createtime createtime,handleby handleby,sparekeynum sparekeynum,cityzone cityzone,createbystr createbystr,pawncargroup pawncargroup,protocolimgpath protocolimgpath,wwbaojia wwbaojia from tmp.tb_lb_pawncarsituation WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
alter table tmp.tb_return_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_return_rpt/2019/07/23'

;
INSERT OVERWRITE TABLE ods_bi.tb_return_rpt select id id,applyid applyid,loanid loanid,payphases payphases,totalphases totalphases,status status,paydate paydate,enddate enddate,shoulddelayint shoulddelayint,actcapital actcapital,amt amt,shouldpaydate shouldpaydate,shouldcapital shouldcapital,isdelay isdelay,shouldint shouldint,actmanage actmanage,actdelayint actdelayint,acttcf acttcf,actdelayamt actdelayamt,actsmcsf actsmcsf,actgpsf actgpsf,acttchf acttchf,actscf actscf,actkdf actkdf,actint actint,shouldglf shouldglf,shouldtcf shouldtcf,shoulddelayamt shoulddelayamt,shouldsmcsf shouldsmcsf,shouldgpsf shouldgpsf,shouldtchf shouldtchf,shouldscf shouldscf,shouldkdf shouldkdf,shouldmanage shouldmanage,paymode paymode,beoverdue beoverdue,totalamt totalamt,totalshould totalshould,totalact totalact,totalreddelayint totalreddelayint,shouldkcf shouldkcf,actkcf actkcf,shoulddyf shoulddyf,actdyf actdyf,shoulddqx shoulddqx,actdqx actdqx,shouldxzf shouldxzf,actxzf actxzf,shouldpgf shouldpgf,actpgf actpgf,shouldspf shouldspf,actspf actspf,shouldlsf shouldlsf,actlsf actlsf,shouldjjf shouldjjf,actjjf actjjf,shouldgzf shouldgzf,actgzf actgzf,shouldfirstfees shouldfirstfees,actfirstfees actfirstfees,shouldqtf shouldqtf,actqtf actqtf,shouldfxj shouldfxj,actfxj actfxj,shouldpenaty shouldpenaty,actpenaty actpenaty,update_time update_time,totalredforfeit1 totalredforfeit1,shouldzqfxj shouldzqfxj,actzqfxj actzqfxj,returndetailid returndetailid,shouldcarcost shouldcarcost,actcarcost actcarcost,bankaccount bankaccount,actinfoservicefee actinfoservicefee,shouldinfoservicefee shouldinfoservicefee from tmp.tb_return_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
DROP TABLE IF EXISTS tmp.tb_org_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tb_org_rpt(id int comment "组织ID，主键",orgno varchar(50) comment "组织编号",orgname varchar(100) comment "组织名称",orgleader varchar(50) comment "组织负责人",pid int comment "父ID",issite int comment "是否网点",isaudit int comment "是否审核",orgleaderid int comment "组织负责人ID",sitecode varchar(50) comment "分公司编号",modifyby varchar(50) comment "修改人",modifytime timestamp comment "修改时间",status int comment "是否有效：0无效，1有效",micro_store_flag int comment "是否微门店 0:否,1:是,默认为0否") comment "组织机构表" partitioned by (fq_year string, fq_month string,fq_day string)

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-hadoop/20190723/155286/7916422847586733//data' select apply_code,Vehicle_BuyDate,Apt_ReLoan_Type,data_date from ods_sensitive.car_decision_input_dec where data_date >='2019-07-01' and length(Vehicle_BuyDate)=0  and Apt_ReLoan_Type='0' limit 100

;
SELECT host,port,username,password,database_name,concat('select ','"desens",','"tb_org_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','desens','.','tb_org_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='desens'

;
DROP TABLE IF EXISTS tmp.tbl_basic_info_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tbl_basic_info_rpt(id bigint comment "主键ID",stadate date comment "数据日期",applycode varchar(100) comment "申请编号",applyid bigint comment "申请id",org_contractno varchar(200) comment "机构合同号",applydate date comment "授信申请时间",passdate date comment "授信通过时间",amount decimal(15,2) comment "申请额度",loantime int comment "申请期限",lastauditresult varchar(50) comment "审批结论",creditlimit decimal(15,2) comment "授信额度",loandate date comment "提现时间",withdrawdate date comment "满标时间",contractno varchar(50) comment "合同号",loanamt decimal(15,2) comment "合同金额",totalphases int comment "总期数",hkfs varchar(50) comment "还款方式",dkfs varchar(50) comment "借款方式",producttype varchar(50) comment "产品类型",producttype2 varchar(50) comment "二级产品",producttype3 varchar(50) comment "三级产品",orgname varchar(100) comment "机构名称",orgproduct varchar(100) comment "机构产品细分",busi_license varchar(50) comment "营业执照号",qybzj decimal(15,2) comment "风险处置金",buymode varchar(50) comment "车辆购买方式",sitename varchar(50) comment "服务商",cityname varchar(20) comment "城市",provincename varchar(20) comment "省",custname varchar(50) comment "客户姓名",age int comment "年龄",industry varchar(50) comment "行业类别",salary decimal(15,2) comment "每月收入",pgj varchar(50) comment "评估价",purpose varchar(50) comment "贷款用途",education varchar(50) comment "教育程度",marry varchar(50) comment "婚姻状况",newcustflag varchar(10) comment "是否新客户",update_time timestamp comment "更新时间",credit_id bigint comment "授信ID",credit_code varchar(100) comment "授信CODE") comment "基础信息表" partitioned by (fq_year string, fq_month string,fq_day string)

;
insert overwrite table dw_car.dw_car_cust_loan_repay_info
select
cust.docno_md5 dw_cust_id,
cust.id cust_id,
cust.custname cust_name,
cust.custname_md5 custname_md5,
cust.mobile cust_phone,
cust.mobile_md5 cust_phone_md5,
cust.docno cust_idcard,
cust.docno_md5 cust_idcard_md5,
re.applyid apply_id,
re.APPLYDATE,
re.loanid,
re.loanno,
re.CONTRACTNO,
red.returnid,
red.id,
pawn.pawntype,
re.TOTALPHASES,
re.PAYPHASES,
red.paymode,
red.PAYDATE,
re.status,
red.interesttype,
red.amt,
red.startdate,
red.enddate,
red.shouldpaydate,
red.shouldcapital,
red.shouldint,
red.shouldmanage,
red.shoulddelayint,
red.shouldfirstfees,
red.shoulddelayamt,
red.shouldextfees,
red.shoulddonamt,
red.shouldchargefee,
red.shouldcomint,
red.actcapital,
red.actint,
red.actmanage,
red.actdelayint,
red.actfirstfees,
red.actdelayamt,
red.actextfees,
red.actdonamt,
red.actchargefees,
red.actcomint,
red.totalshould,
red.totalact,
red.totalreduce,
red.shouldpenaty,
red.actpenaty,
red.shouldforfeit,
red.actforfeit,
red.syscapital,
red.sysint,
red.sysdelayint,
red.sysfirstfees,
red.sysdelayamt,
red.sysextfees,
red.sysdonamt,
red.syschargefees,
red.syscomint,
red.syspenaty,
red.sysforfeit,
red.totalsys,
red.sysmanage,
red.isdelay,
red.shouldbzj,
red.actbzj,
red.sysbzj,
red.shouldtcf,
red.acttcf,
red.systcf,
red.shouldsmcsf,
red.actsmcsf,
red.syssmcsf,
red.shouldtchf,
red.acttchf,
red.systchf,
red.shouldqtf,
red.actqtf,
red.sysqtf,
red.shoulddyf,
red.actdyf,
red.sysdyf,
red.shouldgpsf,
red.actgpsf,
red.sysgpsf,
red.shouldglf,
red.actglf,
red.sysglf,
red.shouldkcf,
red.actkcf,
red.syskcf,
red.shoulddqx,
red.actdqx,
red.sysdqx,
red.shouldpgf,
red.actpgf,
red.syspgf,
red.shouldxzf,
red.actxzf,
red.sysxzf,
red.shouldjjf,
red.actjjf,
red.sysjjf,
red.shouldgzf,
red.actgzf,
red.sysgzf,
red.shouldfxj,
red.actfxj,
red.sysfxj,
red.shouldspf,
red.actspf,
red.sysspf,
red.shouldlsf,
red.actlsf,
red.syslsf,
red.shouldkdf,
red.actkdf,
red.syskdf,
red.shouldscf,
red.actscf,
red.sysscf,
red.shouldjsf,
red.actjsf,
red.sysjsf,
red.beoverdue,
red.update_time,
red.shouldcarcost,
red.actcarcost,
red.syscarcost,
re.totalredcapital,
re.totalredint,
re.totalredmanage,
re.totalreddelayint,
re.totalredcomint,
re.totalredextfees,
re.totalredcarcost,
from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') update_date
FROM ods_lms.tb_lf_return re
left join ods_lms.tb_lf_returndetail red on RE.id=red.returnid
left join ods_lms.tb_lb_custinfo cust on re.applyid=cust.applyid
left join (select distinct applyid,pawntype from ods_lms.tb_lb_pawncarsituation) pawn
on re.applyid = pawn.applyid

;
INSERT OVERWRITE TABLE stg_bi.tb_return_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,applyid applyid,loanid loanid,payphases payphases,totalphases totalphases,status status,paydate paydate,enddate enddate,shoulddelayint shoulddelayint,actcapital actcapital,amt amt,shouldpaydate shouldpaydate,shouldcapital shouldcapital,isdelay isdelay,shouldint shouldint,actmanage actmanage,actdelayint actdelayint,acttcf acttcf,actdelayamt actdelayamt,actsmcsf actsmcsf,actgpsf actgpsf,acttchf acttchf,actscf actscf,actkdf actkdf,actint actint,shouldglf shouldglf,shouldtcf shouldtcf,shoulddelayamt shoulddelayamt,shouldsmcsf shouldsmcsf,shouldgpsf shouldgpsf,shouldtchf shouldtchf,shouldscf shouldscf,shouldkdf shouldkdf,shouldmanage shouldmanage,paymode paymode,beoverdue beoverdue,totalamt totalamt,totalshould totalshould,totalact totalact,totalreddelayint totalreddelayint,shouldkcf shouldkcf,actkcf actkcf,shoulddyf shoulddyf,actdyf actdyf,shoulddqx shoulddqx,actdqx actdqx,shouldxzf shouldxzf,actxzf actxzf,shouldpgf shouldpgf,actpgf actpgf,shouldspf shouldspf,actspf actspf,shouldlsf shouldlsf,actlsf actlsf,shouldjjf shouldjjf,actjjf actjjf,shouldgzf shouldgzf,actgzf actgzf,shouldfirstfees shouldfirstfees,actfirstfees actfirstfees,shouldqtf shouldqtf,actqtf actqtf,shouldfxj shouldfxj,actfxj actfxj,shouldpenaty shouldpenaty,actpenaty actpenaty,update_time update_time,totalredforfeit1 totalredforfeit1,shouldzqfxj shouldzqfxj,actzqfxj actzqfxj,returndetailid returndetailid,shouldcarcost shouldcarcost,actcarcost actcarcost,bankaccount bankaccount,actinfoservicefee actinfoservicefee,shouldinfoservicefee shouldinfoservicefee from tmp.tb_return_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
SELECT host,port,username,password,database_name,concat('select ','"warehouse",','"tbl_basic_info_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','warehouse','.','tbl_basic_info_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='warehouse'

;
drop  table  if exists tmp.tio_evnt_ckapp_contacts_list

;

create table tmp.tio_evnt_ckapp_contacts_list as 
SELECT user_id,phone_number,contacts_list,imei,event_type FROM  (
select user_id,phone_number,field_value contacts_list,event_type  from
(select
 -- if(length(phone_number)>13,tbd_dec(phone_number),phone_number) phone_number,
phone_number,
user_id,
seqtns,event_type,field_value,row_number() over(partition by phone_number order by
seqtns DESC) rownum
 from ods_sensitive.ck_loan_app_report_data where event_type="evnt_ckapp_contacts_list_rp" and   field_name="contacts_list" and ds='20190722') cust
where rownum=1) con
left JOIN
(select phone_number phone_number1, field_value imei FROM
	(select
phone_number,
seqtns,field_value,row_number() over(partition by phone_number order by
seqtns DESC) rownum
 from ods_sensitive.ck_loan_app_report_data where  event_type="evnt_ckapp_contacts_list_rp" and field_name="imei" and ds='20190722' ) cust
	where rownum=1)  imei
 on con.phone_number=imei.phone_number1


;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_org_rpt

;
select 'dw_org','dw_org_structure_level_info',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dw_org.dw_org_structure_level_info

;
select 'ods_bi','tb_org_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_org_rpt

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tbl_basic_info_rpt

;

select user_id,phone_number,contacts_list,imei,event_type FROM tmp.tio_evnt_ckapp_contacts_list


;
insert overwrite table dw_org.dw_org_organization_info
select
id,
orgno,
orgname,
bsns_unit.bu_name,
bigarea.bigarea_name,
prov.province_name,
orgleader,
orgleadertel,
fax,
tel,
addr,
post,
pid,
issite,
isaudit,
remark,
createby,
createtime,
status,
from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') update_date
from ods_lms.tb_sys_org o
left join (
select distinct org_id,bu_name from (
SELECT distinct bu_id org_id,bu_name FROM dw_org.dw_org_structure_level_info
union all
SELECT distinct prov_area_id org_id,bu_name FROM dw_org.dw_org_structure_level_info
union all
SELECT distinct province_id org_id,bu_name FROM dw_org.dw_org_structure_level_info
union all
SELECT distinct site_id org_id,bu_name FROM dw_org.dw_org_structure_level_info
union all
SELECT distinct group_id org_id,bu_name FROM dw_org.dw_org_structure_level_info
union all
SELECT distinct org_id org_id,bu_name FROM dw_org.dw_org_structure_level_info
) a
) bsns_unit on o.id=bsns_unit.org_id
left join (
select distinct org_id,bigarea_name from (
SELECT distinct prov_area_id org_id,bigarea_name bigarea_name FROM dw_org.dw_org_structure_level_info
union all
SELECT distinct province_id org_id,bigarea_name bigarea_name FROM dw_org.dw_org_structure_level_info
union all
SELECT distinct site_id org_id,bigarea_name bigarea_name FROM dw_org.dw_org_structure_level_info
union all
SELECT distinct group_id org_id,bigarea_name bigarea_name FROM dw_org.dw_org_structure_level_info
union all
SELECT distinct org_id org_id,bigarea_name bigarea_name FROM dw_org.dw_org_structure_level_info
) a
) bigarea on o.id=bigarea.org_id
left join (
select distinct org_id,province_name from (
SELECT distinct province_id org_id,province_name province_name FROM dw_org.dw_org_structure_level_info
union all
SELECT distinct site_id org_id,province_name province_name FROM dw_org.dw_org_structure_level_info
union all
SELECT distinct group_id org_id,province_name province_name FROM dw_org.dw_org_structure_level_info
union all
SELECT distinct org_id org_id,province_name province_name FROM dw_org.dw_org_structure_level_info
) a
) prov on o.id=prov.org_id

;
insert overwrite table dw_org.dw_org_employee_info
SELECT
e.id emp_id,
e.EMPNO emp_no,
e.EMPNAME emp_name,
e.gender emp_sex,
0 emp_age,
e.idcard emp_id_card,
bu.bu_id emp_bsns_unit,
bigarea.bigarea_id emp_bigarea,
prov_area.prov_area_id emp_prov_area,
s.province emp_province,
s.sitecode emp_site,
e.orgid emp_group_id,
o.orgname emp_group,
e.leavestatus is_leave,
e.tel emp_tel,
e.mobile emp_mobile,
e.hometel emp_home_tel,
e.officetel emp_office_tel,
e.homeaddr emp_home_addr,
e.post emp_post_code,
e.email e_mail,
e.issalesman is_salesman,
e.issuperviser is_superviser,
0 is_outer_org,
e.duties emp_duty,
o.orgleader direct_leader_no,
e.jobdate emp_join_date,
to_date(regexp_replace(e.leavedate,'/','-')) emp_leave_date,
e.isdirect special_site_flag,
e.createby create_by,
e.createtime create_time,
e.modifyby update_by,
e.modifytime update_time,
from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') update_date
FROM
ods_lms.tb_sys_emp e
left join ods_lms.tb_sys_org o on e.orgid=o.id
left join ods_lms.tb_sys_site s on o.sitecode=s.sitecode
left join (
select distinct org_id,bu_id,bu_name from (
SELECT bu_id org_id,bu_id,bu_name bu_name FROM dw_org.dw_org_structure_level_info
union all
SELECT bigarea_id org_id,bu_id,bu_name bu_name FROM dw_org.dw_org_structure_level_info
union all
SELECT prov_area_id org_id,bu_id,bu_name bu_name FROM dw_org.dw_org_structure_level_info
union all
SELECT province_id org_id,bu_id,bu_name bu_name FROM dw_org.dw_org_structure_level_info
union all
SELECT site_id org_id,bu_id,bu_name bu_name FROM dw_org.dw_org_structure_level_info
union all
SELECT group_id org_id,bu_id,bu_name bu_name FROM dw_org.dw_org_structure_level_info
union all
SELECT org_id org_id,bu_id,bu_name bu_name FROM dw_org.dw_org_structure_level_info
) a
) bu on e.orgid=bu.org_id
left join (
select distinct org_id,bigarea_id,bigarea_name from (
SELECT bigarea_id org_id,bigarea_id,bigarea_name bigarea_name FROM dw_org.dw_org_structure_level_info
union all
SELECT prov_area_id org_id,bigarea_id,bigarea_name bigarea_name FROM dw_org.dw_org_structure_level_info
union all
SELECT province_id org_id,bigarea_id,bigarea_name bigarea_name FROM dw_org.dw_org_structure_level_info
union all
SELECT site_id org_id,bigarea_id,bigarea_name bigarea_name FROM dw_org.dw_org_structure_level_info
union all
SELECT group_id org_id,bigarea_id,bigarea_name bigarea_name FROM dw_org.dw_org_structure_level_info
union all
SELECT org_id org_id,bigarea_id,bigarea_name bigarea_name FROM dw_org.dw_org_structure_level_info
) a
) bigarea on e.orgid=bigarea.org_id
left join (
select distinct org_id,prov_area_id,prov_area_name from (
SELECT prov_area_id org_id,prov_area_id,prov_area_name prov_area_name FROM dw_org.dw_org_structure_level_info
union all
SELECT province_id org_id,
case prov_area_id when '1316' then province_id else prov_area_id end prov_area_id,
case prov_area_name when '廖庆福区域' then province_name else prov_area_name end prov_area_name
FROM dw_org.dw_org_structure_level_info
union all
SELECT site_id org_id,
case prov_area_id when '1316' then province_id else prov_area_id end prov_area_id,
case prov_area_name when '廖庆福区域' then province_name else prov_area_name end prov_area_name
FROM dw_org.dw_org_structure_level_info
union all
SELECT group_id org_id,
case prov_area_id when '1316' then province_id else prov_area_id end prov_area_id,
case prov_area_name when '廖庆福区域' then province_name else prov_area_name end prov_area_name
FROM dw_org.dw_org_structure_level_info
union all
SELECT org_id org_id,
case prov_area_id when '1316' then province_id else prov_area_id end prov_area_id,
case prov_area_name when '廖庆福区域' then province_name else prov_area_name end prov_area_name
FROM dw_org.dw_org_structure_level_info
) a
) prov_area on e.orgid=prov_area.org_id
union all
select
'WJ99999' emp_id ,
'WJ99999' emp_no ,
'未能获取姓名' emp_name ,
null emp_sex ,
null emp_age ,
null emp_id_card ,
null emp_bsns_unit ,
null emp_bigarea ,
null emp_prov_area ,
null emp_province ,
null emp_site ,
null emp_group_id ,
null emp_group ,
null is_leave ,
null emp_tel ,
null emp_mobile ,
null emp_home_tel ,
null emp_office_tel ,
null emp_home_addr ,
null emp_post_code ,
null e_mail ,
null is_salesman ,
null is_superviser ,
null is_outer_org ,
null emp_duty ,
null direct_leader_no ,
null emp_join_date ,
null emp_leave_date ,
null special_site_flag ,
null create_by ,
null create_time ,
null update_by ,
null update_time,
from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') update_date
from ods_lms.tb_sys_emp e where e.empno='WJ10001'

;
load data local inpath '/data/data_parser/decision_json_parse/contact_list/tb_report_data_contact_list_20190722.txt' overwrite into table provider_api_db.tio_evnt_ckapp_contacts_list PARTITION (data_date='20190722')

;
DROP TABLE IF EXISTS tmp.tbl_return_detail_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tbl_return_detail_rpt(id bigint comment "主键ID",stadate date comment "数据日期",applycode varchar(100) comment "申请编号",applyid bigint comment "申请id",contractno varchar(50) comment "合同号",beforephases int comment "原期数",hkfs varchar(50) comment "还款方式",returnstatus varchar(16) comment "回款类型",totalphases int comment "总期数",loanamt decimal(16,2) comment "合同金额",payphases int comment "当前期数",shouldpaydate date comment "应还款日期",paydate date comment "实还款日期",totalshould decimal(15,2) comment "总应还",shouldcapital decimal(15,2) comment "应还本金",shouldint decimal(15,2) comment "应还利息",shouldmanage decimal(15,2) comment "应还管理费",shoulddelayint decimal(15,2) comment "应还逾期利息",shouldotherfee decimal(15,2) comment "应还其它费用",totalact decimal(15,2) comment "总实还",actcapital decimal(15,2) comment "实还本金",actint decimal(15,2) comment "实还利息",actmanage decimal(15,2) comment "实还管理费",actdelayint decimal(15,2) comment "实还逾期利息",actotherfee decimal(15,2) comment "实还其它费用",update_time timestamp comment "更新时间",credit_id bigint comment "授信ID",credit_code varchar(100) comment "授信CODE") comment "回款流水表" partitioned by (fq_year string, fq_month string,fq_day string)

;
SELECT host,port,username,password,database_name,concat('select ','"warehouse",','"tbl_return_detail_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','warehouse','.','tbl_return_detail_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='warehouse'

;
DROP TABLE IF EXISTS tmp.tb_applyinfo_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tb_applyinfo_rpt(applyid bigint comment "申请ID",siteno varchar(200) comment "分公司编号",sitename varchar(100) comment "分公司",productid varchar(50) comment "产品id",productname varchar(100) comment "产品名称",contracttemptype varchar(50) comment "合同模版-产品类型",datavalue varchar(200) comment "产品类型",custid int comment "客户id",custname_md5 varchar(320) comment "",docno varchar(6) comment "",docno_md5 string comment "",orgid int comment "组织id",orgname varchar(100) comment "组织名称",orgleader varchar(100) comment "组织负责人",lastauditresult int comment "最后审批结果",lastaudittime date comment "最后审批时间",loantype int comment "贷款类别，1、新增贷款 2、续贷 3、结清再贷",salesman varchar(50) comment "客户经理",empname varchar(50) comment "tb_sys_emp",areacodeno varchar(50) comment "区域码编号",areacodename varchar(200) comment "区域码名称",producttype varchar(50) comment "产品类型",issite int comment "是否网点",isaudit int comment "是否信审部",fullmembertime timestamp comment "转正时间",higherofficetime timestamp comment "晋升时间",movetime timestamp comment "调动时间",hkfs varchar(50) comment "applyinfo还款方式，不用payment。1、先息后本，2、等本等息",dkfs varchar(50) comment "applyinfo贷款方式，不用LOANMODE。押证，押车，押证押车，全款房抵押，按揭房二次抵押，信用",empno varchar(50) comment "tb_sys_emp中的",carno varchar(2) comment "",carno_md5 varchar(32) comment "",carbrand varchar(255) comment "车辆品牌",fcdz varchar(200) comment "tb_lm_dzyw",fczh varchar(50) comment "tb_lm_dzyw",assprice decimal(15,2) comment "评估价，以元为单位",status int comment "贷款状态:1资料维护、2贷款调查、3贷款审批、4合同待签订、5待放款、6正常还款、7逾期、8结清、9申请被拒绝、10申请被回退、11贷款作废，12客户取消,13客服主任复核,14贷款审议",surveyman varchar(50) comment "tb_lb_survey",surveytime date comment "tb_lb_survey",surveystatus int comment "tb_lb_survey",surveyuser varchar(50) comment "tb_lb_survey",msmanid varchar(50) comment "tb_lb_msqkinfo",msmanname_md5 varchar(320) comment "",mstime timestamp comment "tb_lb_msqkinfo面审时间",orgleaderid int comment "组织机构负责人员工ID",createby varchar(50) comment "建档人",hklx varchar(50) comment "户口类型 1:北上广深；2:本市；3:有公司地方；4:无公司地方",siteleaderid int comment "分公司负责人员工ID",siteleader_md5 string comment "",pgj varchar(50) comment "评估价",deposit decimal(15,2) comment "保证金",sources varchar(20) comment "信息来源",audittime timestamp comment "申请提交时间",amount decimal(15,2) comment "申请额度",applydate date comment "申请时间",directseller varchar(50) comment "直销坐席",createtime timestamp comment "建档时间",productarea varchar(20) comment "所属区域",phonecheckuser_md5 varchar(416) comment "",loantime int comment "贷款期数",direct_empid int comment "直销员工ID",applycode varchar(100) comment "申请编号",single_premiums int comment "趸缴产品(1:是,0:否)",inviterduties varchar(30) comment "邀请人岗位",inviterid varchar(30) comment "邀请人ID",invitercode_md5 varchar(192) comment "",invitername_md5 varchar(192) comment "",agentid varchar(30) comment "经纪人ID",agentcode_md5 varchar(192) comment "",agentname_md5 varchar(192) comment "",empleavecode_md5 varchar(320) comment "") comment "VIEW" partitioned by (fq_year string, fq_month string,fq_day string)

;
CREATE TABLE tmp.tb_data_count_tb_applyinfo_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
INSERT OVERWRITE TABLE stg_bi.tbl_basic_info_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,stadate stadate,applycode applycode,applyid applyid,org_contractno org_contractno,applydate applydate,passdate passdate,amount amount,loantime loantime,lastauditresult lastauditresult,creditlimit creditlimit,loandate loandate,withdrawdate withdrawdate,contractno contractno,loanamt loanamt,totalphases totalphases,hkfs hkfs,dkfs dkfs,producttype producttype,producttype2 producttype2,producttype3 producttype3,orgname orgname,orgproduct orgproduct,busi_license busi_license,qybzj qybzj,buymode buymode,sitename sitename,cityname cityname,provincename provincename,custname custname,age age,industry industry,salary salary,pgj pgj,purpose purpose,education education,marry marry,newcustflag newcustflag,update_time update_time,credit_id credit_id,credit_code credit_code from tmp.tbl_basic_info_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
select 'dw_org','dw_org_site_info',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dw_org.dw_org_site_info

;
select 'dw_org','dw_org_organization_info',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dw_org.dw_org_organization_info

;
drop table IF EXISTS  tmp.tbl_basic_info_rpt

;
select 'dw_car','dw_car_cust_basic_info',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dw_car.dw_car_cust_basic_info

;
INSERT OVERWRITE TABLE ods_bi.tb_applyinfo_rpt select applyid applyid,siteno siteno,sitename sitename,productid productid,productname productname,contracttemptype contracttemptype,datavalue datavalue,custid custid,custname_md5 custname_md5,docno docno,docno_md5 docno_md5,orgid orgid,orgname orgname,orgleader orgleader,lastauditresult lastauditresult,lastaudittime lastaudittime,loantype loantype,salesman salesman,empname empname,areacodeno areacodeno,areacodename areacodename,producttype producttype,issite issite,isaudit isaudit,fullmembertime fullmembertime,higherofficetime higherofficetime,movetime movetime,hkfs hkfs,dkfs dkfs,empno empno,carno carno,carno_md5 carno_md5,carbrand carbrand,fcdz fcdz,fczh fczh,assprice assprice,status status,surveyman surveyman,surveytime surveytime,surveystatus surveystatus,surveyuser surveyuser,msmanid msmanid,msmanname_md5 msmanname_md5,mstime mstime,orgleaderid orgleaderid,createby createby,hklx hklx,siteleaderid siteleaderid,siteleader_md5 siteleader_md5,pgj pgj,deposit deposit,sources sources,audittime audittime,amount amount,applydate applydate,directseller directseller,createtime createtime,productarea productarea,phonecheckuser_md5 phonecheckuser_md5,loantime loantime,direct_empid direct_empid,applycode applycode,single_premiums single_premiums,inviterduties inviterduties,inviterid inviterid,invitercode_md5 invitercode_md5,invitername_md5 invitername_md5,agentid agentid,agentcode_md5 agentcode_md5,agentname_md5 agentname_md5,empleavecode_md5 empleavecode_md5 from tmp.tb_applyinfo_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
INSERT OVERWRITE TABLE stg_bi.tb_applyinfo_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select applyid applyid,siteno siteno,sitename sitename,productid productid,productname productname,contracttemptype contracttemptype,datavalue datavalue,custid custid,custname_md5 custname_md5,docno docno,docno_md5 docno_md5,orgid orgid,orgname orgname,orgleader orgleader,lastauditresult lastauditresult,lastaudittime lastaudittime,loantype loantype,salesman salesman,empname empname,areacodeno areacodeno,areacodename areacodename,producttype producttype,issite issite,isaudit isaudit,fullmembertime fullmembertime,higherofficetime higherofficetime,movetime movetime,hkfs hkfs,dkfs dkfs,empno empno,carno carno,carno_md5 carno_md5,carbrand carbrand,fcdz fcdz,fczh fczh,assprice assprice,status status,surveyman surveyman,surveytime surveytime,surveystatus surveystatus,surveyuser surveyuser,msmanid msmanid,msmanname_md5 msmanname_md5,mstime mstime,orgleaderid orgleaderid,createby createby,hklx hklx,siteleaderid siteleaderid,siteleader_md5 siteleader_md5,pgj pgj,deposit deposit,sources sources,audittime audittime,amount amount,applydate applydate,directseller directseller,createtime createtime,productarea productarea,phonecheckuser_md5 phonecheckuser_md5,loantime loantime,direct_empid direct_empid,applycode applycode,single_premiums single_premiums,inviterduties inviterduties,inviterid inviterid,invitercode_md5 invitercode_md5,invitername_md5 invitername_md5,agentid agentid,agentcode_md5 agentcode_md5,agentname_md5 agentname_md5,empleavecode_md5 empleavecode_md5 from tmp.tb_applyinfo_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
drop table IF EXISTS  tmp.tb_applyinfo_rpt

;
select 'dw_car','dw_car_cust_loan_apply_info',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dw_car.dw_car_cust_loan_apply_info

;
SELECT host,port,username,password,database_name,concat('select ','"cognosdb",','"v_bd_tb_payment_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','cognosdb','.','v_bd_tb_payment_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='cognosdb'

;
select 'dw_car','dw_car_cust_loan_car_info',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dw_car.dw_car_cust_loan_car_info

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_payment_rpt

;
select 'dw_car','dw_car_cust_black_info',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dw_car.dw_car_cust_black_info

;
select 'dw_car','dw_car_cust_loan_repay_info',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dw_car.dw_car_cust_loan_repay_info

;
INSERT overwrite TABLE dw_car.dw_carcredit_payflow_info
SELECT a.id as apply_id,
py.id as payment_id,
emp.empno as salesman_no,
emp.orgid as group_code,
site.sitecode as site_code,
area.id as prov_area_code,
big.id as bigarea_code,
big.pid as bsns_unit_code,
a.id_card_md5 as id_code_enc,
'车主信用贷' as product_type,
e.`value` apply_phases,
case when a.repay_mode_name = '先息后本' then '1'
when a.repay_mode_name = '等本等息' then '2'
when a.repay_mode_name = '到期一次性' then '3'
when a.repay_mode_name = '等额本息' then '4' else '0' end repay_mode_name,
case when TO_DATE(a.create_time)>='2019-03-01' then d.LOANTYPE else '1' end loan_type,
a.STATUS as apply_status,
TO_DATE(a.create_time) as apply_date,
TO_DATE(a.create_time) as accept_date,
null as last_audit_time,
null as audit_result,
TO_DATE(con.create_time) as contract_date,
if(con.STATUS = 2,6,con.status) as contract_status,
TO_DATE(bor.success_time) as full_scale_date,
app_s.site_first_pay_date as site_first_pay_date,
1 as pay_number,
pay.confirmdate AS pay_date,
pay.confirmdate as withdraw_date,
cust_pay.cust_first_pay_date as cust_first_pay_date,
CASE WHEN d.loantype='1' THEN pay.payamt
ELSE 0
END AS act_new_pay_amt,
CASE WHEN loantype<>'1' THEN pay.payamt
ELSE 0
END AS act_reloan_pay_amt,
null as re_amt,
emp.isdirect as special_site_flag,
from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') as update_time
FROM ods_credit_loan.order a
LEFT JOIN ods_credit_loan.whitelist_detail b ON a.id = b.credit_order_id
left join dw_credit.carcredit_bug_data_detail f on a.id = f.orderid
LEFT JOIN ods_lms.tb_lm_contract c ON if(b.ods_lms_contract_no is not null,b.ods_lms_contract_no,f.lmsContractNo) = c.contractno
LEFT JOIN ods_lms.tb_lb_applyinfo d ON c.applyid = d.id
left join ods_credit_loan.tn_fms_loan py on a.id = py.order_id
left join ods_touna.dw_borrow bor on py.borrow_id = bor.id
LEFT JOIN ods_credit_loan.loan_term e ON a.loan_term_id = e.id
LEFT JOIN ods_credit_loan.contract con ON a.id = con.order_id
LEFT JOIN ods_lms.tb_sys_emp emp ON d.salesman = emp.id
left join ods_bi.tb_site_rpt site on d.SITENO = site.sitecode
left join ods_bi.tb_area area on site.areaid = area.id
left join ods_bi.tb_bigarea big on area.pid = big.id
LEFT JOIN (
select a.SITENO,min(TO_DATE(confirmdate)) site_first_pay_date
from ods_lms.tb_lb_applyinfo a
left join ods_lms.tb_lm_payment p on a.id = p.applyid
left join ( select paymentid
, applyid
, MAX(CASE WHEN paytype=1
THEN from_unixtime(unix_timestamp(confirmdate, 'yyyy-MM-dd HH:mm:ss'))
ELSE '1990-01-01 00:00:00' END) AS confirmdate
FROM ods_lms.tb_lm_paymentdetail
WHERE STATUS=1
GROUP BY paymentid ,applyid
) pd ON p.id = pd.PAYMENTID
WHERE loanstatus = 1 group by a.SITENO
) app_s ON d.SITENO = app_s.SITENO
LEFT JOIN (
SELECT pd.order_id AS apply_id
, min(TO_DATE(c.successtime)) AS confirmdate
, sum(if(c.money is not null,c.money,0)) AS payamt
FROM ods_credit_loan.tn_fms_loan pd
LEFT JOIN ods_credit_loan.tn_fms_loan_log c ON pd.order_id = c.order_id AND c.status = 3 AND c.catalog_type IN('FRONT_FEE','AMOUNT')
WHERE pd.product_type = 'car_owner_credit' and pd.payment_status = 3
group by pd.order_id
)pay
ON a.ID = pay.apply_id
LEFT JOIN (
select cust.docno_md5,min(TO_DATE(confirmdate)) cust_first_pay_date
from ods_lms.tb_lb_custinfo cust
left join ods_lms.tb_lm_payment p on cust.applyid = p.APPLYID
left join ( select paymentid
, applyid
, MAX(CASE WHEN paytype=1
THEN from_unixtime(unix_timestamp(confirmdate, 'yyyy-MM-dd HH:mm:ss'))
ELSE '1990-01-01 00:00:00' END) AS confirmdate
FROM ods_lms.tb_lm_paymentdetail
WHERE STATUS=1
GROUP BY paymentid ,applyid
) pd ON p.id = pd.PAYMENTID
WHERE loanstatus = 1 group by cust.docno_md5
)cust_pay
ON a.id_card_md5 = cust_pay.docno_md5
where a.product_code = 'car_owner_credit' and IF(b.whitelist_type is not null,b.whitelist_type,'') <> 'XD_CDJQBMD'

;
INSERT overwrite TABLE dw_car.dw_car_cust_loan_withdraw_info
SELECT T4.docno_md5    AS dw_cust_id
, T4.id           AS cust_id
, T4.custname_md5 AS cust_name
, T4.mobile       AS cust_mobile
, T4.mobile_md5   AS cust_mobile_enc
, T4.docno        AS credentials_no
, T4.docno_md5    AS credentials_no_enc
, T1.applyid      AS applyid
, T1.paymentid    AS loan_id
, T3.loanno       AS loan_no
, T3.contractno   AS contract_no
, T2.id           AS lend_log_id
, T2.trade_no
, T2.type
, T2.use
, T2.lend_type
, T2.out_lend_id
, T2.channel
, T2.status
, T2.status_identify
, T2.money
, T2.addtime
, T2.successtime
, T2.fail_reason
, T2.failtime
, T2.parentid
, T2.partner_status
, T2.belong_tail
, T2.proxy_channel
, T2.parent_applyid
, CURRENT_TIMESTAMP AS update_time
FROM ods_lms.tb_lm_paymentdetail T1
LEFT JOIN ods_lms.tb_lm_payment T3
ON T1.paymentid=T3.id
LEFT JOIN ods_touna.tn_lend_log T2
ON T1.applyid = T2.applyid
AND T1.paytype = T2.lend_type
AND T2.type = 3
AND T2.lend_type IN(1,2)
AND T2.STATUS = 3
LEFT JOIN ods_lms.tb_lb_custinfo T4
ON T1.applyid = T4.applyid
WHERE T1.STATUS=1
AND T1.PAYTYPE!=0

;
CREATE TABLE tmp.tb_data_count_tb_urge_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
SELECT host,port,username,password,database_name,concat('select ','"cognosdb",','"v_bd_tb_urge_rpt" table_name',', count(1) data_cnt, ','"2019" year,','"07" month,','"23" day,','now() update_time ','from ','cognosdb','.','v_bd_tb_urge_rpt') FROM tb_get_conn_info where host='172.30.17.245' and database_name='cognosdb'

;
INSERT OVERWRITE DIRECTORY '/user/ide/hive-limaoxing/20190723/155289/7917253029616752//data' SELECT * FROM atmp.ck_loan_app_report_data_pre WHERE event_type ="event_pagestart"

;
alter table tmp.tb_urge_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_urge_rpt/2019/07/23'

;
INSERT OVERWRITE TABLE ods_bi.tb_urge_rpt select id id,paymentid paymentid,linkman linkman,urgemode urgemode,content content,spendtime spendtime,urgedate urgedate,urgeman urgeman,status status,createby createby,createtime createtime,promisepay promisepay,promisepaydate promisepaydate,urgephases urgephases,situation situation,custstatus custstatus,instatus instatus from tmp.tb_urge_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
INSERT OVERWRITE TABLE stg_bi.tb_urge_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,paymentid paymentid,linkman linkman,urgemode urgemode,content content,spendtime spendtime,urgedate urgedate,urgeman urgeman,status status,createby createby,createtime createtime,promisepay promisepay,promisepaydate promisepaydate,urgephases urgephases,situation situation,custstatus custstatus,instatus instatus from tmp.tb_urge_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
DROP TABLE IF EXISTS tmp.dw_car_repay_status_risk_detail

;
CREATE TABLE tmp.dw_car_repay_status_risk_detail AS
SELECT rep_min.apply_id
, rep_min.credentials_no_enc
, rep_min.custname_md5
, rep_min.cust_mobile_enc
, rep_min.loan_id
, rep_min.contract_no
, rep_min.pawn_type
, rep_min.apply_date
, rep_min.total_repay_phase
, rep_min.pay_phase
, rep_min.shrepay_date
, rep_min.shrepay_capital
, rep_min.shrepay_interest
, rep_min.shrepay_manage
, rep_min.shrepay_gpsf
, rep_min.repay_date
, rep_min.actrepay_capital
, rep_min.actrepay_interest
, rep_min.actrepay_manage
, rep_min.actrepay_gpsf
, rep_min.totalredcapital
, rep_min.totalredint
, rep_min.totalredmanage
, rep_min.totalredcomint
, rep_min.repay_status
, rep_min.repay_status_all
, rep_min.overdue_days
, FIRST_VALUE(rep_min.repay_status) OVER(PARTITION BY rep_min.apply_id,rep_min.pay_phase ORDER BY rep_min.repay_date DESC) AS  phase_repay_status
, MAX(rep_min.repay_date)OVER(PARTITION BY rep_min.apply_id,rep_min.pay_phase) AS  phase_last_repay_date
FROM(
SELECT r.apply_id
, r.credentials_no_enc
, r.custname_md5
, r.cust_mobile_enc
, r.loan_id
, r.contract_no
, r.pawn_type
, r.apply_date
, r.total_repay_phase
, r.pay_phase
, r.shrepay_date
, r.shrepay_capital
, r.shrepay_interest
, r.shrepay_manage
, r.shrepay_gpsf
, r.repay_date
, r.actrepay_capital
, r.actrepay_interest
, r.actrepay_manage
, r.actrepay_gpsf
, r.totalredcapital
, r.totalredint
, r.totalredmanage
, r.totalredcomint
, r.repay_status
, MIN(CASE WHEN r.repay_status = 2 THEN 1 ELSE 0 END)OVER(PARTITION BY r.apply_id,r.pay_phase) AS repay_status_all
, CASE WHEN r.shrepay_capital+r.shrepay_interest+r.shrepay_manage+r.shrepay_gpsf-(r.totalredcapital+r.totalredint+r.totalredmanage+r.totalredcomint) = 0
THEN 1
ELSE 0
END AS special_settle_flag
, MAX(overdue_days)OVER(PARTITION BY r.apply_id,r.pay_phase) AS overdue_days
FROM dw_car.dw_car_cust_loan_repay_info r
WHERE r.return_detail_id IS NOT NULL
)rep_min
WHERE rep_min.special_settle_flag = 0

;
select 'dw_car','dw_carcredit_payflow_info',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dw_car.dw_carcredit_payflow_info

;
DROP TABLE IF EXISTS tmp.tbl_currentprog_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tbl_currentprog_rpt(id bigint comment "主键ID",stadate date comment "数据日期",applycode varchar(100) comment "申请编号",applyid bigint comment "申请id",contractno varchar(50) comment "合同号",noreturncapital decimal(16,2) comment "未还本金",currentduedays int comment "逾期天数",returnstatus varchar(16) comment "还款情况",carstatus varchar(8) comment "在库状态",aging int comment "账龄",update_time timestamp comment "更新时间",credit_id bigint comment "授信ID",credit_code varchar(100) comment "授信CODE") comment "进度表" partitioned by (fq_year string, fq_month string,fq_day string)

;
CREATE TABLE tmp.tb_data_count_tbl_currentprog_rpt(
data_src string COMMENT '数据源',
table_name string COMMENT '表名',
data_cnt string COMMENT '数据量',
year string COMMENT '年',
month string COMMENT '月',
day string COMMENT '日',
update_time string COMMENT '数据更新时间')
COMMENT '同步表数据量'
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS TEXTFILE

;
alter table tmp.tbl_currentprog_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tbl_currentprog_rpt/2019/07/23'

;
INSERT OVERWRITE TABLE ods_bi.tbl_currentprog_rpt select id id,stadate stadate,applycode applycode,applyid applyid,contractno contractno,noreturncapital noreturncapital,currentduedays currentduedays,returnstatus returnstatus,carstatus carstatus,aging aging,update_time update_time,credit_id credit_id,credit_code credit_code from tmp.tbl_currentprog_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
INSERT OVERWRITE TABLE stg_bi.tbl_currentprog_rpt PARTITION (fq_year=2019 , fq_month=07 ,fq_day= 23) select id id,stadate stadate,applycode applycode,applyid applyid,contractno contractno,noreturncapital noreturncapital,currentduedays currentduedays,returnstatus returnstatus,carstatus carstatus,aging aging,update_time update_time,credit_id credit_id,credit_code credit_code from tmp.tbl_currentprog_rpt WHERE fq_year=2019 and fq_month=07 and fq_day=23

;
drop table IF EXISTS  tmp.tbl_currentprog_rpt

;
INSERT overwrite TABLE dw_car.dw_car_repay_status_risk
SELECT T1.*
, DENSE_RANK() OVER(PARTITION BY T1.cust_id ORDER BY apply_date DESC) AS apply_rank
, CASE WHEN repay_status = 0 AND sh_repay_date < CURRENT_DATE
THEN 1
WHEN repay_status = 1 AND TO_DATE(act_repay_date) > TO_DATE(sh_repay_date)
THEN 1
ELSE 0
END AS is_overdue
, CASE WHEN repay_status = 0 AND sh_repay_date < CURRENT_DATE
THEN DATEDIFF(CURRENT_DATE,sh_repay_date)
WHEN repay_status = 1 AND TO_DATE(act_repay_date) > TO_DATE(sh_repay_date) AND TO_DATE(act_repay_date) > ADD_MONTHS(TO_DATE(sh_repay_date),1)
THEN DATEDIFF(ADD_MONTHS(sh_repay_date,1),sh_repay_date)
WHEN repay_status = 1 AND TO_DATE(act_repay_date) > TO_DATE(sh_repay_date) AND TO_DATE(act_repay_date) <= ADD_MONTHS(TO_DATE(sh_repay_date),1)
THEN DATEDIFF(act_repay_date,sh_repay_date)
ELSE 0
END AS over_days
, CASE WHEN repay_status = 0 AND sh_repay_date < CURRENT_DATE
THEN 2
WHEN repay_status = 1 AND TO_DATE(act_repay_date) > TO_DATE(sh_repay_date)
THEN 1
ELSE 0
END AS overdue_status
, ROW_NUMBER()OVER(PARTITION BY apply_id ORDER BY current_term DESC) AS current_term_desc
, CURRENT_TIMESTAMP AS update_time
FROM (
SELECT credentials_no_enc AS cust_id
, custname_md5
, cust_mobile_enc       AS cust_mobile_md5
, apply_id
, loan_id
, contract_no
, pawn_type
, MAX(apply_date)       AS apply_date
, MAX(total_repay_phase)AS terms
, pay_phase             AS current_term
, MAX(shrepay_date)     AS sh_repay_date
, MAX(shrepay_capital)  AS sh_repay_capital
, MAX(shrepay_interest) AS sh_repay_interest
, MAX(shrepay_manage)   AS sh_repay_manage
, MAX(shrepay_gpsf)     AS sh_repay_gpsf
, MAX(repay_date)       AS act_repay_date
, SUM(actrepay_capital) AS act_repay_capital
, SUM(actrepay_interest)AS act_repay_interest
, SUM(actrepay_manage)  AS act_repay_manage
, SUM(actrepay_gpsf)    AS act_repay_gpsf
, SUM(totalredcapital)  AS total_red_capital
, SUM(totalredint)      AS total_red_interest
, SUM(totalredmanage)   AS total_red_manage
, SUM(totalredcomint)   AS total_red_gpsf
, MAX(shrepay_capital)-SUM(actrepay_capital)-SUM(totalredcapital) AS current_left_capital
, MAX(CASE WHEN phase_repay_status = 2 THEN 1 ELSE 0 END) AS repay_status
, MAX(repay_status_all) AS all_fee_repay_status
, MAX(overdue_days)     AS xd_overdue_days
FROM tmp.dw_car_repay_status_risk_detail
GROUP BY credentials_no_enc
, custname_md5
, cust_mobile_enc
, apply_id
, loan_id
, contract_no
, pawn_type
, pay_phase
) T1

;
alter table tmp.tbl_return_detail_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tbl_return_detail_rpt/2019/07/23'

;
insert overwrite table dm_mdcs.dw_car_mdcs_applyflow_info
select
app.apply_id,
app.salesman,
emp.emp_group_id,
site.site_code,
site.site_prov_area_id,
site.site_bigarea_id,
site.site_BU_id,
app.credentials_no_enc,
app.product_type,
app.apply_phases,
case app.repay_mode_name when '1' then '先息后本'
when '2' then '等本等息'
when '3' then '一次性还款'
when '4' then '等额本息'
when '5' then '利随本清'
end repay_mode_name,
app.loan_type,
app.apply_status,
app.apply_date,
app.accept_date,
app.last_audit_time,
app.audit_result,
app.contract_date,
app.contract_status,
app.first_pay_date,
case when app.first_pay_date is null then '0' else '1' end pay_status,
cust_pay.cust_first_pay_date,
profit.remain_repay_amt,
profit.early_clear_date,
app.is_early_clear,
profit.early_clear_amt,
emp_s.special_site_flag,
from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss')
from dw_car.dw_car_cust_loan_apply_info app
left join dw_org.dw_org_employee_info emp_s on app.direct_emp_id=emp_s.emp_id
left join dw_org.dw_org_employee_info emp on app.salesman=emp.emp_no
left join dw_org.dw_org_site_info site on app.site_no=site.site_code
left join (
select
rep_s.apply_id,
sum(case when rep_s.repay_status !=2 then rep_s.shrepay_capital else 0 end) remain_repay_amt,
max(settle_date) early_clear_date,
max(case when app_s.is_early_clear='1' then rep_s.actrepay_capital else 0 end) early_clear_amt
from dw_car.dw_car_cust_loan_repay_info rep_s
left join dw_car.dw_car_cust_loan_apply_info app_s on rep_s.apply_id=app_s.apply_id
group by rep_s.apply_id
) profit on app.apply_id=profit.apply_id
left join (
select credentials_no_enc,
min(to_date(first_pay_date)) cust_first_pay_date
from dw_car.dw_car_cust_loan_apply_info a
group by credentials_no_enc
) cust_pay on app.credentials_no_enc=cust_pay.credentials_no_enc
where ((emp_s.special_site_flag='1' and site.site_BU_id in('1985','1488'))
or (emp_s.special_site_flag='2' and site.site_BU_id in('1985','1488'))
or (emp_s.special_site_flag not in ('1','2','3') or (emp_s.special_site_flag is null)))
and (app.product_no!='000001' or app.product_no is null)
AND (emp_s.emp_name <> '江宗桂' OR emp_s.emp_name IS NULL)
AND app.product_type NOT IN('蚂蚁贷','360车贷')

;
INSERT overwrite TABLE dm_mdcs.dw_car_mdcs_payflow_info
SELECT app.apply_id
, app.payment_id
, app.salesman
, emp.emp_group_id
, site.site_code
, site.site_prov_area_id
, site.site_bigarea_id
, site.site_BU_id
, app.credentials_no_enc
, app.product_type
, app.apply_phases
, CASE app.repay_mode_name
WHEN '1' THEN '先息后本'
WHEN '2' THEN '等本等息'
WHEN '3' THEN '一次性还款'
WHEN '4' THEN '等额本息'
WHEN '5' THEN '利随本清'
END repay_mode_name
, app.loan_type
, app.apply_status
, app.apply_date
, app.accept_date
, app.last_audit_time
, app.audit_result
, app.contract_date
, app.contract_status
, TO_DATE(app.full_scale_time)
, app_s.site_first_pay_date
, pay.paytype     AS pay_number
, pay.confirmdate AS pay_date
, TO_DATE(draw.withdraw_time)
, cust_pay.cust_first_pay_date
, CASE WHEN app.loan_type='1' AND pay.PAYTYPE = 1 THEN pay.re_pay_amt - pay.leftamt - pay.not_first_amt
WHEN app.loan_type='1' AND pay.PAYTYPE <> 1 THEN pay.payamt
ELSE 0
END AS act_new_pay_amt
, CASE WHEN app.loan_type<>'1' AND pay.PAYTYPE = 1 THEN pay.re_pay_amt - pay.leftamt - pay.not_first_amt
WHEN app.loan_type<>'1' AND pay.PAYTYPE <> 1 THEN pay.payamt
ELSE 0
END AS act_reloan_pay_amt
, pay.re_pay_amt
, emp_s.special_site_flag
, from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss')
FROM dw_car.dw_car_cust_loan_apply_info app
LEFT JOIN dw_org.dw_org_employee_info emp_s
ON app.direct_emp_id=emp_s.emp_id
LEFT JOIN dw_org.dw_org_employee_info emp
ON app.salesman=emp.emp_no
LEFT JOIN dw_org.dw_org_site_info site
ON app.site_no=site.site_code
LEFT JOIN (
SELECT site_no
, MIN(first_pay_date) site_first_pay_date
FROM dw_car.dw_car_cust_loan_apply_info app
GROUP BY site_no
) app_s
ON app.site_no=app_s.site_no
LEFT JOIN (
SELECT pd.applyid              AS apply_id
, pd.paytype
, TO_DATE(pd.confirmdate) AS confirmdate
, pd.payamt               AS payamt
, pd.actualpayamt actualpayamt
, pd.status
, CASE WHEN pd.PAYTYPE=1 THEN aul.LASTAUDITAMT ELSE 0 END re_pay_amt
, pay.leftamt
, SUM(CASE WHEN pd.PAYTYPE <>1 THEN pd.payamt ELSE 0 END)OVER(PARTITION BY pd.applyid) AS not_first_amt
FROM ods_lms.tb_lm_paymentdetail pd
LEFT JOIN ods_lms.tb_lb_applyaudit_last aul
ON pd.applyid=aul.applyid
LEFT JOIN ods_lms.tb_lm_payment pay
ON pd.applyid=pay.applyid
WHERE pd.status IN(0,1)
AND pd.paytype!=0
)pay
ON app.apply_id = pay.apply_id
LEFT JOIN (
SELECT pd.applyid
, pd.paytype
, MIN(draw.successtime) AS withdraw_time
FROM ods_lms.tb_lm_paymentdetail pd
LEFT JOIN dw_car.dw_car_cust_loan_withdraw_info draw
ON pd.paymentid = draw.loan_id
AND pd.paytype = draw.lend_type
WHERE pd.status=1
AND pd.paytype!=0
GROUP BY pd.applyid
, pd.paytype
)draw
ON pay.apply_id = draw.applyid AND pay.paytype = draw.paytype
LEFT JOIN (
SELECT credentials_no_enc
, MIN(TO_DATE(first_pay_date)) cust_first_pay_date
FROM dw_car.dw_car_cust_loan_apply_info a
GROUP BY credentials_no_enc
)cust_pay
ON app.credentials_no_enc=cust_pay.credentials_no_enc
WHERE ((emp_s.special_site_flag='1' AND site.site_BU_id IN('1985','1488'))
OR
(emp_s.special_site_flag='2' AND site.site_BU_id IN('1985','1488'))
OR
(emp_s.special_site_flag NOT IN ('1','2','3') OR (emp_s.special_site_flag IS NULL))
)
AND (app.product_no!='000001' OR app.product_no IS NULL)
AND (emp_s.emp_name <> '江宗桂' OR emp_s.emp_name IS NULL)
AND app.product_type NOT IN('蚂蚁贷','360车贷')

;
select 'dm_mdcs','dw_car_mdcs_orglevel_info',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dm_mdcs.dw_car_mdcs_orglevel_info

;
select 'ods_bi','tbl_return_detail_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tbl_return_detail_rpt

;
select 'dm_mdcs','dw_car_mdcs_applyflow_info',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dm_mdcs.dw_car_mdcs_applyflow_info

;
select 'dm_mdcs','dw_car_mdcs_repayflow_info',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dm_mdcs.dw_car_mdcs_repayflow_info

;
DROP TABLE IF EXISTS tmp.dw_car_mdcs_kpi_tmp

;
CREATE TABLE tmp.dw_car_mdcs_kpi_tmp AS
SELECT * FROM (
SELECT apply_id
, salesman_no
, group_code
, site_code
, prov_area_code
, bigarea_code
, bsns_unit_code
, product_type
, apply_phases
, repay_mode_name
, loan_type
, apply_status
, apply_date
, accept_date
, last_audit_time
, audit_result
, contract_date
, contract_status
, site_first_pay_date
, pay_number
, pay_date
, act_new_pay_amt
, act_reloan_pay_amt
, RE_amt
FROM (
SELECT 'nopay' AS apply_id
, COALESCE(emp.emp_no,pay.salesman_no) AS salesman_no
, emp.group_code AS group_code
, site_code
, prov_area_code
, bigarea_code
, bsns_unit_code
, NULL AS product_type
, NULL AS apply_phases
, NULL AS repay_mode_name
, NULL AS loan_type
, NULL AS apply_status
, NULL AS apply_date
, NULL AS accept_date
, NULL AS last_audit_time
, NULL AS audit_result
, NULL AS contract_date
, NULL AS contract_status
, NULL AS site_first_pay_date
, 0 AS pay_number
, COALESCE(emp.date_day,pay.pay_date) AS pay_date
, 0 AS act_new_pay_amt
, 0 AS act_reloan_pay_amt
, 0 AS RE_amt
FROM(
SELECT date_day
, emp_join_date
, emp_bsns_unit AS bsns_unit_code
, emp_bigarea AS bigarea_code
, emp_prov_area AS prov_area_code
, emp_site AS site_code
, emp_group_id AS group_code
, emp_no,emp_name AS name
FROM (
SELECT date_day FROM common_db.tb_common_calendar WHERE date_day between date_sub(current_date,8) and current_date) cal
CROSS JOIN(
SELECT *
FROM dw_org.dw_org_employee_info
WHERE is_salesman=1
and emp_no!='' and emp_no is not null
AND is_leave='0'
AND emp_bsns_unit IS NOT NULL
AND emp_bigarea iS NOT NULL
AND emp_duty IN('客户经理','服务商经理')
AND emp_bigarea!='1235') emp_sale
WHERE emp_sale.emp_join_date <= cal.date_day
) emp
FULL JOIN(SELECT salesman_no,pay_date FROM dm_mdcs.dw_car_mdcs_payflow_info payflow WHERE salesman_no!='' and salesman_no is not null
and pay_date IS NOT NULL and pay_date between date_sub(current_date,8) and current_date) pay
ON emp.emp_no=pay.salesman_no
AND emp.date_day=pay.pay_date
WHERE pay.salesman_no IS NULL
) nopay_emp
UNION ALL
SELECT apply_id
, salesman_no
, group_code
, site_code
, prov_area_code
, bigarea_code
, bsns_unit_code
, product_type
, apply_phases
, repay_mode_name
, loan_type
, apply_status
, apply_date
, accept_date
, last_audit_time
, audit_result
, contract_date
, contract_status
, site_first_pay_date
, pay_number
, pay_date
, act_new_pay_amt
, act_reloan_pay_amt
, RE_amt
FROM dm_mdcs.dw_car_mdcs_payflow_info
)dw_car_mdcs_kpi_tmp

;
INSERT overwrite TABLE dm_mdcs.dm_mdcs_kpi_cmp_day
SELECT
ROW_NUMBER() OVER () AS id
,bsns_unit_code
, bigarea_code
, prov_area_code
, site_code
, group_code
,emp_no
,reserve_org_code
,org_level
,statistic_date
,actual_new_amt
,actual_new_amt_ystd
,(case when actual_new_amt_lastweek!=0 THEN
cast((actual_new_amt_ystd-actual_new_amt_lastweek)*1.0/actual_new_amt_lastweek AS DECIMAL(10,6)) ELSE 0 END) w_act_new_pay_amt_cmp
,approve_count
,approve_count_ystd
,(case when approve_count_lastweek!=0 THEN
cast((approve_count_ystd-approve_count_lastweek)*1.0/approve_count_lastweek AS DECIMAL(10,6))  ELSE 0 END) w_apply_count_cmp
,sign_contract_count
,sign_contract_count_ystd
,(case when sign_contract_count_lastweek!=0 THEN
cast((sign_contract_count_ystd-sign_contract_count_lastweek)*1.0/sign_contract_count_lastweek AS DECIMAL(10,6))  ELSE 0 END) w_sign_contract_count_cmp
, CURRENT_TIMESTAMP AS create_time
, 'admin' AS create_by
, CURRENT_TIMESTAMP AS update_time
, 'admin' AS update_by
FROM
(
SELECT bsns_unit_code
, bigarea_code
, prov_area_code
, site_code
, group_code
, salesman_no AS  emp_no
, NULL AS reserve_org_code
, 'Emp' AS org_level
, from_unixtime(unix_timestamp(current_date,'yyyy-MM-dd'),'yyyyMMdd') AS statistic_date
, sum(case when pay_date=current_date THEN act_new_pay_amt ELSE 0 END) actual_new_amt
, SUM(case WHEN apply_date=current_date and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count
, count(distinct CASE WHEN apply_date=current_date and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count
, sum(case when pay_date=date_sub(current_date,1) THEN act_new_pay_amt ELSE 0 END) actual_new_amt_ystd
, SUM(case WHEN apply_date=date_sub(current_date,1) and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count_ystd
, count(distinct CASE WHEN apply_date=date_sub(current_date,1) and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count_ystd
, sum(case when pay_date=date_sub(current_date,8) THEN act_new_pay_amt ELSE 0 END) actual_new_amt_lastweek
, SUM(case WHEN apply_date=date_sub(current_date,8) and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count_lastweek
, count(distinct CASE WHEN apply_date=date_sub(current_date,8) and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count_lastweek
FROM tmp.dw_car_mdcs_kpi_tmp where  bsns_unit_code is not null AND apply_id is not null
GROUP BY bsns_unit_code,bigarea_code,prov_area_code,site_code,group_code,salesman_no
union all
SELECT bsns_unit_code
, bigarea_code
, prov_area_code
, site_code
, group_code
, NULL AS  emp_no
, NULL AS reserve_org_code
, 'Group' AS org_level
, from_unixtime(unix_timestamp(current_date,'yyyy-MM-dd'),'yyyyMMdd') AS statistic_date
, sum(case when pay_date=current_date THEN act_new_pay_amt ELSE 0 END) actual_new_amt
, SUM(case WHEN apply_date=current_date and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count
, count(distinct CASE WHEN apply_date=current_date and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count
, sum(case when pay_date=date_sub(current_date,1) THEN act_new_pay_amt ELSE 0 END) actual_new_amt_ystd
, SUM(case WHEN apply_date=date_sub(current_date,1) and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count_ystd
, count(distinct CASE WHEN apply_date=date_sub(current_date,1) and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count_ystd
, sum(case when pay_date=date_sub(current_date,8) THEN act_new_pay_amt ELSE 0 END) actual_new_amt_lastweek
, SUM(case WHEN apply_date=date_sub(current_date,8) and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count_lastweek
, count(distinct CASE WHEN apply_date=date_sub(current_date,8) and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count_lastweek
FROM tmp.dw_car_mdcs_kpi_tmp where  bsns_unit_code is not null AND apply_id is not null
GROUP BY bsns_unit_code,bigarea_code,prov_area_code,site_code,group_code
union all
SELECT bsns_unit_code
, bigarea_code
, prov_area_code
, site_code
, NULL AS group_code
, NULL AS  emp_no
, NULL AS reserve_org_code
, 'Site' AS org_level
, from_unixtime(unix_timestamp(current_date,'yyyy-MM-dd'),'yyyyMMdd') AS statistic_date
, sum(case when pay_date=current_date THEN act_new_pay_amt ELSE 0 END) actual_new_amt
, SUM(case WHEN apply_date=current_date and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count
, count(distinct CASE WHEN apply_date=current_date and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count
, sum(case when pay_date=date_sub(current_date,1) THEN act_new_pay_amt ELSE 0 END) actual_new_amt_ystd
, SUM(case WHEN apply_date=date_sub(current_date,1) and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count_ystd
, count(distinct CASE WHEN apply_date=date_sub(current_date,1) and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count_ystd
, sum(case when pay_date=date_sub(current_date,8) THEN act_new_pay_amt ELSE 0 END) actual_new_amt_lastweek
, SUM(case WHEN apply_date=date_sub(current_date,8) and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count_lastweek
, count(distinct CASE WHEN apply_date=date_sub(current_date,8) and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count_lastweek
FROM tmp.dw_car_mdcs_kpi_tmp where  bsns_unit_code is not null AND apply_id is not null
GROUP BY bsns_unit_code,bigarea_code,prov_area_code,site_code
union all
SELECT bsns_unit_code
, bigarea_code
, prov_area_code
, NULL AS site_code
, NULL AS group_code
, NULL AS  emp_no
, NULL AS reserve_org_code
, 'ProvinceArea' AS org_level
, from_unixtime(unix_timestamp(current_date,'yyyy-MM-dd'),'yyyyMMdd') AS statistic_date
, sum(case when pay_date=current_date THEN act_new_pay_amt ELSE 0 END) actual_new_amt
, SUM(case WHEN apply_date=current_date and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count
, count(distinct CASE WHEN apply_date=current_date and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count
, sum(case when pay_date=date_sub(current_date,1) THEN act_new_pay_amt ELSE 0 END) actual_new_amt_ystd
, SUM(case WHEN apply_date=date_sub(current_date,1) and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count_ystd
, count(distinct CASE WHEN apply_date=date_sub(current_date,1) and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count_ystd
, sum(case when pay_date=date_sub(current_date,8) THEN act_new_pay_amt ELSE 0 END) actual_new_amt_lastweek
, SUM(case WHEN apply_date=date_sub(current_date,8) and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count_lastweek
, count(distinct CASE WHEN apply_date=date_sub(current_date,8) and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count_lastweek
FROM tmp.dw_car_mdcs_kpi_tmp where  bsns_unit_code is not null AND apply_id is not null
GROUP BY bsns_unit_code,bigarea_code,prov_area_code
union all
SELECT bsns_unit_code
, bigarea_code
, NULL AS prov_area_code
, NULL AS site_code
, NULL AS group_code
, NULL AS  emp_no
, NULL AS reserve_org_code
, 'BigArea' AS org_level
, from_unixtime(unix_timestamp(current_date,'yyyy-MM-dd'),'yyyyMMdd') AS statistic_date
, sum(case when pay_date=current_date THEN act_new_pay_amt ELSE 0 END) actual_new_amt
, SUM(case WHEN apply_date=current_date and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count
, count(distinct CASE WHEN apply_date=current_date and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count
, sum(case when pay_date=date_sub(current_date,1) THEN act_new_pay_amt ELSE 0 END) actual_new_amt_ystd
, SUM(case WHEN apply_date=date_sub(current_date,1) and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count_ystd
, count(distinct CASE WHEN apply_date=date_sub(current_date,1) and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count_ystd
, sum(case when pay_date=date_sub(current_date,8) THEN act_new_pay_amt ELSE 0 END) actual_new_amt_lastweek
, SUM(case WHEN apply_date=date_sub(current_date,8) and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count_lastweek
, count(distinct CASE WHEN apply_date=date_sub(current_date,8) and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count_lastweek
FROM tmp.dw_car_mdcs_kpi_tmp where  bsns_unit_code is not null AND apply_id is not null
GROUP BY bsns_unit_code,bigarea_code
union all
SELECT bsns_unit_code
, NULL AS bigarea_code
, NULL AS prov_area_code
, NULL AS site_code
, NULL AS group_code
, NULL AS  emp_no
, NULL AS reserve_org_code
, 'BsnsUnit' AS org_level
, from_unixtime(unix_timestamp(current_date,'yyyy-MM-dd'),'yyyyMMdd') AS statistic_date
, sum(case when pay_date=current_date THEN act_new_pay_amt ELSE 0 END) actual_new_amt
, SUM(case WHEN apply_date=current_date and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count
, count(distinct CASE WHEN apply_date=current_date and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count
, sum(case when pay_date=date_sub(current_date,1) THEN act_new_pay_amt ELSE 0 END) actual_new_amt_ystd
, SUM(case WHEN apply_date=date_sub(current_date,1) and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count_ystd
, count(distinct CASE WHEN apply_date=date_sub(current_date,1) and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count_ystd
, sum(case when pay_date=date_sub(current_date,8) THEN act_new_pay_amt ELSE 0 END) actual_new_amt_lastweek
, SUM(case WHEN apply_date=date_sub(current_date,8) and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count_lastweek
, count(distinct CASE WHEN apply_date=date_sub(current_date,8) and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count_lastweek
FROM tmp.dw_car_mdcs_kpi_tmp where  bsns_unit_code is not null AND apply_id is not null
GROUP BY bsns_unit_code
union all
SELECT NULL AS bsns_unit_code
, NULL AS bigarea_code
, NULL AS prov_area_code
, NULL AS site_code
, NULL AS group_code
, NULL AS  emp_no
, NULL AS reserve_org_code
, 'All' AS org_level
, from_unixtime(unix_timestamp(current_date,'yyyy-MM-dd'),'yyyyMMdd') AS statistic_date
, sum(case when pay_date=current_date THEN act_new_pay_amt ELSE 0 END) actual_new_amt
, SUM(case WHEN apply_date=current_date and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count
, count(distinct CASE WHEN apply_date=current_date and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count
, sum(case when pay_date=date_sub(current_date,1) THEN act_new_pay_amt ELSE 0 END) actual_new_amt_ystd
, SUM(case WHEN apply_date=date_sub(current_date,1) and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count_ystd
, count(distinct CASE WHEN apply_date=date_sub(current_date,1) and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count_ystd
, sum(case when pay_date=date_sub(current_date,8) THEN act_new_pay_amt ELSE 0 END) actual_new_amt_lastweek
, SUM(case WHEN apply_date=date_sub(current_date,8) and apply_id!='nopay' THEN  1 ELSE 0 END) approve_count_lastweek
, count(distinct CASE WHEN apply_date=date_sub(current_date,8) and contract_status ='6'  THEN apply_id ELSE NULL END) AS sign_contract_count_lastweek
FROM tmp.dw_car_mdcs_kpi_tmp where  bsns_unit_code is not null AND apply_id is not null  ) kpi

;
select 'dm_mdcs','dm_mdcs_kpi_cmp_day',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from dm_mdcs.dm_mdcs_kpi_cmp_day

;
alter table tmp.tb_currentprog_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_currentprog_rpt/2019/07/23'

;
select 'ods_bi','tb_currentprog_rpt',count(1),'2019','07','23',from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') from ods_bi.tb_currentprog_rpt

;
drop table IF EXISTS  tmp.tb_currentprog_rpt

;
DROP TABLE IF EXISTS tmp.tb_applyflow_rpt

;
CREATE TABLE IF NOT EXISTS tmp.tb_applyflow_rpt(id int comment "纪录ID,主键，序列SEQ_applyflow_ID",applyid int comment "贷款申请记录ID",signcode varchar(50) comment "统计标识符",flowsign int comment "流程序号,10录单情况，20提交情况，30复核情况，40初审分配情况，50初审情况，60~69审批情况,",flowname varchar(100) comment "流程名称",actiondate varchar(50) comment "处理时间",actionby string comment "处理人",result varchar(1024) comment "最终结论",status int comment "状态,0未执行，1在处理，2已完成",siteno varchar(200) comment "网点号",sitename varchar(100) comment "分公司",contractno varchar(100) comment "") comment "VIEW" partitioned by (fq_year string, fq_month string,fq_day string)

;
select data_src,table_name,data_cnt,year,month,day,update_time  from tmp.tb_data_count_tb_applyflow_rpt

;
alter table tmp.tb_applyflow_rpt add if not exists partition (fq_year='2019',fq_month='07',fq_day='23') location '/user/hive/warehouse/tmp.db/tb_applyflow_rpt/2019/07/23'

;
