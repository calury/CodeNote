# agent1监控端口，然后使用拦截器加上静态信息：wherefrom:bigdata，之后通过多路选择器判断event需要发往哪个目标channel
agent1.sources = r1
agent1.sinks = k1 k2
agent1.channels = c1 c2

# 表示agent1的输入源类型为netcat
agent1.sources.r1.type = netcat
agent1.sources.r1.bind = localhost
agent1.sources.r1.port = 44444
# 配置拦截器，使用的是静态拦截器
agent1.sources.r1.interceptors = i1
agent1.sources.r1.interceptors.i1.type = static
# 静态拦截器为每个event的header都加上一组k/v为 wherefrom:bigdata 的信息
agent1.sources.r1.interceptors.i1.key = wherefrom
agent1.sources.r1.interceptors.i1.value = bigdata

# 配置选择器，使用multiplexing
agent1.sources.r1.selector.type = multiplexing
agent1.sources.r1.selector.header = wherefrom
agent1.sources.r1.selector.mapping.bigdata = c1
agent1.sources.r1.selector.default = c2

# Describe the sink
# sink端的avro是一个数据发送者
agent1.sinks.k1.type = avro
agent1.sinks.k1.hostname = hadoop102 
agent1.sinks.k1.port = 4141

agent1.sinks.k2.type = avro
agent1.sinks.k2.hostname = hadoop102
agent1.sinks.k2.port = 4142

# Describe the channel
agent1.channels.c1.type = memory
agent1.channels.c1.capacity = 10000
agent1.channels.c1.transactionCapacity = 1000

agent1.channels.c2.type = memory
agent1.channels.c2.capacity = 10000
agent1.channels.c2.transactionCapacity = 1000

# Bind the source and sink to the channel
agent1.sources.r1.channels = c1 c2
agent1.sinks.k1.channel = c1
agent1.sinks.k2.channel = c2
