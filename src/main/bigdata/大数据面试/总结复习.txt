
Hive的优化：
0、资源增加

1、针对语句本身的优化

2、按照业务逻辑的优化

3、参数优化

4、流程和规范上的优化
    规定要使用dw层

==============================
数据倾斜优化：

1、 join无关的优化
    groupby
    count(distinct )

2、 大表join小表
    mapjoin

3、 大表join大表
    方案1：转为mapjoin，通过限制行或者列
    方案2：使用case when以及随机数
    方案3：将小表放大倍数-通用做法、专用做法
    方案4：动态一分为二，使用union all


=======================
======== HBase ========
=======================
hbase的定位实际上可以理解为就是传统关系型数据库mysql的升级版，在海量的数据量（10亿级别）依然能保持强劲的查询性能（慢的不会很明显）

传统关系的数据库的弊端出现在
- 高并发的时候
- 有group by等要求的时候

hbase在逻辑上的本质是表。
逻辑结构上：是关系型二维表
物理存储结构上：kv型的二维结构

